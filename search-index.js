var searchIndex = JSON.parse('{\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","i":[[8,"BitField","bit_field","A generic trait which provides methods for extracting and …",null,null],[18,"BIT_LENGTH","","The number of bits in this bit field.",0,null],[10,"get_bit","","Obtains the bit at the index <code>bit</code>; note that index 0 is …",0,[[["usize",15]],["bool",15]]],[10,"get_bits","","Obtains the range of bits specified by <code>range</code>; note that …",0,[[["usize",15],["rangebounds",8]]]],[10,"set_bit","","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …",0,[[["usize",15],["bool",15]]]],[10,"set_bits","","Sets the range of bits defined by the range <code>range</code> to the …",0,[[["usize",15],["rangebounds",8]]]],[8,"BitArray","","",null,null],[10,"bit_length","","Returns the length, eg number of bits, in this bit array.",1,[[],["usize",15]]],[10,"get_bit","","Obtains the bit at the index <code>bit</code>; note that index 0 is …",1,[[["usize",15]],["bool",15]]],[10,"get_bits","","Obtains the range of bits specified by <code>range</code>; note that …",1,[[["usize",15],["rangebounds",8]]]],[10,"set_bit","","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …",1,[[["usize",15],["bool",15]]]],[10,"set_bits","","Sets the range of bits defined by the range <code>range</code> to the …",1,[[["usize",15],["rangebounds",8]]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","i":[[0,"atomic","crossbeam_utils","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types …",null,null],[16,"Val","","Type returned by <code>load_consume</code>.",0,null],[10,"load_consume","","Loads a value from the atomic using a \\\"consume\\\" memory …",0,[[]]],[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[11,"from","crossbeam_utils::atomic","",1,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","crossbeam_utils","",2,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"from","crossbeam_utils::atomic","",1,[[],["atomiccell",3]]],[11,"from","crossbeam_utils","",2,[[]]],[11,"fmt","crossbeam_utils::atomic","",1,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"eq","","",2,[[["cachepadded",3]],["bool",15]]],[11,"ne","","",2,[[["cachepadded",3]],["bool",15]]],[11,"hash","","",2,[[]]],[11,"clone","","",2,[[],["cachepadded",3]]],[11,"default","crossbeam_utils::atomic","",1,[[],["atomiccell",3]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded",3]]],[11,"default","","",3,[[],["backoff",3]]],[11,"new","crossbeam_utils::atomic","Creates a new atomic cell initialized with <code>val</code>.",1,[[],["atomiccell",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",1,[[]]],[11,"is_lock_free","","Returns <code>true</code> if operations on values of this type are …",1,[[],["bool",15]]],[11,"store","","Stores <code>val</code> into the atomic cell.",1,[[]]],[11,"swap","","Stores <code>val</code> into the atomic cell and returns the previous …",1,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this …",1,[[]]],[11,"take","","Takes the value of the atomic cell, leaving …",1,[[]]],[11,"load","","Loads a value from the atomic cell.",1,[[]]],[11,"compare_and_swap","","If the current value equals <code>current</code>, stores <code>new</code> into the …",1,[[]]],[11,"compare_exchange","","If the current value equals <code>current</code>, stores <code>new</code> into the …",1,[[],["result",4]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",1,[[["usize",15]],["usize",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",1,[[["usize",15]],["usize",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",1,[[["usize",15]],["usize",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",1,[[["usize",15]],["usize",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",1,[[["usize",15]],["usize",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",1,[[["isize",15]],["isize",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",1,[[["isize",15]],["isize",15]]],[11,"fetch_and","","Applies bitwise \\\"and\\\" to the current value and returns …",1,[[["isize",15]],["isize",15]]],[11,"fetch_or","","Applies bitwise \\\"or\\\" to the current value and returns the …",1,[[["isize",15]],["isize",15]]],[11,"fetch_xor","","Applies bitwise \\\"xor\\\" to the current value and returns …",1,[[["isize",15]],["isize",15]]],[11,"fetch_and","","Applies logical \\\"and\\\" to the current value and returns …",1,[[["bool",15]],["bool",15]]],[11,"fetch_or","","Applies logical \\\"or\\\" to the current value and returns the …",1,[[["bool",15]],["bool",15]]],[11,"fetch_xor","","Applies logical \\\"xor\\\" to the current value and returns …",1,[[["bool",15]],["bool",15]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[],["cachepadded",3]]],[11,"into_inner","","Returns the inner value.",2,[[]]],[11,"new","","Creates a new <code>Backoff</code>.",3,[[]]],[11,"reset","","Resets the <code>Backoff</code>.",3,[[]]],[11,"spin","","Backs off in a lock-free loop.",3,[[]]],[11,"snooze","","Backs off in a blocking loop.",3,[[]]],[11,"is_completed","","Returns <code>true</code> if exponential backoff has completed and …",3,[[],["bool",15]]]],"p":[[8,"AtomicConsume"],[3,"AtomicCell"],[3,"CachePadded"],[3,"Backoff"]]},\
"hermit":{"doc":"","i":[[5,"switch_to_task","hermit","",null,null],[5,"switch_to_fpu_owner","","",null,null],[0,"x86_64","","",null,null],[0,"kernel","hermit::x86_64","",null,null],[0,"acpi","hermit::x86_64::kernel","",null,null],[3,"AcpiTable","hermit::x86_64::kernel::acpi","A convenience structure to work with an ACPI table. Maps …",null,null],[5,"get_madt","","",null,[[],[["option",4],["acpitable",3]]]],[5,"poweroff","","",null,[[]]],[5,"init","","",null,[[]]],[0,"apic","hermit::x86_64::kernel","",null,null],[17,"TIMER_INTERRUPT_NUMBER","hermit::x86_64::kernel::apic","",null,null],[5,"add_local_apic_id","","",null,[[["u8",15]]]],[5,"eoi","","",null,[[]]],[5,"init","","",null,[[]]],[5,"init_local_apic","","",null,[[]]],[5,"set_oneshot_timer","","",null,[[["option",4],["u64",15]]]],[5,"init_x2apic","","",null,[[]]],[5,"init_next_processor_variables","","Initialize the required entry.asm variables for the next …",null,[[["u32",15]]]],[5,"boot_application_processors","","Boot all Application Processors This algorithm is derived …",null,[[]]],[5,"ipi_tlb_flush","","",null,[[]]],[5,"wakeup_core","","Send an inter-processor interrupt to wake up a CPU Core …",null,[[["u32",15]]]],[5,"print_information","","",null,[[]]],[0,"fuse","hermit::x86_64::kernel","",null,null],[8,"FuseInterface","hermit::x86_64::kernel::fuse","",null,null],[10,"send_command","","",0,[[["option",4],["rsp",3],["cmd",3]],[["option",4],["rsp",3]]]],[3,"Fuse","","",null,null],[4,"Opcode","","",null,null],[13,"FUSE_LOOKUP","","",1,null],[13,"FUSE_FORGET","","",1,null],[13,"FUSE_GETATTR","","",1,null],[13,"FUSE_SETATTR","","",1,null],[13,"FUSE_READLINK","","",1,null],[13,"FUSE_SYMLINK","","",1,null],[13,"FUSE_MKNOD","","",1,null],[13,"FUSE_MKDIR","","",1,null],[13,"FUSE_UNLINK","","",1,null],[13,"FUSE_RMDIR","","",1,null],[13,"FUSE_RENAME","","",1,null],[13,"FUSE_LINK","","",1,null],[13,"FUSE_OPEN","","",1,null],[13,"FUSE_READ","","",1,null],[13,"FUSE_WRITE","","",1,null],[13,"FUSE_STATFS","","",1,null],[13,"FUSE_RELEASE","","",1,null],[13,"FUSE_FSYNC","","",1,null],[13,"FUSE_SETXATTR","","",1,null],[13,"FUSE_GETXATTR","","",1,null],[13,"FUSE_LISTXATTR","","",1,null],[13,"FUSE_REMOVEXATTR","","",1,null],[13,"FUSE_FLUSH","","",1,null],[13,"FUSE_INIT","","",1,null],[13,"FUSE_OPENDIR","","",1,null],[13,"FUSE_READDIR","","",1,null],[13,"FUSE_RELEASEDIR","","",1,null],[13,"FUSE_FSYNCDIR","","",1,null],[13,"FUSE_GETLK","","",1,null],[13,"FUSE_SETLK","","",1,null],[13,"FUSE_SETLKW","","",1,null],[13,"FUSE_ACCESS","","",1,null],[13,"FUSE_CREATE","","",1,null],[13,"FUSE_INTERRUPT","","",1,null],[13,"FUSE_BMAP","","",1,null],[13,"FUSE_DESTROY","","",1,null],[13,"FUSE_IOCTL","","",1,null],[13,"FUSE_POLL","","",1,null],[13,"FUSE_NOTIFY_REPLY","","",1,null],[13,"FUSE_BATCH_FORGET","","",1,null],[13,"FUSE_FALLOCATE","","",1,null],[13,"FUSE_SETVOLNAME","","",1,null],[13,"FUSE_GETXTIMES","","",1,null],[13,"FUSE_EXCHANGE","","",1,null],[13,"CUSE_INIT","","",1,null],[8,"FuseIn","","Marker trait, which signals that a struct is a valid Fuse …",null,null],[8,"FuseOut","","Marker trait, which signals that a struct is a valid Fuse …",null,null],[3,"Cmd","","",null,null],[3,"Rsp","","",null,null],[5,"create_in_header","","",null,[[["opcode",4]],["fuse_in_header",3]]],[5,"create_init","","",null,[[]]],[5,"create_lookup","","",null,[[["str",15]]]],[3,"fuse_in_header","","",null,null],[12,"len","","",2,null],[12,"opcode","","",2,null],[12,"unique","","",2,null],[12,"nodeid","","",2,null],[12,"uid","","",2,null],[12,"gid","","",2,null],[12,"pid","","",2,null],[12,"padding","","",2,null],[3,"fuse_out_header","","",null,null],[12,"len","","",3,null],[12,"error","","",3,null],[12,"unique","","",3,null],[3,"fuse_init_in","","",null,null],[12,"major","","",4,null],[12,"minor","","",4,null],[12,"max_readahead","","",4,null],[12,"flags","","",4,null],[3,"fuse_init_out","","",null,null],[12,"major","","",5,null],[12,"minor","","",5,null],[12,"max_readahead","","",5,null],[12,"flags","","",5,null],[12,"max_background","","",5,null],[12,"congestion_threshold","","",5,null],[12,"max_write","","",5,null],[12,"time_gran","","",5,null],[12,"unused","","",5,null],[3,"fuse_read_in","","",null,null],[12,"fh","","",6,null],[12,"offset","","",6,null],[12,"size","","",6,null],[12,"read_flags","","",6,null],[12,"lock_owner","","",6,null],[12,"flags","","",6,null],[12,"padding","","",6,null],[3,"fuse_read_out","","",null,null],[5,"create_read","","",null,[[["u32",15],["u64",15]]]],[3,"fuse_write_in","","",null,null],[12,"fh","","",7,null],[12,"offset","","",7,null],[12,"size","","",7,null],[12,"write_flags","","",7,null],[12,"lock_owner","","",7,null],[12,"flags","","",7,null],[12,"padding","","",7,null],[3,"fuse_write_out","","",null,null],[12,"size","","",8,null],[12,"padding","","",8,null],[5,"create_write","","",null,[[["u64",15]]]],[3,"fuse_open_in","","",null,null],[12,"flags","","",9,null],[12,"unused","","",9,null],[3,"fuse_open_out","","",null,null],[12,"fh","","",10,null],[12,"open_flags","","",10,null],[12,"padding","","",10,null],[5,"create_open","","",null,[[["u32",15],["u64",15]]]],[3,"fuse_release_in","","",null,null],[12,"fh","","",11,null],[12,"flags","","",11,null],[12,"release_flags","","",11,null],[12,"lock_owner","","",11,null],[3,"fuse_release_out","","",null,null],[5,"create_release","","",null,[[["u64",15]]]],[3,"fuse_lookup_in","","",null,null],[12,"name","","",12,null],[3,"fuse_entry_out","","",null,null],[12,"nodeid","","",13,null],[12,"generation","","",13,null],[12,"entry_valid","","",13,null],[12,"attr_valid","","",13,null],[12,"entry_valid_nsec","","",13,null],[12,"attr_valid_nsec","","",13,null],[12,"attr","","",13,null],[3,"fuse_attr","","",null,null],[12,"ino","","",14,null],[12,"size","","",14,null],[12,"blocks","","",14,null],[12,"atime","","",14,null],[12,"mtime","","",14,null],[12,"ctime","","",14,null],[12,"atimensec","","",14,null],[12,"mtimensec","","",14,null],[12,"ctimensec","","",14,null],[12,"mode","","",14,null],[12,"nlink","","",14,null],[12,"uid","","",14,null],[12,"gid","","",14,null],[12,"rdev","","",14,null],[12,"blksize","","",14,null],[12,"padding","","",14,null],[3,"fuse_unlink_in","","",null,null],[12,"name","","",15,null],[3,"fuse_unlink_out","","",null,null],[5,"create_unlink","","",null,[[["str",15]]]],[3,"fuse_create_in","","",null,null],[12,"flags","","",16,null],[12,"mode","","",16,null],[12,"umask","","",16,null],[12,"padding","","",16,null],[12,"name","","",16,null],[3,"fuse_create_out","","",null,null],[12,"entry","","",17,null],[12,"open","","",17,null],[5,"create_create","","",null,[[["u32",15],["str",15]]]],[0,"gdt","hermit::x86_64::kernel","",null,null],[17,"GDT_NULL","hermit::x86_64::kernel::gdt","",null,null],[17,"GDT_KERNEL_CODE","","",null,null],[17,"GDT_KERNEL_DATA","","",null,null],[17,"GDT_FIRST_TSS","","",null,null],[5,"init","","",null,[[]]],[5,"add_current_core","","",null,[[]]],[5,"set_current_kernel_stack","","",null,[[]]],[0,"idt","hermit::x86_64::kernel","",null,null],[17,"IDT_ENTRIES","hermit::x86_64::kernel::idt","Declare an IDT of 256 entries. Although not all entries …",null,null],[5,"install","","",null,[[]]],[5,"set_gate","","Set an entry in the IDT.",null,[[["usize",15],["u8",15]]]],[0,"irq","hermit::x86_64::kernel","",null,null],[3,"ExceptionStackFrame","hermit::x86_64::kernel::irq","Represents the exception stack frame pushed by the CPU on …",null,null],[12,"instruction_pointer","","This value points to the instruction that should be …",18,null],[12,"code_segment","","The code segment selector, padded with zeros.",18,null],[12,"cpu_flags","","The flags register before the interrupt handler was …",18,null],[12,"stack_pointer","","The stack pointer at the time of the interrupt.",18,null],[12,"stack_segment","","The stack segment descriptor at the time of the interrupt …",18,null],[5,"enable","","Enable Interrupts",null,[[]]],[5,"enable_and_wait","","Enable Interrupts and wait for the next interrupt (HLT …",null,[[]]],[5,"disable","","Disable Interrupts",null,[[]]],[5,"nested_disable","","Disable IRQs (nested)",null,[[],["bool",15]]],[5,"nested_enable","","Enable IRQs (nested)",null,[[["bool",15]]]],[5,"install","","",null,[[]]],[5,"irq_install_handler","","",null,[[["u32",15],["usize",15]]]],[5,"add_irq_name","","",null,[[["u32",15],["str",15]]]],[5,"get_irq_name","","",null,[[["u32",15]],[["option",4],["string",3]]]],[3,"IrqStatistics","","",null,null],[12,"counters","","",19,null],[0,"pci","hermit::x86_64::kernel","",null,null],[0,"error","hermit::x86_64::kernel::pci","A module containg PCI specifc errors",null,null],[4,"PciError","hermit::x86_64::kernel::pci::error","An enum of PciErrors typically carrying the device\'s id …",null,null],[13,"General","","",20,null],[13,"NoBar","","",20,null],[13,"NoCapPtr","","",20,null],[13,"BadCapPtr","","",20,null],[13,"NoBarForCap","","",20,null],[13,"NoVirtioCaps","","",20,null],[17,"PCI_MAX_BUS_NUMBER","hermit::x86_64::kernel::pci","",null,null],[17,"PCI_MAX_DEVICE_NUMBER","","",null,null],[17,"PCI_CONFIG_ADDRESS_PORT","","",null,null],[17,"PCI_CONFIG_ADDRESS_ENABLE","","",null,null],[17,"PCI_CONFIG_DATA_PORT","","",null,null],[17,"PCI_COMMAND_BUSMASTER","","",null,null],[17,"PCI_ID_REGISTER","","",null,null],[17,"PCI_COMMAND_REGISTER","","",null,null],[17,"PCI_CLASS_REGISTER","","",null,null],[17,"PCI_HEADER_REGISTER","","",null,null],[17,"PCI_BAR0_REGISTER","","",null,null],[17,"PCI_CAPABILITY_LIST_REGISTER","","",null,null],[17,"PCI_INTERRUPT_REGISTER","","",null,null],[17,"PCI_STATUS_CAPABILITIES_LIST","","",null,null],[17,"PCI_BASE_ADDRESS_IO_SPACE","","",null,null],[17,"PCI_MEM_BASE_ADDRESS_64BIT","","",null,null],[17,"PCI_MEM_PREFETCHABLE","","",null,null],[17,"PCI_MEM_BASE_ADDRESS_MASK","","",null,null],[17,"PCI_IO_BASE_ADDRESS_MASK","","",null,null],[17,"PCI_HEADER_TYPE_MASK","","",null,null],[17,"PCI_MULTIFUNCTION_MASK","","",null,null],[17,"PCI_CAP_ID_VNDR","","",null,null],[4,"PciClassCode","","Classes of PCI nodes.",null,null],[13,"TooOld","","",21,null],[13,"MassStorage","","",21,null],[13,"NetworkController","","",21,null],[13,"DisplayController","","",21,null],[13,"MultimediaController","","",21,null],[13,"MemoryController","","",21,null],[13,"BridgeDevice","","",21,null],[13,"SimpleCommunicationController","","",21,null],[13,"BaseSystemPeripheral","","",21,null],[13,"InputDevice","","",21,null],[13,"DockingStation","","",21,null],[13,"Processor","","",21,null],[13,"SerialBusController","","",21,null],[13,"WirelessController","","",21,null],[13,"IntelligentIoController","","",21,null],[13,"EncryptionController","","",21,null],[13,"DataAcquisitionSignalProcessing","","",21,null],[13,"Other","","",21,null],[4,"PciNetworkControllerSubclass","","Network Controller Sub Classes",null,null],[13,"EthernetController","","",22,null],[13,"TokenRingController","","",22,null],[13,"FDDIController","","",22,null],[13,"ATMController","","",22,null],[13,"ISDNController","","",22,null],[13,"WorldFipController","","",22,null],[13,"PICMGController","","",22,null],[13,"InfinibandController","","",22,null],[13,"FabricController","","",22,null],[13,"NetworkController","","",22,null],[3,"PciAdapter","","",null,null],[12,"bus","","",23,null],[12,"device","","",23,null],[12,"vendor_id","","",23,null],[12,"device_id","","",23,null],[12,"class_id","","",23,null],[12,"subclass_id","","",23,null],[12,"programming_interface_id","","",23,null],[12,"base_addresses","","",23,null],[12,"irq","","",23,null],[4,"PciBar","","",null,null],[13,"IO","","",24,null],[13,"Memory","","",24,null],[3,"IOBar","","",null,null],[12,"index","","",25,null],[12,"addr","","",25,null],[12,"size","","",25,null],[3,"MemoryBar","","",null,null],[12,"index","","",26,null],[12,"addr","","",26,null],[12,"size","","",26,null],[12,"width","","",26,null],[12,"prefetchable","","",26,null],[4,"PciDriver","","",null,null],[13,"VirtioFs","","",27,null],[13,"VirtioNet","","",27,null],[13,"RTL8139Net","","",27,null],[5,"register_driver","","",null,[[["pcidriver",4]]]],[5,"get_network_driver","","",null,[[],[["spinlockirqsave",3],["option",4]]]],[5,"get_filesystem_driver","","",null,[[],[["spinlockirqsave",3],["option",4]]]],[5,"read_config","","Returns the value (indicated by bus, device and register) …",null,[[["u32",15],["u8",15]],["u32",15]]],[5,"write_config","","",null,[[["u32",15],["u8",15]]]],[5,"get_adapter","","",null,[[["u16",15]],[["option",4],["pciadapter",3]]]],[5,"init","","",null,[[]]],[5,"init_drivers","","",null,[[]]],[5,"print_information","","",null,[[]]],[0,"percore","hermit::x86_64::kernel","",null,null],[7,"PERCORE","hermit::x86_64::kernel::percore","",null,null],[6,"PerCoreVariables","","",null,null],[3,"PerCoreInnerVariables","","",null,null],[12,"tss","","Task State Segment (TSS) allocated for this CPU Core.",28,null],[12,"kernel_stack","","start address of the kernel stack",28,null],[12,"irq_statistics","","Interface to the interrupt counters",28,null],[3,"PerCoreVariable","","",null,null],[8,"PerCoreVariableMethods","","",null,null],[10,"get","","",29,[[]]],[10,"set","","",29,[[]]],[8,"Is32BitVariable","","",null,null],[5,"core_id","","",null,[[],["u32",15]]],[5,"get_kernel_stack","","",null,[[],["u64",15]]],[5,"set_kernel_stack","","",null,[[["u64",15]]]],[5,"core_scheduler","","",null,[[],["percorescheduler",3]]],[5,"set_core_scheduler","","",null,[[]]],[5,"increment_irq_counter","","",null,[[["usize",15]]]],[5,"init","","",null,[[]]],[0,"pic","hermit::x86_64::kernel","",null,null],[17,"PIC1_INTERRUPT_OFFSET","hermit::x86_64::kernel::pic","",null,null],[5,"eoi","","",null,[[["u8",15]]]],[5,"init","","",null,[[]]],[5,"mask","","",null,[[["u8",15]]]],[5,"unmask","","",null,[[["u8",15]]]],[0,"pit","hermit::x86_64::kernel","",null,null],[17,"PIT_INTERRUPT_NUMBER","hermit::x86_64::kernel::pit","",null,null],[5,"init","","",null,[[["u64",15]]]],[5,"deinit","","",null,[[]]],[0,"processor","hermit::x86_64::kernel","",null,null],[3,"XSaveLegacyRegion","hermit::x86_64::kernel::processor","",null,null],[12,"fpu_control_word","","",30,null],[12,"fpu_status_word","","",30,null],[12,"fpu_tag_word","","",30,null],[12,"fpu_opcode","","",30,null],[12,"fpu_instruction_pointer","","",30,null],[12,"fpu_instruction_pointer_high_or_cs","","",30,null],[12,"fpu_data_pointer","","",30,null],[12,"fpu_data_pointer_high_or_ds","","",30,null],[12,"mxcsr","","",30,null],[12,"mxcsr_mask","","",30,null],[12,"st_space","","",30,null],[12,"xmm_space","","",30,null],[12,"padding","","",30,null],[3,"XSaveHeader","","",null,null],[12,"xstate_bv","","",31,null],[12,"xcomp_bv","","",31,null],[12,"reserved","","",31,null],[3,"XSaveAVXState","","",null,null],[12,"ymmh_space","","",32,null],[3,"XSaveLWPState","","XSave Area for AMD Lightweight Profiling. Refer to AMD …",null,null],[12,"lwpcb_address","","",33,null],[12,"flags","","",33,null],[12,"buffer_head_offset","","",33,null],[12,"buffer_base","","",33,null],[12,"buffer_size","","",33,null],[12,"filters","","",33,null],[12,"saved_event_record","","",33,null],[12,"event_counter","","",33,null],[3,"XSaveBndregs","","",null,null],[12,"bound_registers","","",34,null],[3,"XSaveBndcsr","","",null,null],[12,"bndcfgu_register","","",35,null],[12,"bndstatus_register","","",35,null],[3,"FPUState","","",null,null],[12,"legacy_region","","",36,null],[12,"header","","",36,null],[12,"avx_state","","",36,null],[12,"lwp_state","","",36,null],[12,"bndregs","","",36,null],[12,"bndcsr","","",36,null],[5,"run_on_hypervisor","","",null,[[],["bool",15]]],[5,"detect_features","","",null,[[]]],[5,"configure","","",null,[[]]],[5,"detect_frequency","","",null,[[]]],[5,"print_information","","",null,[[]]],[5,"generate_random_number32","","",null,[[],[["option",4],["u32",15]]]],[5,"generate_random_number64","","",null,[[],[["u64",15],["option",4]]]],[5,"get_linear_address_bits","","",null,[[],["u8",15]]],[5,"get_physical_address_bits","","",null,[[],["u8",15]]],[5,"supports_1gib_pages","","",null,[[],["bool",15]]],[5,"supports_avx","","",null,[[],["bool",15]]],[5,"supports_tsc_deadline","","",null,[[],["bool",15]]],[5,"supports_x2apic","","",null,[[],["bool",15]]],[5,"supports_xsave","","",null,[[],["bool",15]]],[5,"supports_fsgs","","",null,[[],["bool",15]]],[5,"msb","","Search the most significant bit",null,[[["u64",15]],[["u64",15],["option",4]]]],[5,"halt","","The halt function stops the processor until the next …",null,[[]]],[5,"shutdown","","Shutdown the system",null,[[]]],[5,"get_timer_ticks","","",null,[[],["u64",15]]],[5,"get_frequency","","",null,[[],["u16",15]]],[5,"readfs","","",null,[[],["usize",15]]],[5,"readgs","","",null,[[],["usize",15]]],[5,"writefs","","",null,[[["usize",15]]]],[5,"writegs","","",null,[[["usize",15]]]],[5,"get_timestamp","","",null,[[],["u64",15]]],[5,"udelay","","Delay execution by the given number of microseconds using …",null,[[["u64",15]]]],[0,"scheduler","hermit::x86_64::kernel","Architecture dependent interface to initialize a task",null,null],[3,"BootStack","hermit::x86_64::kernel::scheduler","",null,null],[3,"CommonStack","","",null,null],[4,"TaskStacks","","",null,null],[13,"Boot","","",37,null],[13,"Common","","",37,null],[3,"TaskTLS","","",null,null],[5,"install_timer_handler","","",null,[[]]],[0,"serial","hermit::x86_64::kernel","",null,null],[3,"SerialPort","hermit::x86_64::kernel::serial","",null,null],[12,"port_address","","",38,null],[0,"systemtime","hermit::x86_64::kernel","",null,null],[5,"get_boot_time","hermit::x86_64::kernel::systemtime","",null,[[],["u64",15]]],[5,"init","","",null,[[]]],[3,"BootInfo","hermit::x86_64::kernel","",null,null],[5,"has_ipdevice","","",null,[[],["bool",15]]],[5,"uhyve_get_ip","","",null,[[]]],[5,"sys_uhyve_get_ip","","",null,[[]]],[5,"uhyve_get_gateway","","",null,[[]]],[5,"sys_uhyve_get_gateway","","",null,[[]]],[5,"uhyve_get_mask","","",null,[[]]],[5,"sys_uhyve_get_mask","","",null,[[]]],[5,"get_base_address","","",null,[[],["virtaddr",3]]],[5,"get_image_size","","",null,[[],["usize",15]]],[5,"get_limit","","",null,[[],["usize",15]]],[5,"get_tls_start","","",null,[[],["virtaddr",3]]],[5,"get_tls_filesz","","",null,[[],["usize",15]]],[5,"get_tls_memsz","","",null,[[],["usize",15]]],[5,"get_mbinfo","","",null,[[],["virtaddr",3]]],[5,"get_processor_count","","",null,[[],["u32",15]]],[5,"is_uhyve","","Whether HermitCore is running under the \\\"uhyve\\\" …",null,[[],["bool",15]]],[5,"is_uhyve_with_pci","","",null,[[],["bool",15]]],[5,"is_single_kernel","","Whether HermitCore is running alone (true) or …",null,[[],["bool",15]]],[5,"get_cmdsize","","",null,[[],["usize",15]]],[5,"get_cmdline","","",null,[[],["virtaddr",3]]],[5,"message_output_init","","Earliest initialization function called by the Boot …",null,[[]]],[5,"output_message_byte","","",null,[[["u8",15]]]],[5,"output_message_buf","","",null,[[]]],[5,"boot_processor_init","","Real Boot Processor initialization as soon as we have put …",null,[[]]],[5,"boot_application_processors","","Boots all available Application Processors on bare-metal …",null,[[]]],[5,"application_processor_init","","Application Processor initialization",null,[[]]],[5,"print_statistics","","",null,[[]]],[0,"mm","hermit::x86_64","",null,null],[0,"paging","hermit::x86_64::mm","",null,null],[3,"PageTableEntryFlags","hermit::x86_64::mm::paging","Possible flags for an entry in either table (PML4, PDPT, …",null,null],[3,"PageTableEntry","","An entry in either table (PML4, PDPT, PD, PT)",null,null],[8,"PageSize","","A generic interface to support all possible page sizes.",null,null],[18,"SIZE","","The page size in bytes.",39,null],[18,"MAP_LEVEL","","The page table level at which a page of this size is …",39,null],[18,"MAP_EXTRA_FLAG","","Any extra flag that needs to be set to map a page of this …",39,null],[4,"BasePageSize","","A 4 KiB page mapped in the PT.",null,null],[4,"LargePageSize","","A 2 MiB page mapped in the PD.",null,null],[4,"HugePageSize","","A 1 GiB page mapped in the PDPT.",null,null],[5,"page_fault_handler","","",null,[[["exceptionstackframe",3],["u64",15]]]],[5,"get_page_table_entry","","",null,[[["virtaddr",3]],[["pagetableentry",3],["option",4]]]],[5,"get_physical_address","","",null,[[["virtaddr",3]],["physaddr",3]]],[5,"virtual_to_physical","","Translate a virtual memory address to a physical one.",null,[[["virtaddr",3]],["physaddr",3]]],[5,"virt_to_phys","","",null,[[["virtaddr",3]],["physaddr",3]]],[5,"map","","",null,[[["usize",15],["pagetableentryflags",3],["physaddr",3],["virtaddr",3]]]],[5,"unmap","","",null,[[["virtaddr",3],["usize",15]]]],[5,"identity_map","","",null,[[["physaddr",3]]]],[5,"get_application_page_size","","",null,[[],["usize",15]]],[5,"init","","",null,[[]]],[5,"init_page_tables","","",null,[[]]],[0,"physicalmem","hermit::x86_64::mm","",null,null],[5,"init","hermit::x86_64::mm::physicalmem","",null,[[]]],[5,"total_memory_size","","",null,[[],["usize",15]]],[5,"allocate","","",null,[[["usize",15]],[["result",4],["physaddr",3]]]],[5,"allocate_aligned","","",null,[[["usize",15]],[["result",4],["physaddr",3]]]],[5,"deallocate","","This function must only be called from mm::deallocate! …",null,[[["usize",15],["physaddr",3]]]],[5,"print_information","","",null,[[]]],[0,"virtualmem","hermit::x86_64::mm","",null,null],[5,"init","hermit::x86_64::mm::virtualmem","",null,[[]]],[5,"allocate","","",null,[[["usize",15]],[["virtaddr",3],["result",4]]]],[5,"allocate_aligned","","",null,[[["usize",15]],[["virtaddr",3],["result",4]]]],[5,"deallocate","","",null,[[["virtaddr",3],["usize",15]]]],[5,"print_information","","",null,[[]]],[5,"kernel_heap_end","","End of the virtual memory address space reserved for …",null,[[],["virtaddr",3]]],[5,"init_page_tables","hermit::x86_64::mm","",null,[[]]],[3,"PhysAddr","","A wrapper for a physical address.",null,null],[12,"0","","",40,null],[3,"VirtAddr","","A wrapper for a virtual address.",null,null],[12,"0","","",41,null],[5,"init","","",null,[[]]],[0,"kernel","hermit","",null,null],[0,"acpi","hermit::kernel","",null,null],[3,"AcpiTable","hermit::kernel::acpi","A convenience structure to work with an ACPI table. Maps …",null,null],[5,"get_madt","","",null,[[],[["option",4],["acpitable",3]]]],[5,"poweroff","","",null,[[]]],[5,"init","","",null,[[]]],[0,"apic","hermit::kernel","",null,null],[17,"TIMER_INTERRUPT_NUMBER","hermit::kernel::apic","",null,null],[5,"add_local_apic_id","","",null,[[["u8",15]]]],[5,"eoi","","",null,[[]]],[5,"init","","",null,[[]]],[5,"init_local_apic","","",null,[[]]],[5,"set_oneshot_timer","","",null,[[["option",4],["u64",15]]]],[5,"init_x2apic","","",null,[[]]],[5,"init_next_processor_variables","","Initialize the required entry.asm variables for the next …",null,[[["u32",15]]]],[5,"boot_application_processors","","Boot all Application Processors This algorithm is derived …",null,[[]]],[5,"ipi_tlb_flush","","",null,[[]]],[5,"wakeup_core","","Send an inter-processor interrupt to wake up a CPU Core …",null,[[["u32",15]]]],[5,"print_information","","",null,[[]]],[0,"fuse","hermit::kernel","",null,null],[8,"FuseInterface","hermit::kernel::fuse","",null,null],[10,"send_command","","",0,[[["option",4],["rsp",3],["cmd",3]],[["option",4],["rsp",3]]]],[3,"Fuse","","",null,null],[4,"Opcode","","",null,null],[13,"FUSE_LOOKUP","","",1,null],[13,"FUSE_FORGET","","",1,null],[13,"FUSE_GETATTR","","",1,null],[13,"FUSE_SETATTR","","",1,null],[13,"FUSE_READLINK","","",1,null],[13,"FUSE_SYMLINK","","",1,null],[13,"FUSE_MKNOD","","",1,null],[13,"FUSE_MKDIR","","",1,null],[13,"FUSE_UNLINK","","",1,null],[13,"FUSE_RMDIR","","",1,null],[13,"FUSE_RENAME","","",1,null],[13,"FUSE_LINK","","",1,null],[13,"FUSE_OPEN","","",1,null],[13,"FUSE_READ","","",1,null],[13,"FUSE_WRITE","","",1,null],[13,"FUSE_STATFS","","",1,null],[13,"FUSE_RELEASE","","",1,null],[13,"FUSE_FSYNC","","",1,null],[13,"FUSE_SETXATTR","","",1,null],[13,"FUSE_GETXATTR","","",1,null],[13,"FUSE_LISTXATTR","","",1,null],[13,"FUSE_REMOVEXATTR","","",1,null],[13,"FUSE_FLUSH","","",1,null],[13,"FUSE_INIT","","",1,null],[13,"FUSE_OPENDIR","","",1,null],[13,"FUSE_READDIR","","",1,null],[13,"FUSE_RELEASEDIR","","",1,null],[13,"FUSE_FSYNCDIR","","",1,null],[13,"FUSE_GETLK","","",1,null],[13,"FUSE_SETLK","","",1,null],[13,"FUSE_SETLKW","","",1,null],[13,"FUSE_ACCESS","","",1,null],[13,"FUSE_CREATE","","",1,null],[13,"FUSE_INTERRUPT","","",1,null],[13,"FUSE_BMAP","","",1,null],[13,"FUSE_DESTROY","","",1,null],[13,"FUSE_IOCTL","","",1,null],[13,"FUSE_POLL","","",1,null],[13,"FUSE_NOTIFY_REPLY","","",1,null],[13,"FUSE_BATCH_FORGET","","",1,null],[13,"FUSE_FALLOCATE","","",1,null],[13,"FUSE_SETVOLNAME","","",1,null],[13,"FUSE_GETXTIMES","","",1,null],[13,"FUSE_EXCHANGE","","",1,null],[13,"CUSE_INIT","","",1,null],[8,"FuseIn","","Marker trait, which signals that a struct is a valid Fuse …",null,null],[8,"FuseOut","","Marker trait, which signals that a struct is a valid Fuse …",null,null],[3,"Cmd","","",null,null],[3,"Rsp","","",null,null],[5,"create_in_header","","",null,[[["opcode",4]],["fuse_in_header",3]]],[5,"create_init","","",null,[[]]],[5,"create_lookup","","",null,[[["str",15]]]],[3,"fuse_in_header","","",null,null],[12,"len","","",2,null],[12,"opcode","","",2,null],[12,"unique","","",2,null],[12,"nodeid","","",2,null],[12,"uid","","",2,null],[12,"gid","","",2,null],[12,"pid","","",2,null],[12,"padding","","",2,null],[3,"fuse_out_header","","",null,null],[12,"len","","",3,null],[12,"error","","",3,null],[12,"unique","","",3,null],[3,"fuse_init_in","","",null,null],[12,"major","","",4,null],[12,"minor","","",4,null],[12,"max_readahead","","",4,null],[12,"flags","","",4,null],[3,"fuse_init_out","","",null,null],[12,"major","","",5,null],[12,"minor","","",5,null],[12,"max_readahead","","",5,null],[12,"flags","","",5,null],[12,"max_background","","",5,null],[12,"congestion_threshold","","",5,null],[12,"max_write","","",5,null],[12,"time_gran","","",5,null],[12,"unused","","",5,null],[3,"fuse_read_in","","",null,null],[12,"fh","","",6,null],[12,"offset","","",6,null],[12,"size","","",6,null],[12,"read_flags","","",6,null],[12,"lock_owner","","",6,null],[12,"flags","","",6,null],[12,"padding","","",6,null],[3,"fuse_read_out","","",null,null],[5,"create_read","","",null,[[["u32",15],["u64",15]]]],[3,"fuse_write_in","","",null,null],[12,"fh","","",7,null],[12,"offset","","",7,null],[12,"size","","",7,null],[12,"write_flags","","",7,null],[12,"lock_owner","","",7,null],[12,"flags","","",7,null],[12,"padding","","",7,null],[3,"fuse_write_out","","",null,null],[12,"size","","",8,null],[12,"padding","","",8,null],[5,"create_write","","",null,[[["u64",15]]]],[3,"fuse_open_in","","",null,null],[12,"flags","","",9,null],[12,"unused","","",9,null],[3,"fuse_open_out","","",null,null],[12,"fh","","",10,null],[12,"open_flags","","",10,null],[12,"padding","","",10,null],[5,"create_open","","",null,[[["u32",15],["u64",15]]]],[3,"fuse_release_in","","",null,null],[12,"fh","","",11,null],[12,"flags","","",11,null],[12,"release_flags","","",11,null],[12,"lock_owner","","",11,null],[3,"fuse_release_out","","",null,null],[5,"create_release","","",null,[[["u64",15]]]],[3,"fuse_lookup_in","","",null,null],[12,"name","","",12,null],[3,"fuse_entry_out","","",null,null],[12,"nodeid","","",13,null],[12,"generation","","",13,null],[12,"entry_valid","","",13,null],[12,"attr_valid","","",13,null],[12,"entry_valid_nsec","","",13,null],[12,"attr_valid_nsec","","",13,null],[12,"attr","","",13,null],[3,"fuse_attr","","",null,null],[12,"ino","","",14,null],[12,"size","","",14,null],[12,"blocks","","",14,null],[12,"atime","","",14,null],[12,"mtime","","",14,null],[12,"ctime","","",14,null],[12,"atimensec","","",14,null],[12,"mtimensec","","",14,null],[12,"ctimensec","","",14,null],[12,"mode","","",14,null],[12,"nlink","","",14,null],[12,"uid","","",14,null],[12,"gid","","",14,null],[12,"rdev","","",14,null],[12,"blksize","","",14,null],[12,"padding","","",14,null],[3,"fuse_unlink_in","","",null,null],[12,"name","","",15,null],[3,"fuse_unlink_out","","",null,null],[5,"create_unlink","","",null,[[["str",15]]]],[3,"fuse_create_in","","",null,null],[12,"flags","","",16,null],[12,"mode","","",16,null],[12,"umask","","",16,null],[12,"padding","","",16,null],[12,"name","","",16,null],[3,"fuse_create_out","","",null,null],[12,"entry","","",17,null],[12,"open","","",17,null],[5,"create_create","","",null,[[["u32",15],["str",15]]]],[0,"gdt","hermit::kernel","",null,null],[17,"GDT_NULL","hermit::kernel::gdt","",null,null],[17,"GDT_KERNEL_CODE","","",null,null],[17,"GDT_KERNEL_DATA","","",null,null],[17,"GDT_FIRST_TSS","","",null,null],[5,"init","","",null,[[]]],[5,"add_current_core","","",null,[[]]],[5,"set_current_kernel_stack","","",null,[[]]],[0,"idt","hermit::kernel","",null,null],[17,"IDT_ENTRIES","hermit::kernel::idt","Declare an IDT of 256 entries. Although not all entries …",null,null],[5,"install","","",null,[[]]],[5,"set_gate","","Set an entry in the IDT.",null,[[["usize",15],["u8",15]]]],[0,"irq","hermit::kernel","",null,null],[3,"ExceptionStackFrame","hermit::kernel::irq","Represents the exception stack frame pushed by the CPU on …",null,null],[12,"instruction_pointer","","This value points to the instruction that should be …",18,null],[12,"code_segment","","The code segment selector, padded with zeros.",18,null],[12,"cpu_flags","","The flags register before the interrupt handler was …",18,null],[12,"stack_pointer","","The stack pointer at the time of the interrupt.",18,null],[12,"stack_segment","","The stack segment descriptor at the time of the interrupt …",18,null],[5,"enable","","Enable Interrupts",null,[[]]],[5,"enable_and_wait","","Enable Interrupts and wait for the next interrupt (HLT …",null,[[]]],[5,"disable","","Disable Interrupts",null,[[]]],[5,"nested_disable","","Disable IRQs (nested)",null,[[],["bool",15]]],[5,"nested_enable","","Enable IRQs (nested)",null,[[["bool",15]]]],[5,"install","","",null,[[]]],[5,"irq_install_handler","","",null,[[["u32",15],["usize",15]]]],[5,"add_irq_name","","",null,[[["u32",15],["str",15]]]],[5,"get_irq_name","","",null,[[["u32",15]],[["option",4],["string",3]]]],[3,"IrqStatistics","","",null,null],[12,"counters","","",19,null],[0,"pci","hermit::kernel","",null,null],[0,"error","hermit::kernel::pci","A module containg PCI specifc errors",null,null],[4,"PciError","hermit::kernel::pci::error","An enum of PciErrors typically carrying the device\'s id …",null,null],[13,"General","","",20,null],[13,"NoBar","","",20,null],[13,"NoCapPtr","","",20,null],[13,"BadCapPtr","","",20,null],[13,"NoBarForCap","","",20,null],[13,"NoVirtioCaps","","",20,null],[17,"PCI_MAX_BUS_NUMBER","hermit::kernel::pci","",null,null],[17,"PCI_MAX_DEVICE_NUMBER","","",null,null],[17,"PCI_CONFIG_ADDRESS_PORT","","",null,null],[17,"PCI_CONFIG_ADDRESS_ENABLE","","",null,null],[17,"PCI_CONFIG_DATA_PORT","","",null,null],[17,"PCI_COMMAND_BUSMASTER","","",null,null],[17,"PCI_ID_REGISTER","","",null,null],[17,"PCI_COMMAND_REGISTER","","",null,null],[17,"PCI_CLASS_REGISTER","","",null,null],[17,"PCI_HEADER_REGISTER","","",null,null],[17,"PCI_BAR0_REGISTER","","",null,null],[17,"PCI_CAPABILITY_LIST_REGISTER","","",null,null],[17,"PCI_INTERRUPT_REGISTER","","",null,null],[17,"PCI_STATUS_CAPABILITIES_LIST","","",null,null],[17,"PCI_BASE_ADDRESS_IO_SPACE","","",null,null],[17,"PCI_MEM_BASE_ADDRESS_64BIT","","",null,null],[17,"PCI_MEM_PREFETCHABLE","","",null,null],[17,"PCI_MEM_BASE_ADDRESS_MASK","","",null,null],[17,"PCI_IO_BASE_ADDRESS_MASK","","",null,null],[17,"PCI_HEADER_TYPE_MASK","","",null,null],[17,"PCI_MULTIFUNCTION_MASK","","",null,null],[17,"PCI_CAP_ID_VNDR","","",null,null],[4,"PciClassCode","","Classes of PCI nodes.",null,null],[13,"TooOld","","",21,null],[13,"MassStorage","","",21,null],[13,"NetworkController","","",21,null],[13,"DisplayController","","",21,null],[13,"MultimediaController","","",21,null],[13,"MemoryController","","",21,null],[13,"BridgeDevice","","",21,null],[13,"SimpleCommunicationController","","",21,null],[13,"BaseSystemPeripheral","","",21,null],[13,"InputDevice","","",21,null],[13,"DockingStation","","",21,null],[13,"Processor","","",21,null],[13,"SerialBusController","","",21,null],[13,"WirelessController","","",21,null],[13,"IntelligentIoController","","",21,null],[13,"EncryptionController","","",21,null],[13,"DataAcquisitionSignalProcessing","","",21,null],[13,"Other","","",21,null],[4,"PciNetworkControllerSubclass","","Network Controller Sub Classes",null,null],[13,"EthernetController","","",22,null],[13,"TokenRingController","","",22,null],[13,"FDDIController","","",22,null],[13,"ATMController","","",22,null],[13,"ISDNController","","",22,null],[13,"WorldFipController","","",22,null],[13,"PICMGController","","",22,null],[13,"InfinibandController","","",22,null],[13,"FabricController","","",22,null],[13,"NetworkController","","",22,null],[3,"PciAdapter","","",null,null],[12,"bus","","",23,null],[12,"device","","",23,null],[12,"vendor_id","","",23,null],[12,"device_id","","",23,null],[12,"class_id","","",23,null],[12,"subclass_id","","",23,null],[12,"programming_interface_id","","",23,null],[12,"base_addresses","","",23,null],[12,"irq","","",23,null],[4,"PciBar","","",null,null],[13,"IO","","",24,null],[13,"Memory","","",24,null],[3,"IOBar","","",null,null],[12,"index","","",25,null],[12,"addr","","",25,null],[12,"size","","",25,null],[3,"MemoryBar","","",null,null],[12,"index","","",26,null],[12,"addr","","",26,null],[12,"size","","",26,null],[12,"width","","",26,null],[12,"prefetchable","","",26,null],[4,"PciDriver","","",null,null],[13,"VirtioFs","","",27,null],[13,"VirtioNet","","",27,null],[13,"RTL8139Net","","",27,null],[5,"register_driver","","",null,[[["pcidriver",4]]]],[5,"get_network_driver","","",null,[[],[["spinlockirqsave",3],["option",4]]]],[5,"get_filesystem_driver","","",null,[[],[["spinlockirqsave",3],["option",4]]]],[5,"read_config","","Returns the value (indicated by bus, device and register) …",null,[[["u32",15],["u8",15]],["u32",15]]],[5,"write_config","","",null,[[["u32",15],["u8",15]]]],[5,"get_adapter","","",null,[[["u16",15]],[["option",4],["pciadapter",3]]]],[5,"init","","",null,[[]]],[5,"init_drivers","","",null,[[]]],[5,"print_information","","",null,[[]]],[0,"percore","hermit::kernel","",null,null],[7,"PERCORE","hermit::kernel::percore","",null,null],[6,"PerCoreVariables","","",null,null],[3,"PerCoreInnerVariables","","",null,null],[12,"tss","","Task State Segment (TSS) allocated for this CPU Core.",28,null],[12,"kernel_stack","","start address of the kernel stack",28,null],[12,"irq_statistics","","Interface to the interrupt counters",28,null],[3,"PerCoreVariable","","",null,null],[8,"PerCoreVariableMethods","","",null,null],[10,"get","","",29,[[]]],[10,"set","","",29,[[]]],[8,"Is32BitVariable","","",null,null],[5,"core_id","","",null,[[],["u32",15]]],[5,"get_kernel_stack","","",null,[[],["u64",15]]],[5,"set_kernel_stack","","",null,[[["u64",15]]]],[5,"core_scheduler","","",null,[[],["percorescheduler",3]]],[5,"set_core_scheduler","","",null,[[]]],[5,"increment_irq_counter","","",null,[[["usize",15]]]],[5,"init","","",null,[[]]],[0,"pic","hermit::kernel","",null,null],[17,"PIC1_INTERRUPT_OFFSET","hermit::kernel::pic","",null,null],[5,"eoi","","",null,[[["u8",15]]]],[5,"init","","",null,[[]]],[5,"mask","","",null,[[["u8",15]]]],[5,"unmask","","",null,[[["u8",15]]]],[0,"pit","hermit::kernel","",null,null],[17,"PIT_INTERRUPT_NUMBER","hermit::kernel::pit","",null,null],[5,"init","","",null,[[["u64",15]]]],[5,"deinit","","",null,[[]]],[0,"processor","hermit::kernel","",null,null],[3,"XSaveLegacyRegion","hermit::kernel::processor","",null,null],[12,"fpu_control_word","","",30,null],[12,"fpu_status_word","","",30,null],[12,"fpu_tag_word","","",30,null],[12,"fpu_opcode","","",30,null],[12,"fpu_instruction_pointer","","",30,null],[12,"fpu_instruction_pointer_high_or_cs","","",30,null],[12,"fpu_data_pointer","","",30,null],[12,"fpu_data_pointer_high_or_ds","","",30,null],[12,"mxcsr","","",30,null],[12,"mxcsr_mask","","",30,null],[12,"st_space","","",30,null],[12,"xmm_space","","",30,null],[12,"padding","","",30,null],[3,"XSaveHeader","","",null,null],[12,"xstate_bv","","",31,null],[12,"xcomp_bv","","",31,null],[12,"reserved","","",31,null],[3,"XSaveAVXState","","",null,null],[12,"ymmh_space","","",32,null],[3,"XSaveLWPState","","XSave Area for AMD Lightweight Profiling. Refer to AMD …",null,null],[12,"lwpcb_address","","",33,null],[12,"flags","","",33,null],[12,"buffer_head_offset","","",33,null],[12,"buffer_base","","",33,null],[12,"buffer_size","","",33,null],[12,"filters","","",33,null],[12,"saved_event_record","","",33,null],[12,"event_counter","","",33,null],[3,"XSaveBndregs","","",null,null],[12,"bound_registers","","",34,null],[3,"XSaveBndcsr","","",null,null],[12,"bndcfgu_register","","",35,null],[12,"bndstatus_register","","",35,null],[3,"FPUState","","",null,null],[12,"legacy_region","","",36,null],[12,"header","","",36,null],[12,"avx_state","","",36,null],[12,"lwp_state","","",36,null],[12,"bndregs","","",36,null],[12,"bndcsr","","",36,null],[5,"run_on_hypervisor","","",null,[[],["bool",15]]],[5,"detect_features","","",null,[[]]],[5,"configure","","",null,[[]]],[5,"detect_frequency","","",null,[[]]],[5,"print_information","","",null,[[]]],[5,"generate_random_number32","","",null,[[],[["option",4],["u32",15]]]],[5,"generate_random_number64","","",null,[[],[["u64",15],["option",4]]]],[5,"get_linear_address_bits","","",null,[[],["u8",15]]],[5,"get_physical_address_bits","","",null,[[],["u8",15]]],[5,"supports_1gib_pages","","",null,[[],["bool",15]]],[5,"supports_avx","","",null,[[],["bool",15]]],[5,"supports_tsc_deadline","","",null,[[],["bool",15]]],[5,"supports_x2apic","","",null,[[],["bool",15]]],[5,"supports_xsave","","",null,[[],["bool",15]]],[5,"supports_fsgs","","",null,[[],["bool",15]]],[5,"msb","","Search the most significant bit",null,[[["u64",15]],[["u64",15],["option",4]]]],[5,"halt","","The halt function stops the processor until the next …",null,[[]]],[5,"shutdown","","Shutdown the system",null,[[]]],[5,"get_timer_ticks","","",null,[[],["u64",15]]],[5,"get_frequency","","",null,[[],["u16",15]]],[5,"readfs","","",null,[[],["usize",15]]],[5,"readgs","","",null,[[],["usize",15]]],[5,"writefs","","",null,[[["usize",15]]]],[5,"writegs","","",null,[[["usize",15]]]],[5,"get_timestamp","","",null,[[],["u64",15]]],[5,"udelay","","Delay execution by the given number of microseconds using …",null,[[["u64",15]]]],[0,"scheduler","hermit::kernel","Architecture dependent interface to initialize a task",null,null],[3,"BootStack","hermit::kernel::scheduler","",null,null],[3,"CommonStack","","",null,null],[4,"TaskStacks","","",null,null],[13,"Boot","","",37,null],[13,"Common","","",37,null],[3,"TaskTLS","","",null,null],[5,"install_timer_handler","","",null,[[]]],[0,"serial","hermit::kernel","",null,null],[3,"SerialPort","hermit::kernel::serial","",null,null],[12,"port_address","","",38,null],[0,"systemtime","hermit::kernel","",null,null],[5,"get_boot_time","hermit::kernel::systemtime","",null,[[],["u64",15]]],[5,"init","","",null,[[]]],[3,"BootInfo","hermit::kernel","",null,null],[5,"has_ipdevice","","",null,[[],["bool",15]]],[5,"uhyve_get_ip","","",null,[[]]],[5,"sys_uhyve_get_ip","","",null,[[]]],[5,"uhyve_get_gateway","","",null,[[]]],[5,"sys_uhyve_get_gateway","","",null,[[]]],[5,"uhyve_get_mask","","",null,[[]]],[5,"sys_uhyve_get_mask","","",null,[[]]],[5,"get_base_address","","",null,[[],["virtaddr",3]]],[5,"get_image_size","","",null,[[],["usize",15]]],[5,"get_limit","","",null,[[],["usize",15]]],[5,"get_tls_start","","",null,[[],["virtaddr",3]]],[5,"get_tls_filesz","","",null,[[],["usize",15]]],[5,"get_tls_memsz","","",null,[[],["usize",15]]],[5,"get_mbinfo","","",null,[[],["virtaddr",3]]],[5,"get_processor_count","","",null,[[],["u32",15]]],[5,"is_uhyve","","Whether HermitCore is running under the \\\"uhyve\\\" …",null,[[],["bool",15]]],[5,"is_uhyve_with_pci","","",null,[[],["bool",15]]],[5,"is_single_kernel","","Whether HermitCore is running alone (true) or …",null,[[],["bool",15]]],[5,"get_cmdsize","","",null,[[],["usize",15]]],[5,"get_cmdline","","",null,[[],["virtaddr",3]]],[5,"message_output_init","","Earliest initialization function called by the Boot …",null,[[]]],[5,"output_message_byte","","",null,[[["u8",15]]]],[5,"output_message_buf","","",null,[[]]],[5,"boot_processor_init","","Real Boot Processor initialization as soon as we have put …",null,[[]]],[5,"boot_application_processors","","Boots all available Application Processors on bare-metal …",null,[[]]],[5,"application_processor_init","","Application Processor initialization",null,[[]]],[5,"print_statistics","","",null,[[]]],[0,"mm","hermit","",null,null],[0,"paging","hermit::mm","",null,null],[3,"PageTableEntryFlags","hermit::mm::paging","Possible flags for an entry in either table (PML4, PDPT, …",null,null],[3,"PageTableEntry","","An entry in either table (PML4, PDPT, PD, PT)",null,null],[8,"PageSize","","A generic interface to support all possible page sizes.",null,null],[18,"SIZE","hermit::x86_64::mm::paging","The page size in bytes.",39,null],[18,"MAP_LEVEL","","The page table level at which a page of this size is …",39,null],[18,"MAP_EXTRA_FLAG","","Any extra flag that needs to be set to map a page of this …",39,null],[4,"BasePageSize","hermit::mm::paging","A 4 KiB page mapped in the PT.",null,null],[4,"LargePageSize","","A 2 MiB page mapped in the PD.",null,null],[4,"HugePageSize","","A 1 GiB page mapped in the PDPT.",null,null],[5,"page_fault_handler","","",null,[[["exceptionstackframe",3],["u64",15]]]],[5,"get_page_table_entry","","",null,[[["virtaddr",3]],[["pagetableentry",3],["option",4]]]],[5,"get_physical_address","","",null,[[["virtaddr",3]],["physaddr",3]]],[5,"virtual_to_physical","","Translate a virtual memory address to a physical one.",null,[[["virtaddr",3]],["physaddr",3]]],[5,"virt_to_phys","","",null,[[["virtaddr",3]],["physaddr",3]]],[5,"map","","",null,[[["usize",15],["pagetableentryflags",3],["physaddr",3],["virtaddr",3]]]],[5,"unmap","","",null,[[["virtaddr",3],["usize",15]]]],[5,"identity_map","","",null,[[["physaddr",3]]]],[5,"get_application_page_size","","",null,[[],["usize",15]]],[5,"init","","",null,[[]]],[5,"init_page_tables","","",null,[[]]],[0,"physicalmem","hermit::mm","",null,null],[5,"init","hermit::mm::physicalmem","",null,[[]]],[5,"total_memory_size","","",null,[[],["usize",15]]],[5,"allocate","","",null,[[["usize",15]],[["result",4],["physaddr",3]]]],[5,"allocate_aligned","","",null,[[["usize",15]],[["result",4],["physaddr",3]]]],[5,"deallocate","","This function must only be called from mm::deallocate! …",null,[[["usize",15],["physaddr",3]]]],[5,"print_information","","",null,[[]]],[0,"virtualmem","hermit::mm","",null,null],[5,"init","hermit::mm::virtualmem","",null,[[]]],[5,"allocate","","",null,[[["usize",15]],[["virtaddr",3],["result",4]]]],[5,"allocate_aligned","","",null,[[["usize",15]],[["virtaddr",3],["result",4]]]],[5,"deallocate","","",null,[[["virtaddr",3],["usize",15]]]],[5,"print_information","","",null,[[]]],[5,"kernel_heap_end","","End of the virtual memory address space reserved for …",null,[[],["virtaddr",3]]],[5,"init_page_tables","hermit::mm","",null,[[]]],[3,"PhysAddr","","A wrapper for a physical address.",null,null],[12,"0","","",40,null],[3,"VirtAddr","","A wrapper for a virtual address.",null,null],[12,"0","","",41,null],[5,"init","","",null,[[]]],[0,"irq","hermit","",null,null],[3,"ExceptionStackFrame","hermit::irq","Represents the exception stack frame pushed by the CPU on …",null,null],[12,"instruction_pointer","","This value points to the instruction that should be …",18,null],[12,"code_segment","","The code segment selector, padded with zeros.",18,null],[12,"cpu_flags","","The flags register before the interrupt handler was …",18,null],[12,"stack_pointer","","The stack pointer at the time of the interrupt.",18,null],[12,"stack_segment","","The stack segment descriptor at the time of the interrupt …",18,null],[5,"enable","","Enable Interrupts",null,[[]]],[5,"enable_and_wait","","Enable Interrupts and wait for the next interrupt (HLT …",null,[[]]],[5,"disable","","Disable Interrupts",null,[[]]],[5,"nested_disable","","Disable IRQs (nested)",null,[[],["bool",15]]],[5,"nested_enable","","Enable IRQs (nested)",null,[[["bool",15]]]],[5,"install","","",null,[[]]],[5,"irq_install_handler","","",null,[[["u32",15],["usize",15]]]],[5,"add_irq_name","","",null,[[["u32",15],["str",15]]]],[5,"get_irq_name","","",null,[[["u32",15]],[["option",4],["string",3]]]],[3,"IrqStatistics","","",null,null],[12,"counters","","",19,null],[0,"percore","hermit","",null,null],[7,"PERCORE","hermit::percore","",null,null],[6,"PerCoreVariables","","",null,null],[3,"PerCoreInnerVariables","","",null,null],[12,"tss","","Task State Segment (TSS) allocated for this CPU Core.",28,null],[12,"kernel_stack","","start address of the kernel stack",28,null],[12,"irq_statistics","","Interface to the interrupt counters",28,null],[3,"PerCoreVariable","","",null,null],[8,"PerCoreVariableMethods","","",null,null],[10,"get","","",29,[[]]],[10,"set","","",29,[[]]],[8,"Is32BitVariable","","",null,null],[5,"core_id","","",null,[[],["u32",15]]],[5,"get_kernel_stack","","",null,[[],["u64",15]]],[5,"set_kernel_stack","","",null,[[["u64",15]]]],[5,"core_scheduler","","",null,[[],["percorescheduler",3]]],[5,"set_core_scheduler","","",null,[[]]],[5,"increment_irq_counter","","",null,[[["usize",15]]]],[5,"init","","",null,[[]]],[0,"processor","hermit","",null,null],[3,"XSaveLegacyRegion","hermit::processor","",null,null],[12,"fpu_control_word","","",30,null],[12,"fpu_status_word","","",30,null],[12,"fpu_tag_word","","",30,null],[12,"fpu_opcode","","",30,null],[12,"fpu_instruction_pointer","","",30,null],[12,"fpu_instruction_pointer_high_or_cs","","",30,null],[12,"fpu_data_pointer","","",30,null],[12,"fpu_data_pointer_high_or_ds","","",30,null],[12,"mxcsr","","",30,null],[12,"mxcsr_mask","","",30,null],[12,"st_space","","",30,null],[12,"xmm_space","","",30,null],[12,"padding","","",30,null],[3,"XSaveHeader","","",null,null],[12,"xstate_bv","","",31,null],[12,"xcomp_bv","","",31,null],[12,"reserved","","",31,null],[3,"XSaveAVXState","","",null,null],[12,"ymmh_space","","",32,null],[3,"XSaveLWPState","","XSave Area for AMD Lightweight Profiling. Refer to AMD …",null,null],[12,"lwpcb_address","","",33,null],[12,"flags","","",33,null],[12,"buffer_head_offset","","",33,null],[12,"buffer_base","","",33,null],[12,"buffer_size","","",33,null],[12,"filters","","",33,null],[12,"saved_event_record","","",33,null],[12,"event_counter","","",33,null],[3,"XSaveBndregs","","",null,null],[12,"bound_registers","","",34,null],[3,"XSaveBndcsr","","",null,null],[12,"bndcfgu_register","","",35,null],[12,"bndstatus_register","","",35,null],[3,"FPUState","","",null,null],[12,"legacy_region","","",36,null],[12,"header","","",36,null],[12,"avx_state","","",36,null],[12,"lwp_state","","",36,null],[12,"bndregs","","",36,null],[12,"bndcsr","","",36,null],[5,"run_on_hypervisor","","",null,[[],["bool",15]]],[5,"detect_features","","",null,[[]]],[5,"configure","","",null,[[]]],[5,"detect_frequency","","",null,[[]]],[5,"print_information","","",null,[[]]],[5,"generate_random_number32","","",null,[[],[["option",4],["u32",15]]]],[5,"generate_random_number64","","",null,[[],[["u64",15],["option",4]]]],[5,"get_linear_address_bits","","",null,[[],["u8",15]]],[5,"get_physical_address_bits","","",null,[[],["u8",15]]],[5,"supports_1gib_pages","","",null,[[],["bool",15]]],[5,"supports_avx","","",null,[[],["bool",15]]],[5,"supports_tsc_deadline","","",null,[[],["bool",15]]],[5,"supports_x2apic","","",null,[[],["bool",15]]],[5,"supports_xsave","","",null,[[],["bool",15]]],[5,"supports_fsgs","","",null,[[],["bool",15]]],[5,"msb","","Search the most significant bit",null,[[["u64",15]],[["u64",15],["option",4]]]],[5,"halt","","The halt function stops the processor until the next …",null,[[]]],[5,"shutdown","","Shutdown the system",null,[[]]],[5,"get_timer_ticks","","",null,[[],["u64",15]]],[5,"get_frequency","","",null,[[],["u16",15]]],[5,"readfs","","",null,[[],["usize",15]]],[5,"readgs","","",null,[[],["usize",15]]],[5,"writefs","","",null,[[["usize",15]]]],[5,"writegs","","",null,[[["usize",15]]]],[5,"get_timestamp","","",null,[[],["u64",15]]],[5,"udelay","","Delay execution by the given number of microseconds using …",null,[[["u64",15]]]],[0,"scheduler","hermit","Architecture dependent interface to initialize a task",null,null],[3,"BootStack","hermit::scheduler","",null,null],[3,"CommonStack","","",null,null],[4,"TaskStacks","","",null,null],[13,"Boot","","",37,null],[13,"Common","","",37,null],[3,"TaskTLS","","",null,null],[5,"install_timer_handler","","",null,[[]]],[0,"fs","hermit","",null,null],[7,"FILESYSTEM","hermit::fs","",null,null],[3,"Filesystem","","",null,null],[4,"FileError","","",null,null],[13,"ENOENT","","",42,null],[13,"ENOSYS","","",42,null],[8,"PosixFileSystem","","",null,null],[10,"open","","",43,[[["fileperms",3],["str",15]],[["result",4],["fileerror",4],["box",3]]]],[10,"unlink","","",43,[[["str",15]],[["fileerror",4],["result",4]]]],[8,"PosixFile","","",null,null],[10,"close","","",44,[[],[["fileerror",4],["result",4]]]],[10,"read","","",44,[[["u32",15]],[["result",4],["fileerror",4],["vec",3]]]],[10,"write","","",44,[[],[["result",4],["fileerror",4],["u64",15]]]],[10,"lseek","","",44,[[["isize",15],["seekwhence",4]],[["usize",15],["fileerror",4],["result",4]]]],[3,"FilePerms","","",null,null],[12,"write","","",45,null],[12,"creat","","",45,null],[12,"excl","","",45,null],[12,"trunc","","",45,null],[12,"append","","",45,null],[12,"directio","","",45,null],[12,"raw","","",45,null],[12,"mode","","",45,null],[4,"SeekWhence","","",null,null],[13,"Set","","",46,null],[13,"Cur","","",46,null],[13,"End","","",46,null],[11,"header_start_address","hermit::x86_64::kernel::acpi","",47,[[],["usize",15]]],[11,"table_start_address","","",47,[[],["usize",15]]],[11,"table_end_address","","",47,[[],["usize",15]]],[11,"new","hermit::x86_64::kernel::fuse","",48,[[]]],[11,"send_init","","",48,[[]]],[11,"lookup","","",48,[[["str",15]],[["u64",15],["option",4]]]],[11,"to_u8buf","","",49,[[],["vec",3]]],[11,"to_u8buf_mut","","",50,[[],["vec",3]]],[11,"new","hermit::x86_64::kernel::irq","",19,[[]]],[11,"inc","","",19,[[["usize",15]]]],[11,"make_bus_master","hermit::x86_64::kernel::pci","",23,[[]]],[11,"get_bar","","Returns the bar at bar-register baridx.",23,[[["u8",15]],[["pcibar",4],["option",4]]]],[11,"memory_map_bar","","Memory maps pci bar with specified index to identical …",23,[[["bool",15],["u8",15]],["option",4]]],[11,"new","hermit::x86_64::kernel::percore","",28,[[["u32",15]]]],[11,"new","","",51,[[]]],[11,"new","hermit::x86_64::kernel::processor","",36,[[]]],[11,"restore","","",36,[[]]],[11,"save","","",36,[[]]],[11,"restore_common","","",36,[[]]],[11,"save_common","","",36,[[]]],[11,"new","hermit::x86_64::kernel::scheduler","",37,[[["usize",15]],["taskstacks",4]]],[11,"from_boot_stacks","","",37,[[],["taskstacks",4]]],[11,"get_user_stack_size","","",37,[[],["usize",15]]],[11,"get_user_stack","","",37,[[],["virtaddr",3]]],[11,"get_kernel_stack","","",37,[[],["virtaddr",3]]],[11,"get_kernel_stack_size","","",37,[[],["usize",15]]],[11,"get_interupt_stack","","",37,[[],["virtaddr",3]]],[11,"get_interupt_stack_size","","",37,[[],["usize",15]]],[11,"new","","",52,[[["usize",15]]]],[11,"address","","",52,[[],["virtaddr",3]]],[11,"get_fs","","",52,[[],["virtaddr",3]]],[11,"new","hermit::x86_64::kernel::serial","",38,[[["u16",15]]]],[11,"write_byte","","",38,[[["u8",15]]]],[11,"init","","",38,[[["u32",15]]]],[18,"PRESENT","hermit::x86_64::mm::paging","Set if this entry is valid and points to a page or table.",53,null],[18,"WRITABLE","","Set if memory referenced by this entry shall be writable.",53,null],[18,"USER_ACCESSIBLE","","Set if memory referenced by this entry shall be …",53,null],[18,"WRITE_THROUGH","","Set if Write-Through caching shall be enabled for memory …",53,null],[18,"CACHE_DISABLE","","Set if caching shall be disabled for memory referenced by …",53,null],[18,"ACCESSED","","Set if software has accessed this entry (for memory …",53,null],[18,"DIRTY","","Only for page entries: Set if software has written to the …",53,null],[18,"HUGE_PAGE","","Only for page entries in PDPT or PDT: Set if this entry …",53,null],[18,"GLOBAL","","Only for page entries: Set if this address translation is …",53,null],[18,"EXECUTE_DISABLE","","Set if code execution shall be disabled for memory …",53,null],[11,"empty","","Returns an empty set of flags",53,[[],["pagetableentryflags",3]]],[11,"all","","Returns the set containing all flags.",53,[[],["pagetableentryflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",53,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",53,[[["u64",15]],[["pagetableentryflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",53,[[["u64",15]],["pagetableentryflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",53,[[["u64",15]],["pagetableentryflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",53,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",53,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",53,[[["pagetableentryflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",53,[[["pagetableentryflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",53,[[["pagetableentryflags",3]]]],[11,"remove","","Removes the specified flags in-place.",53,[[["pagetableentryflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",53,[[["pagetableentryflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",53,[[["bool",15],["pagetableentryflags",3]]]],[11,"device","","",53,[[]]],[11,"normal","","",53,[[]]],[11,"read_only","","",53,[[]]],[11,"writable","","",53,[[]]],[11,"execute_disable","","",53,[[]]],[11,"address","","Return the stored physical address.",54,[[],["physaddr",3]]],[18,"SIZE","","The page size in bytes.",39,null],[18,"MAP_LEVEL","","The page table level at which a page of this size is …",39,null],[18,"MAP_EXTRA_FLAG","","Any extra flag that needs to be set to map a page of this …",39,null],[0,"environment","hermit","Determining and providing information about the …",null,null],[5,"get_base_address","hermit::environment","",null,[[],["virtaddr",3]]],[5,"get_cmdline","","",null,[[],["virtaddr",3]]],[5,"get_cmdsize","","",null,[[],["usize",15]]],[5,"get_image_size","","",null,[[],["usize",15]]],[5,"get_tls_filesz","","",null,[[],["usize",15]]],[5,"get_tls_memsz","","",null,[[],["usize",15]]],[5,"get_tls_start","","",null,[[],["virtaddr",3]]],[5,"is_single_kernel","","Whether HermitCore is running alone (true) or …",null,[[],["bool",15]]],[5,"is_uhyve","","Whether HermitCore is running under the \\\"uhyve\\\" …",null,[[],["bool",15]]],[5,"get_command_line_argv","","Returns the cmdline argument passed in after \\\"--\\\"",null,[[],["option",4]]],[5,"get_command_line_path","","Returns the first cmdline argument, if not otherwise …",null,[[],[["str",15],["option",4]]]],[5,"init","","",null,[[]]],[5,"get_command_line_cpu_frequency","","CPU Frequency in MHz if given through the -freq …",null,[[],["u16",15]]],[5,"is_proxy","","Whether HermitCore shall communicate with the \\\"proxy\\\" …",null,[[],["bool",15]]],[11,"new","hermit::fs","",55,[[]]],[11,"open","","Tries to open file at given path …",55,[[["fileperms",3],["str",15]],[["result",4],["fileerror",4],["u64",15]]]],[11,"close","","",55,[[["u64",15]]]],[11,"unlink","","Unlinks a file given by path",55,[[["str",15]],[["fileerror",4],["result",4]]]],[11,"mount","","Create new backing-fs at mountpoint mntpath",55,[[["posixfilesystem",8],["box",3],["str",15]],["result",4]]],[11,"fd_op","","Run closure on file referenced by file descriptor.",55,[[["u64",15]]]],[5,"set_oneshot_timer","hermit","",null,[[["option",4],["u64",15]]]],[5,"wakeup_core","","Send an inter-processor interrupt to wake up a CPU Core …",null,[[["u32",15]]]],[5,"application_processor_init","","Application Processor initialization",null,[[]]],[5,"set_current_kernel_stack","","",null,[[]]],[5,"get_boot_time","","",null,[[],["u64",15]]],[5,"boot_application_processors","","Boots all available Application Processors on bare-metal …",null,[[]]],[5,"boot_processor_init","","Real Boot Processor initialization as soon as we have put …",null,[[]]],[5,"get_processor_count","","",null,[[],["u32",15]]],[5,"message_output_init","","Earliest initialization function called by the Boot …",null,[[]]],[5,"output_message_buf","","",null,[[]]],[5,"output_message_byte","","",null,[[["u8",15]]]],[17,"KERNEL_STACK_SIZE","","",null,null],[17,"DEFAULT_STACK_SIZE","","",null,null],[17,"USER_STACK_SIZE","","",null,null],[17,"VIRTIO_MAX_QUEUE_SIZE","","",null,null],[17,"HW_DESTRUCTIVE_INTERFERENCE_SIZE","","See …",null,null],[5,"sanity_check","","Sanity check for config parameters",null,[[]]],[5,"sys_destroy_queue","","",null,[[["usize",15]],["i32",15]]],[5,"sys_notify","","",null,[[["usize",15],["i32",15]],["i32",15]]],[5,"sys_init_queue","","",null,[[["usize",15]],["i32",15]]],[5,"sys_add_queue","","",null,[[["usize",15],["i64",15]],["i32",15]]],[5,"sys_wait","","",null,[[["usize",15]],["i32",15]]],[5,"sys_get_processor_count","","Returns the number of processors currently online. ",null,[[],["usize",15]]],[5,"sys_get_processor_frequency","","Returns the processor frequency in MHz. ",null,[[],["u16",15]]],[5,"sys_secure_rand32","","Create a cryptographicly secure 32bit random number with …",null,[[],[["option",4],["u32",15]]]],[5,"sys_secure_rand64","","Create a cryptographicly secure 64bit random number with …",null,[[],[["u64",15],["option",4]]]],[5,"sys_rand","","The function computes a sequence of pseudo-random integers…",null,[[],["u32",15]]],[5,"sys_srand","","The function sets its argument as the seed for a new …",null,[[["u32",15]]]],[5,"random_init","","",null,[[]]],[5,"sys_recmutex_init","","",null,[[],["i32",15]]],[5,"sys_recmutex_destroy","","",null,[[],["i32",15]]],[5,"sys_recmutex_lock","","",null,[[],["i32",15]]],[5,"sys_recmutex_unlock","","",null,[[],["i32",15]]],[5,"sys_sem_init","","",null,[[["u32",15]],["i32",15]]],[5,"sys_sem_destroy","","",null,[[],["i32",15]]],[5,"sys_sem_post","","",null,[[],["i32",15]]],[5,"sys_sem_trywait","","",null,[[],["i32",15]]],[5,"sys_sem_timedwait","","",null,[[["u32",15]],["i32",15]]],[5,"sys_sem_cancelablewait","","",null,[[["u32",15]],["i32",15]]],[3,"SpinlockContainer","","",null,null],[3,"SpinlockIrqSaveContainer","","",null,null],[5,"sys_spinlock_init","","",null,[[],["i32",15]]],[5,"sys_spinlock_destroy","","",null,[[],["i32",15]]],[5,"sys_spinlock_lock","","",null,[[],["i32",15]]],[5,"sys_spinlock_unlock","","",null,[[],["i32",15]]],[5,"sys_spinlock_irqsave_init","","",null,[[],["i32",15]]],[5,"sys_spinlock_irqsave_destroy","","",null,[[],["i32",15]]],[5,"sys_spinlock_irqsave_lock","","",null,[[],["i32",15]]],[5,"sys_spinlock_irqsave_unlock","","",null,[[],["i32",15]]],[5,"sys_getpagesize","","",null,[[],["i32",15]]],[6,"Tid","","",null,null],[5,"sys_getpid","","",null,[[],["tid",6]]],[5,"sys_getprio","","",null,[[],["i32",15]]],[5,"sys_setprio","","",null,[[["i32",15]],["i32",15]]],[5,"sys_exit","","",null,[[["i32",15]]]],[5,"sys_thread_exit","","",null,[[["i32",15]]]],[5,"sys_abort","","",null,[[]]],[5,"__sys_usleep","","",null,[[["u64",15]]]],[5,"sys_usleep","","",null,[[["u64",15]]]],[5,"sys_msleep","","",null,[[["u32",15]]]],[5,"sys_nanosleep","","",null,[[],["i32",15]]],[5,"sys_yield","","",null,[[]]],[5,"sys_spawn2","","",null,[[["usize",15],["isize",15],["u8",15]],["tid",6]]],[5,"sys_spawn","","",null,[[["usize",15],["isize",15],["u8",15]],["i32",15]]],[5,"sys_join","","",null,[[["tid",6]],["i32",15]]],[5,"sys_block_current_task","","Set the current task state to <code>blocked</code>",null,[[]]],[5,"sys_wakeup_task","","Wake up the task with the identifier <code>id</code>",null,[[["tid",6]]]],[5,"sys_get_priority","","Determine the priority of the current thread",null,[[],["u8",15]]],[3,"itimerval","","",null,null],[12,"it_interval","","",56,null],[12,"it_value","","",56,null],[3,"timespec","","",null,null],[12,"tv_sec","","",57,null],[12,"tv_nsec","","",57,null],[3,"timeval","","",null,null],[12,"tv_sec","","",58,null],[12,"tv_usec","","",58,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[5,"sys_clock_getres","","",null,[[["u64",15]],["i32",15]]],[5,"sys_clock_gettime","","",null,[[["u64",15]],["i32",15]]],[5,"sys_clock_nanosleep","","",null,[[["i32",15],["u64",15]],["i32",15]]],[5,"sys_clock_settime","","",null,[[["u64",15]],["i32",15]]],[5,"sys_gettimeofday","","",null,[[["usize",15]],["i32",15]]],[5,"sys_setitimer","","",null,[[["i32",15]],["i32",15]]],[5,"sys_malloc","","",null,[[["usize",15]]]],[5,"sys_realloc","","",null,[[["usize",15]]]],[5,"sys_free","","",null,[[["usize",15]]]],[5,"get_application_parameters","","",null,[[]]],[5,"sys_get_mac_address","","",null,[[],["result",4]]],[5,"sys_get_mtu","","",null,[[],[["u16",15],["result",4]]]],[5,"sys_get_tx_buffer","","",null,[[["usize",15]],["result",4]]],[5,"sys_send_tx_buffer","","",null,[[["usize",15]],["result",4]]],[5,"sys_receive_rx_buffer","","",null,[[],["result",4]]],[5,"sys_rx_buffer_consumed","","",null,[[["usize",15]],["result",4]]],[5,"sys_netwait","","",null,[[["usize",15],["option",4],["u64",15]]]],[5,"sys_netwait_and_wakeup","","",null,[[["option",4],["u64",15]]]],[5,"__sys_shutdown","","",null,[[["i32",15]]]],[5,"sys_shutdown","","",null,[[["i32",15]]]],[5,"sys_unlink","","",null,[[],["i32",15]]],[5,"sys_open","","",null,[[["i32",15]],["i32",15]]],[5,"sys_close","","",null,[[["i32",15]],["i32",15]]],[5,"sys_read","","",null,[[["usize",15],["i32",15]],["isize",15]]],[5,"sys_write","","",null,[[["usize",15],["i32",15]],["isize",15]]],[5,"sys_lseek","","",null,[[["isize",15],["i32",15]],["isize",15]]],[5,"sys_stat","","",null,[[["usize",15]],["i32",15]]],[5,"__sys_malloc","","Interface to allocate memory from system heap",null,[[["usize",15]]]],[5,"__sys_realloc","","Shrink or grow a block of memory to the given <code>new_size</code>. …",null,[[["usize",15]]]],[5,"__sys_free","","Interface to deallocate a memory region from the system …",null,[[["usize",15]]]],[14,"print","","Print formatted text to our console.",null,null],[14,"println","","Print formatted text to our console, followed by a …",null,null],[11,"from","hermit::x86_64::kernel::acpi","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","hermit::x86_64::kernel::fuse","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","hermit::x86_64::kernel::irq","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","hermit::x86_64::kernel::pci::error","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","hermit::x86_64::kernel::pci","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","hermit::x86_64::kernel::percore","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","hermit::x86_64::kernel::processor","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","hermit::x86_64::kernel::scheduler","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"from","hermit::x86_64::kernel::serial","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","hermit::x86_64::kernel","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","hermit::x86_64::mm::paging","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"from","hermit::mm","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"from","hermit::fs","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","hermit","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"add_assign","hermit::mm","",41,[[["u64",15]]]],[11,"add_assign","","",40,[[["u64",15]]]],[11,"add_assign","","",41,[[["vaddr",3]]]],[11,"add_assign","","",40,[[["paddr",3]]]],[11,"add_assign","","",41,[[["usize",15]]]],[11,"eq","","",40,[[["paddr",3]],["bool",15]]],[11,"ne","","",40,[[["paddr",3]],["bool",15]]],[11,"eq","","",41,[[["vaddr",3]],["bool",15]]],[11,"ne","","",41,[[["vaddr",3]],["bool",15]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"rem","","",40,[[["u64",15]]]],[11,"rem","","",40,[[["paddr",3]]]],[11,"rem","","",41,[[]]],[11,"rem","","",41,[[]]],[11,"rem","","",40,[[["usize",15]]]],[11,"rem","","",41,[[["vaddr",3]]]],[11,"partial_cmp","","",40,[[["paddr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",40,[[["paddr",3]],["bool",15]]],[11,"le","","",40,[[["paddr",3]],["bool",15]]],[11,"gt","","",40,[[["paddr",3]],["bool",15]]],[11,"ge","","",40,[[["paddr",3]],["bool",15]]],[11,"partial_cmp","","",41,[[["vaddr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["vaddr",3]],["bool",15]]],[11,"le","","",41,[[["vaddr",3]],["bool",15]]],[11,"gt","","",41,[[["vaddr",3]],["bool",15]]],[11,"ge","","",41,[[["vaddr",3]],["bool",15]]],[11,"clone","","",41,[[],["vaddr",3]]],[11,"clone","","",40,[[],["paddr",3]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","",40,[[["usize",15]]]],[11,"sub","","",41,[[["vaddr",3]]]],[11,"sub","","",40,[[["u64",15]]]],[11,"sub","","",40,[[["paddr",3]]]],[11,"sub","","",41,[[["u64",15]]]],[11,"sub","","",41,[[["usize",15]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitor","","",41,[[["usize",15]]]],[11,"bitor","","",41,[[["u64",15]]]],[11,"bitor","","",40,[[["paddr",3]]]],[11,"bitor","","",40,[[["u64",15]]]],[11,"bitor","","",41,[[["vaddr",3]],["vaddr",3]]],[11,"into","","",41,[[],["u64",15]]],[11,"into","","",40,[[],["usize",15]]],[11,"into","","",40,[[],["u64",15]]],[11,"into","","",41,[[],["usize",15]]],[11,"add","","",40,[[["usize",15]]]],[11,"add","","",40,[[["u64",15]]]],[11,"add","","",41,[[["usize",15]]]],[11,"add","","",41,[[["u64",15]]]],[11,"add","","",41,[[["vaddr",3]]]],[11,"add","","",40,[[["paddr",3]]]],[11,"shr","","",41,[[["i32",15]]]],[11,"shr","","",41,[[["usize",15]]]],[11,"shr","","",41,[[["u64",15]]]],[11,"shr","","",40,[[["u64",15]]]],[11,"bitand","","",40,[[["paddr",3]],["paddr",3]]],[11,"bitand","","",40,[[["u64",15]]]],[11,"bitand","","",41,[[["u64",15]]]],[11,"bitand","","",41,[[["vaddr",3]]]],[11,"bitand","","",41,[[["i32",15]]]],[11,"bitand","","",41,[[["usize",15]]]],[11,"from","","",40,[[["usize",15]],["paddr",3]]],[11,"from","","",41,[[["u64",15]],["vaddr",3]]],[11,"from","","",41,[[["usize",15]],["vaddr",3]]],[11,"from","","",41,[[["i32",15]],["vaddr",3]]],[11,"from","","",40,[[["u64",15]],["paddr",3]]],[11,"from","","",40,[[["i32",15]],["paddr",3]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cmp","","",40,[[["paddr",3]],["ordering",4]]],[11,"cmp","","",41,[[["vaddr",3]],["ordering",4]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"get","hermit::x86_64::kernel::percore","",51,[[]]],[11,"set","","",51,[[]]],[11,"get","","",51,[[]]],[11,"set","","",51,[[]]],[11,"open","hermit::x86_64::kernel::fuse","",48,[[["fileperms",3],["str",15]],[["result",4],["fileerror",4],["box",3]]]],[11,"unlink","","",48,[[["str",15]],[["fileerror",4],["result",4]]]],[11,"from","","",12,[[["str",15]]]],[11,"from","","",15,[[["str",15]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","hermit::x86_64::kernel::irq","",18,[[["formatter",3]],["result",6]]],[11,"fmt","hermit::x86_64::kernel::pci","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","hermit::x86_64::kernel::pci::error","",20,[[["formatter",3]],["result",6]]],[11,"fmt","hermit::x86_64::mm::paging","",53,[[["formatter",3]],["result",6]]],[11,"fmt","hermit::fs","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","hermit","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","hermit::x86_64::kernel::pci","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"sub","hermit::x86_64::mm::paging","Returns the set difference of the two sets of flags.",53,[[["pagetableentryflags",3]],["pagetableentryflags",3]]],[11,"eq","hermit::x86_64::kernel::pci","",21,[[["pciclasscode",4]],["bool",15]]],[11,"eq","","",22,[[["pcinetworkcontrollersubclass",4]],["bool",15]]],[11,"eq","hermit::x86_64::mm::paging","",53,[[["pagetableentryflags",3]],["bool",15]]],[11,"ne","","",53,[[["pagetableentryflags",3]],["bool",15]]],[11,"cmp","","",53,[[["pagetableentryflags",3]],["ordering",4]]],[11,"partial_cmp","","",53,[[["pagetableentryflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",53,[[["pagetableentryflags",3]],["bool",15]]],[11,"le","","",53,[[["pagetableentryflags",3]],["bool",15]]],[11,"gt","","",53,[[["pagetableentryflags",3]],["bool",15]]],[11,"ge","","",53,[[["pagetableentryflags",3]],["bool",15]]],[11,"sub_assign","","Disables all flags enabled in the set.",53,[[["pagetableentryflags",3]]]],[11,"not","","Returns the complement of this set of flags.",53,[[],["pagetableentryflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",53,[[["pagetableentryflags",3]],["pagetableentryflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",53,[[["pagetableentryflags",3]],["pagetableentryflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",53,[[["pagetableentryflags",3]],["pagetableentryflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",53,[[["pagetableentryflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",53,[[["pagetableentryflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",53,[[["pagetableentryflags",3]]]],[11,"drop","hermit::x86_64::kernel::acpi","",47,[[]]],[11,"drop","hermit::x86_64::kernel::scheduler","",37,[[]]],[11,"drop","","",52,[[]]],[11,"hash","hermit::x86_64::mm::paging","",53,[[]]],[11,"try_from","hermit::fs","",46,[[["i32",15]],["result",4]]],[11,"from_iter","hermit::x86_64::mm::paging","",53,[[["intoiterator",8]],["pagetableentryflags",3]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"extend","","",53,[[["intoiterator",8]]]],[11,"clone","hermit::x86_64::kernel::fuse","",1,[[],["opcode",4]]],[11,"clone","hermit::x86_64::kernel::irq","",19,[[],["irqstatistics",3]]],[11,"clone","hermit::x86_64::kernel::pci","",21,[[],["pciclasscode",4]]],[11,"clone","","",22,[[],["pcinetworkcontrollersubclass",4]]],[11,"clone","","",23,[[],["pciadapter",3]]],[11,"clone","","",24,[[],["pcibar",4]]],[11,"clone","","",25,[[],["iobar",3]]],[11,"clone","","",26,[[],["memorybar",3]]],[11,"clone","hermit::x86_64::kernel::scheduler","",37,[[],["taskstacks",4]]],[11,"clone","","",52,[[]]],[11,"clone","hermit::x86_64::mm::paging","",53,[[],["pagetableentryflags",3]]],[11,"clone","","",54,[[],["pagetableentry",3]]],[11,"clone","","",65,[[],["basepagesize",4]]],[11,"clone","","",66,[[],["largepagesize",4]]],[11,"clone","","",67,[[],["hugepagesize",4]]],[11,"clone","hermit::fs","",45,[[],["fileperms",3]]],[11,"clone","hermit","",56,[[],["itimerval",3]]],[11,"clone","","",57,[[],["timespec",3]]],[11,"clone","","",58,[[],["timeval",3]]],[11,"default","hermit::x86_64::kernel::fuse","",3,[[],["fuse_out_header",3]]],[11,"default","","",5,[[],["fuse_init_out",3]]],[11,"default","","",6,[[],["fuse_read_in",3]]],[11,"default","","",59,[[],["fuse_read_out",3]]],[11,"default","","",7,[[],["fuse_write_in",3]]],[11,"default","","",8,[[],["fuse_write_out",3]]],[11,"default","","",9,[[],["fuse_open_in",3]]],[11,"default","","",10,[[],["fuse_open_out",3]]],[11,"default","","",11,[[],["fuse_release_in",3]]],[11,"default","","",60,[[],["fuse_release_out",3]]],[11,"default","","",13,[[],["fuse_entry_out",3]]],[11,"default","","",14,[[],["fuse_attr",3]]],[11,"default","","",61,[[],["fuse_unlink_out",3]]],[11,"default","","",17,[[],["fuse_create_out",3]]],[11,"default","hermit::fs","",45,[[],["fileperms",3]]],[11,"to_i64","hermit::x86_64::kernel::pci","",21,[[],[["i64",15],["option",4]]]],[11,"to_u64","","",21,[[],[["u64",15],["option",4]]]],[11,"to_i64","","",22,[[],[["i64",15],["option",4]]]],[11,"to_u64","","",22,[[],[["u64",15],["option",4]]]],[11,"from_i64","","",21,[[["i64",15]],["option",4]]],[11,"from_u64","","",21,[[["u64",15]],["option",4]]],[11,"from_i64","","",22,[[["i64",15]],["option",4]]],[11,"from_u64","","",22,[[["u64",15]],["option",4]]],[11,"as_u64","hermit::mm","Convert to <code>u64</code>",40,[[],["u64",15]]],[11,"as_usize","","Convert to <code>usize</code>",40,[[],["usize",15]]],[11,"zero","","Physical Address zero.",40,[[],["paddr",3]]],[11,"is_zero","","Is zero?",40,[[],["bool",15]]],[11,"base_page_offset","","Offset within the 4 KiB page.",40,[[],["u64",15]]],[11,"large_page_offset","","Offset within the 2 MiB page.",40,[[],["u64",15]]],[11,"huge_page_offset","","Offset within the 1 GiB page.",40,[[],["u64",15]]],[11,"align_down_to_base_page","","Return address of nearest 4 KiB page (lower or equal than …",40,[[],["paddr",3]]],[11,"align_down_to_large_page","","Return address of nearest 2 MiB page (lower or equal than …",40,[[],["paddr",3]]],[11,"align_down_to_huge_page","","Return address of nearest 1 GiB page (lower or equal than …",40,[[],["paddr",3]]],[11,"align_up_to_base_page","","Return address of nearest 4 KiB page (higher or equal …",40,[[],["paddr",3]]],[11,"align_up_to_large_page","","Return address of nearest 2 MiB page (higher or equal …",40,[[],["paddr",3]]],[11,"align_up_to_huge_page","","Return address of nearest 1 GiB page (higher or equal …",40,[[],["paddr",3]]],[11,"is_base_page_aligned","","Is this address aligned to a 4 KiB page?",40,[[],["bool",15]]],[11,"is_large_page_aligned","","Is this address aligned to a 2 MiB page?",40,[[],["bool",15]]],[11,"is_huge_page_aligned","","Is this address aligned to a 1 GiB page?",40,[[],["bool",15]]],[11,"is_aligned","","Is this address aligned to <code>align</code>?",40,[[],["bool",15]]],[11,"from_u64","","Convert from <code>u64</code>",41,[[["u64",15]],["vaddr",3]]],[11,"from_usize","","Convert from <code>usize</code>",41,[[["usize",15]],["vaddr",3]]],[11,"as_u64","","Convert to <code>u64</code>",41,[[],["u64",15]]],[11,"as_usize","","Convert to <code>usize</code>",41,[[],["usize",15]]],[11,"as_mut_ptr","","Convert to mutable pointer.",41,[[]]],[11,"as_ptr","","Convert to pointer.",41,[[]]],[11,"zero","","Physical Address zero.",41,[[],["vaddr",3]]],[11,"is_zero","","Is zero?",41,[[],["bool",15]]],[11,"base_page_offset","","Offset within the 4 KiB page.",41,[[],["u64",15]]],[11,"large_page_offset","","Offset within the 2 MiB page.",41,[[],["u64",15]]],[11,"huge_page_offset","","Offset within the 1 GiB page.",41,[[],["u64",15]]],[11,"align_down_to_base_page","","Return address of nearest 4 KiB page (lower or equal than …",41,[[],["vaddr",3]]],[11,"align_down_to_large_page","","Return address of nearest 2 MiB page (lower or equal than …",41,[[],["vaddr",3]]],[11,"align_down_to_huge_page","","Return address of nearest 1 GiB page (lower or equal than …",41,[[],["vaddr",3]]],[11,"align_up_to_base_page","","Return address of nearest 4 KiB page (higher or equal …",41,[[],["vaddr",3]]],[11,"align_up_to_large_page","","Return address of nearest 2 MiB page (higher or equal …",41,[[],["vaddr",3]]],[11,"align_up_to_huge_page","","Return address of nearest 1 GiB page (higher or equal …",41,[[],["vaddr",3]]],[11,"is_base_page_aligned","","Is this address aligned to a 4 KiB page?",41,[[],["bool",15]]],[11,"is_large_page_aligned","","Is this address aligned to a 2 MiB page?",41,[[],["bool",15]]],[11,"is_huge_page_aligned","","Is this address aligned to a 1 GiB page?",41,[[],["bool",15]]],[11,"is_aligned","","Is this address aligned to <code>align</code>?",41,[[],["bool",15]]]],"p":[[8,"FuseInterface"],[4,"Opcode"],[3,"fuse_in_header"],[3,"fuse_out_header"],[3,"fuse_init_in"],[3,"fuse_init_out"],[3,"fuse_read_in"],[3,"fuse_write_in"],[3,"fuse_write_out"],[3,"fuse_open_in"],[3,"fuse_open_out"],[3,"fuse_release_in"],[3,"fuse_lookup_in"],[3,"fuse_entry_out"],[3,"fuse_attr"],[3,"fuse_unlink_in"],[3,"fuse_create_in"],[3,"fuse_create_out"],[3,"ExceptionStackFrame"],[3,"IrqStatistics"],[4,"PciError"],[4,"PciClassCode"],[4,"PciNetworkControllerSubclass"],[3,"PciAdapter"],[4,"PciBar"],[3,"IOBar"],[3,"MemoryBar"],[4,"PciDriver"],[3,"PerCoreInnerVariables"],[8,"PerCoreVariableMethods"],[3,"XSaveLegacyRegion"],[3,"XSaveHeader"],[3,"XSaveAVXState"],[3,"XSaveLWPState"],[3,"XSaveBndregs"],[3,"XSaveBndcsr"],[3,"FPUState"],[4,"TaskStacks"],[3,"SerialPort"],[8,"PageSize"],[3,"PhysAddr"],[3,"VirtAddr"],[4,"FileError"],[8,"PosixFileSystem"],[8,"PosixFile"],[3,"FilePerms"],[4,"SeekWhence"],[3,"AcpiTable"],[3,"Fuse"],[3,"Cmd"],[3,"Rsp"],[3,"PerCoreVariable"],[3,"TaskTLS"],[3,"PageTableEntryFlags"],[3,"PageTableEntry"],[3,"Filesystem"],[3,"itimerval"],[3,"timespec"],[3,"timeval"],[3,"fuse_read_out"],[3,"fuse_release_out"],[3,"fuse_unlink_out"],[3,"BootStack"],[3,"CommonStack"],[3,"BootInfo"],[4,"BasePageSize"],[4,"LargePageSize"],[4,"HugePageSize"],[3,"SpinlockContainer"],[3,"SpinlockIrqSaveContainer"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[4,"Level","log","An enum representing the available verbosity levels of …",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.",0,[[],["levelfilter",4]]],[11,"as_str","","Returns the string representation of the <code>Level</code>.",0,[[],["str",15]]],[4,"LevelFilter","","An enum representing the available verbosity level …",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the <code>Error</code> log level.",1,null],[13,"Warn","","Corresponds to the <code>Warn</code> log level.",1,null],[13,"Info","","Corresponds to the <code>Info</code> log level.",1,null],[13,"Debug","","Corresponds to the <code>Debug</code> log level.",1,null],[13,"Trace","","Corresponds to the <code>Trace</code> log level.",1,null],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts <code>self</code> to the equivalent <code>Level</code>.",1,[[],[["option",4],["level",4]]]],[11,"as_str","","Returns the string representation of the <code>LevelFilter</code>.",1,[[],["str",15]]],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[11,"builder","","Returns a new builder.",2,[[],["recordbuilder",3]]],[11,"args","","The message body.",2,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",2,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",2,[[],["level",4]]],[11,"target","","The name of the target of the directive.",2,[[],["str",15]]],[11,"module_path","","The module path of the message.",2,[[],[["option",4],["str",15]]]],[11,"module_path_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"file","","The source file containing the message.",2,[[],[["option",4],["str",15]]]],[11,"file_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"line","","The line containing the message.",2,[[],[["option",4],["u32",15]]]],[3,"RecordBuilder","","Builder for <code>Record</code>.",null,null],[11,"new","","Construct new <code>RecordBuilder</code>.",3,[[],["recordbuilder",3]]],[11,"args","","Set <code>args</code>.",3,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …",3,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set <code>Metadata::level</code>.",3,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set <code>Metadata::target</code>",3,[[["str",15]],["recordbuilder",3]]],[11,"module_path","","Set <code>module_path</code>",3,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"module_path_static","","Set <code>module_path</code> to a <code>\'static</code> string",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"file","","Set <code>file</code>",3,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"file_static","","Set <code>file</code> to a <code>\'static</code> string.",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"line","","Set <code>line</code>",3,[[["option",4],["u32",15]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a <code>Record</code>",3,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",4,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",4,[[],["level",4]]],[11,"target","","The name of the target of the directive.",4,[[],["str",15]]],[3,"MetadataBuilder","","Builder for <code>Metadata</code>.",null,null],[11,"new","","Construct a new <code>MetadataBuilder</code>.",5,[[],["metadatabuilder",3]]],[11,"level","","Setter for <code>level</code>.",5,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for <code>target</code>.",5,[[["str",15]],["metadatabuilder",3]]],[11,"build","","Returns a <code>Metadata</code> object.",5,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata …",6,[[["metadata",3]],["bool",15]]],[10,"log","","Logs the <code>Record</code>.",6,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",6,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a <code>&\'static Log</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of <code>set_logger</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[3,"SetLoggerError","","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …",null,null],[3,"ParseLevelError","","The type returned by <code>from_str</code> when the string doesn\'t …",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]],["bool",15]]],[11,"eq","","",0,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["level",4]],["bool",15]]],[11,"eq","","",4,[[["metadata",3]],["bool",15]]],[11,"ne","","",4,[[["metadata",3]],["bool",15]]],[11,"eq","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ne","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"eq","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"ne","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",4,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",5,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["level",4]],["bool",15]]],[11,"le","","",0,[[["level",4]],["bool",15]]],[11,"gt","","",0,[[["level",4]],["bool",15]]],[11,"ge","","",0,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"le","","",0,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",0,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"le","","",1,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",1,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["level",4]],["bool",15]]],[11,"le","","",1,[[["level",4]],["bool",15]]],[11,"gt","","",1,[[["level",4]],["bool",15]]],[11,"ge","","",1,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",4,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["metadata",3]],["bool",15]]],[11,"le","","",4,[[["metadata",3]],["bool",15]]],[11,"gt","","",4,[[["metadata",3]],["bool",15]]],[11,"ge","","",4,[[["metadata",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"le","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"gt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ge","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"from_str","","",0,[[["str",15]],[["level",4],["result",4]]]],[11,"from_str","","",1,[[["str",15]],[["levelfilter",4],["result",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",2,[[],["record",3]]],[11,"clone","","",4,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"multiboot":{"doc":"Multiboot v1 library","i":[[0,"information","multiboot","This modules contains the pieces for parsing and creating …",null,null],[17,"SIGNATURE_EAX","multiboot::information","Value found in %eax after multiboot jumps to our entry …",null,null],[6,"PAddr","","",null,null],[8,"MemoryManagement","","Implement this trait to be able to get or set fields …",null,null],[10,"paddr_to_slice","","Translates physical addr + size into a kernel accessible …",0,[[["usize",15],["paddr",6]],["option",4]]],[10,"allocate","","Allocates <code>length</code> bytes.",0,[[["usize",15]],["option",4]]],[10,"deallocate","","Free the previously allocated memory.",0,[[["paddr",6]]]],[3,"Multiboot","","Multiboot struct clients mainly interact with",null,null],[3,"MultibootInfo","","Representation of Multiboot Information according to …",null,null],[11,"from_ptr","","Initializes the multiboot structure from a passed address.",1,[[["memorymanagement",8],["paddr",6]],[["multiboot",3],["option",4]]]],[11,"from_ref","","Initializes this struct from an already existing …",1,[[["memorymanagement",8],["multibootinfo",3]]]],[11,"has_memory_bounds","","If true, then the <code>mem_upper</code> and <code>mem_lower</code> fields are …",1,[[],["bool",15]]],[11,"has_boot_device","","If true, then the <code>boot_device</code> field is valid.",1,[[],["bool",15]]],[11,"has_cmdline","","If true, then the <code>cmdline</code> field is valid.",1,[[],["bool",15]]],[11,"has_modules","","If true, then the <code>mods_addr</code> and <code>mods_count</code> fields are …",1,[[],["bool",15]]],[11,"has_aout_symbols","","If true, then the <code>syms</code> field is valid and contains AOut …",1,[[],["bool",15]]],[11,"has_elf_symbols","","If true, then the <code>syms</code> field is valid and containts ELF …",1,[[],["bool",15]]],[11,"has_memory_map","","If true, then the <code>mmap_addr</code> and <code>mmap_length</code> fields are …",1,[[],["bool",15]]],[11,"has_drives","","If true, then the <code>drives_addr</code> and <code>drives_length</code> fields …",1,[[],["bool",15]]],[11,"has_config_table","","If true, then the <code>config_table</code> field is valid.",1,[[],["bool",15]]],[11,"has_boot_loader_name","","If true, then the <code>boot_loader_name</code> field is valid.",1,[[],["bool",15]]],[11,"has_apm_table","","If true, then the <code>apm_table</code> field is valid.",1,[[],["bool",15]]],[11,"has_vbe","","If true, then the <code>vbe_*</code> fields are valid.",1,[[],["bool",15]]],[11,"has_framebuffer_table","","If true, then the framebuffer table is valid.",1,[[],["bool",15]]],[11,"lower_memory_bound","","Indicate the amount of lower memory in kilobytes.",1,[[],[["option",4],["u32",15]]]],[11,"upper_memory_bound","","Indicate the amount of upper memory in kilobytes.",1,[[],[["option",4],["u32",15]]]],[11,"set_memory_bounds","","Sets the memory bounds (lower, upper).",1,[[["option",4]]]],[11,"boot_device","","Indicates which bios disk device the boot loader loaded …",1,[[],[["bootdevice",3],["option",4]]]],[11,"command_line","","Command line passed to the kernel.",1,[[],[["str",15],["option",4]]]],[11,"set_command_line","","Command line to be passed to the kernel.",1,[[["option",4],["str",15]]]],[11,"boot_loader_name","","Get the name of the bootloader.",1,[[],[["str",15],["option",4]]]],[11,"set_boot_loader_name","","Set the name of the bootloader.",1,[[["option",4],["str",15]]]],[11,"modules","","Discover all additional modules in multiboot.",1,[[],[["option",4],["moduleiter",3]]]],[11,"set_modules","","Publish modules to the kernel.",1,[[["option",4]]]],[11,"symbols","","Get the symbols.",1,[[],[["symboltype",4],["option",4]]]],[11,"set_symbols","","Set the symbols.",1,[[["symboltype",4],["option",4]]]],[11,"memory_regions","","Discover all memory regions in the multiboot memory map.",1,[[],[["memorymapiter",3],["option",4]]]],[11,"set_memory_regions","","Publish the memory regions to the kernel.",1,[[["option",4]]]],[11,"find_highest_address","","Return end address of multiboot image.",1,[[],["paddr",6]]],[11,"framebuffer_table","","Return the framebuffer table, if it exists.",1,[[],[["framebuffertable",3],["option",4]]]],[11,"set_framebuffer_table","","Set the framebuffer table, if it exists.",1,[[["option",4],["framebuffertable",3]]]],[3,"BootDevice","","The ‘boot_device’ field.",null,null],[12,"drive","","Contains the bios drive number as understood by the bios …",2,null],[12,"partition1","","Specifies the top-level partition number.",2,null],[12,"partition2","","Specifies a sub-partition in the top-level partition",2,null],[12,"partition3","","Specifies a sub-partition in the 2nd-level partition",2,null],[11,"partition1_is_valid","","Is partition1 a valid partition?",2,[[],["bool",15]]],[11,"partition2_is_valid","","Is partition2 a valid partition?",2,[[],["bool",15]]],[11,"partition3_is_valid","","Is partition3 a valid partition?",2,[[],["bool",15]]],[4,"MemoryType","","Types that define if the memory is usable or not.",null,null],[13,"Available","","memory, available to OS",3,null],[13,"Reserved","","reserved, not available (rom, mem map dev)",3,null],[13,"ACPI","","ACPI Reclaim Memory",3,null],[13,"NVS","","ACPI NVS Memory",3,null],[13,"Defect","","defective RAM modules",3,null],[3,"MemoryEntry","","Multiboot format of the MMAP buffer.",null,null],[11,"new","","Create a new entry from the given data.",4,[[["memorytype",4],["paddr",6]]]],[11,"base_address","","Get base of memory region.",4,[[],["paddr",6]]],[11,"length","","Get size of the memory region.",4,[[],["u64",15]]],[11,"memory_type","","Is the region type valid RAM?",4,[[],["memorytype",4]]],[3,"MemoryMapIter","","Used to iterate over all memory regions provided by …",null,null],[3,"Module","","Information about a module in multiboot.",null,null],[12,"start","","Start address of module in physical memory.",5,null],[12,"end","","End address of module in physic memory.",5,null],[12,"string","","Name of the module.",5,null],[11,"new","","",5,[[["option",4],["str",15],["paddr",6]],["module",3]]],[3,"ModuleIter","","Used to iterate over all modules in multiboot.",null,null],[4,"SymbolType","","Safe wrapper for either <code>AOutSymbols</code> or <code>ElfSymbols</code>",null,null],[13,"AOut","","",6,null],[13,"Elf","","",6,null],[3,"AOutSymbols","","Multiboot format for AOut Symbols",null,null],[3,"ElfSymbols","","Multiboot format for ELF Symbols",null,null],[11,"from_addr","","Uses a passed address for the symbols.",7,[[["u32",15],["paddr",6]]]],[3,"FramebufferTable","","Contains the information about the framebuffer",null,null],[12,"addr","","",8,null],[12,"pitch","","",8,null],[12,"width","","",8,null],[12,"height","","",8,null],[12,"bpp","","",8,null],[11,"new","","Create this table from a color info.",8,[[["u32",15],["colorinfotype",4],["u8",15],["u64",15]]]],[11,"color_info","","Get the color info from this table.",8,[[],[["option",4],["colorinfotype",4]]]],[4,"ColorInfoType","","Safe wrapper for <code>ColorInfo</code>",null,null],[13,"Palette","","",9,null],[13,"Rgb","","",9,null],[13,"Text","","",9,null],[3,"ColorInfoPalette","","Information for indexed color mode",null,null],[3,"ColorInfoRgb","","Information for direct RGB color mode",null,null],[12,"red_field_position","","",10,null],[12,"red_mask_size","","",10,null],[12,"green_field_position","","",10,null],[12,"green_mask_size","","",10,null],[12,"blue_field_position","","",10,null],[12,"blue_mask_size","","",10,null],[0,"header","multiboot","This module contains the pieces for parsing Multiboot …",null,null],[17,"MULTIBOOT_HEADER_MAGIC","multiboot::header","",null,null],[3,"Header","","Multiboot struct bootloaders mainly interact with",null,null],[12,"header_start","","the index at which the header starts",11,null],[11,"from_slice","","Get the header by parsing it from a slice.",11,[[],["option",4]]],[11,"wants_modules_page_aligned","","If true, then the modules have to be page aligned.",11,[[],["bool",15]]],[11,"wants_memory_information","","If true, memory information must be passed.",11,[[],["bool",15]]],[11,"has_video_mode","","If true, then the <code>mode_type</code>, <code>width</code>, <code>height</code> and <code>depth</code> …",11,[[],["bool",15]]],[11,"has_multiboot_addresses","","If true, then the <code>header_addr</code>, <code>load_addr</code>, <code>load_end_addr</code>, …",11,[[],["bool",15]]],[11,"get_addresses","","Get the load addresses specified in the Multiboot header.",11,[[],[["multibootaddresses",3],["option",4]]]],[11,"get_preferred_video_mode","","Get the preferred video mode specified in the Multiboot …",11,[[],[["multibootvideomode",3],["option",4]]]],[3,"MultibootAddresses","","Addresses specified in the Multiboot header",null,null],[12,"header_address","","",12,null],[12,"load_address","","",12,null],[12,"load_end_address","","",12,null],[12,"bss_end_address","","",12,null],[12,"entry_address","","",12,null],[11,"compute_load_offset","","Compute the offset of the load address into the binary.",12,[[["u32",15]],["u32",15]]],[3,"MultibootVideoMode","","Preferred video mode specified in the Multiboot header",null,null],[12,"width","","",13,null],[12,"height","","",13,null],[11,"mode_type","","Get the preferred video mode type",13,[[],[["videomodetype",4],["option",4]]]],[11,"depth","","Get the preferred depth, if possible.",13,[[],[["option",4],["u32",15]]]],[4,"VideoModeType","","Preferred video mode type",null,null],[13,"LinearGraphics","","",14,null],[13,"TextMode","","",14,null],[11,"from","multiboot::information","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","multiboot::header","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"fmt","multiboot::information","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","multiboot::header","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"eq","multiboot::information","",3,[[["memorytype",4]],["bool",15]]],[11,"eq","multiboot::header","",14,[[["videomodetype",4]],["bool",15]]],[11,"next","multiboot::information","",16,[[],[["memoryentry",3],["option",4]]]],[11,"next","","",17,[[],[["module",3],["option",4]]]],[11,"clone","","",2,[[],["bootdevice",3]]],[11,"clone","","",4,[[],["memoryentry",3]]],[11,"clone","","",6,[[],["symboltype",4]]],[11,"clone","","",18,[[],["aoutsymbols",3]]],[11,"clone","","",7,[[],["elfsymbols",3]]],[11,"clone","","",19,[[],["colorinfopalette",3]]],[11,"clone","","",10,[[],["colorinforgb",3]]],[11,"clone","multiboot::header","",11,[[],["header",3]]],[11,"clone","","",12,[[],["multibootaddresses",3]]],[11,"clone","","",13,[[],["multibootvideomode",3]]],[11,"clone","","",14,[[],["videomodetype",4]]],[11,"default","multiboot::information","",15,[[],["multibootinfo",3]]],[11,"default","","",2,[[]]],[11,"default","","Get the \\\"default\\\" memory entry. (It\'s 0 bytes and …",4,[[]]],[11,"default","","",18,[[],["aoutsymbols",3]]],[11,"default","","",7,[[],["elfsymbols",3]]],[11,"default","","",8,[[],["framebuffertable",3]]]],"p":[[8,"MemoryManagement"],[3,"Multiboot"],[3,"BootDevice"],[4,"MemoryType"],[3,"MemoryEntry"],[3,"Module"],[4,"SymbolType"],[3,"ElfSymbols"],[3,"FramebufferTable"],[4,"ColorInfoType"],[3,"ColorInfoRgb"],[3,"Header"],[3,"MultibootAddresses"],[3,"MultibootVideoMode"],[4,"VideoModeType"],[3,"MultibootInfo"],[3,"MemoryMapIter"],[3,"ModuleIter"],[3,"AOutSymbols"],[3,"ColorInfoPalette"]]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","i":[[0,"complex","num","",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[3,"ParseComplexError","","",null,null],[0,"integer","num","",null,null],[8,"Integer","num::integer","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple …",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and …",1,[[]]],[10,"divides","","Deprecated, use <code>is_multiple_of</code> instead.",1,[[],["bool",15]]],[10,"is_multiple_of","","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.",1,[[],["bool",15]]],[10,"is_even","","Returns <code>true</code> if the number is even.",1,[[],["bool",15]]],[10,"is_odd","","Returns <code>true</code> if the number is odd.",1,[[],["bool",15]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. …",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. …",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",2,null],[12,"x","","",2,null],[12,"y","","",2,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[]]],[5,"div_floor","","Floored integer division",null,[[]]],[5,"mod_floor","","Floored integer modulus",null,[[]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[]]],[5,"div_ceil","","Ceiled integer division",null,[[]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the …",null,[[]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number …",null,[[]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest …",null,[[]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"binomial","","Calculate the binomial coefficient.",null,[[]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[]]],[8,"Roots","","Provides methods to compute an integer\'s square root, …",null,null],[10,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",3,[[["u32",15]]]],[11,"sqrt","","Returns the truncated principal square root of an integer …",3,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",3,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[]]],[5,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",null,[[["u32",15]]]],[5,"sqrt","","Returns the truncated principal square root of an integer …",null,[[]]],[8,"Average","","Provides methods to compute the average of two integers, …",null,null],[10,"average_ceil","","Returns the ceiling value of the average of <code>self</code> and <code>other</code>…",4,[[]]],[10,"average_floor","","Returns the floor value of the average of <code>self</code> and <code>other</code>. …",4,[[]]],[5,"average_ceil","","Returns the ceiling value of the average of <code>x</code> and <code>y</code> -- …",null,[[]]],[5,"average_floor","","Returns the floor value of the average of <code>x</code> and <code>y</code> -- see …",null,[[]]],[0,"iter","num","",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop) …",null,[[],["range",3]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[3,"RangeStep","","An iterator over the range [start, stop) by <code>step</code>. It …",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by <code>step</code>. …",null,[[],["rangestep",3]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by <code>step</code>. It …",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by <code>step</code>. …",null,[[],["rangestepinclusive",3]]],[3,"RangeFrom","","An iterator over the infinite range starting at <code>start</code>",null,null],[5,"range_from","","Return an iterator over the infinite range starting at …",null,[[],["rangefrom",3]]],[3,"RangeStepFrom","","An iterator over the infinite range starting at <code>start</code> by …",null,null],[5,"range_step_from","","Return an iterator over the infinite range starting at …",null,[[],["rangestepfrom",3]]],[0,"traits","num","",null,null],[0,"bounds","num::traits","",null,null],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,[[]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[]]],[0,"cast","num::traits","",null,null],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",6,[[],[["isize",15],["option",4]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",6,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",6,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",6,[[],[["i32",15],["option",4]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",6,[[],[["i64",15],["option",4]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",6,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",6,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",6,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",6,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",6,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",6,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",6,[[],[["u128",15],["option",4]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",6,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",6,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",7,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",7,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",7,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",7,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",7,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",7,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",7,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",7,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",7,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",7,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",7,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",7,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",7,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",7,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",8,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",9,[[]]],[0,"float","num::traits","",null,null],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",10,[[]]],[10,"neg_infinity","","Returns negative infinity.",10,[[]]],[10,"nan","","Returns NaN.",10,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",10,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",10,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",10,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",10,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",10,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",10,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",10,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",10,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",10,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",10,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",10,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",10,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",10,[[]]],[11,"trunc","","Return the integer part of a number.",10,[[]]],[11,"fract","","Returns the fractional part of a number.",10,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",10,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",10,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",10,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",10,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",10,[[]]],[11,"max","","Returns the maximum of the two numbers.",10,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",10,[[]]],[11,"powi","","Raise a number to an integer power.",10,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",10,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",10,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",10,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",11,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",11,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",11,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",11,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",11,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",11,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",11,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",11,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",11,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",11,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",11,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",11,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",11,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",11,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",11,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",11,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",11,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",11,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",11,[[]]],[0,"identities","num::traits","",null,null],[8,"Zero","num::traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",12,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",12,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",12,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",13,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",13,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",13,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"int","num::traits","",null,null],[8,"PrimInt","num::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",14,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",14,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",14,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",14,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",14,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",14,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",14,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",14,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",14,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",14,[[["u32",15]]]],[0,"ops","num::traits","",null,null],[0,"checked","num::traits::ops","",null,null],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",15,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",16,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",17,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",18,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",19,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",20,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",21,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",22,[[["u32",15]],["option",4]]],[0,"inv","num::traits::ops","",null,null],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",23,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",23,[[]]],[0,"mul_add","num::traits::ops","",null,null],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",24,null],[10,"mul_add","","Performs the fused multiply-add operation.",24,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",25,[[]]],[0,"overflowing","num::traits::ops","",null,null],[8,"OverflowingAdd","num::traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",26,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",27,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",28,[[]]],[0,"saturating","num::traits::ops","",null,null],[8,"Saturating","num::traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",29,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",29,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",30,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",31,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",32,[[]]],[0,"wrapping","num::traits::ops","",null,null],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",33,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",34,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",35,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",36,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",37,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",38,[[["u32",15]]]],[0,"pow","num::traits","",null,null],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",39,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",39,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[0,"sign","num::traits","",null,null],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",40,[[]]],[10,"abs_sub","","The positive difference of two numbers.",40,[[]]],[10,"signum","","Returns the sign of the number.",40,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",40,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",40,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num::traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",41,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",41,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",42,null],[13,"Invalid","","",42,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",43,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,[[]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",11,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",11,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",11,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",11,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",11,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",11,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",11,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",11,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",11,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",11,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",11,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",11,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",11,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",11,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",11,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",11,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",11,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",11,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",11,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",9,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",7,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",7,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",7,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",7,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",7,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",7,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",7,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",7,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",7,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",7,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",7,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",7,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",7,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",7,[[["f64",15]],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",8,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",6,[[],[["isize",15],["option",4]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",6,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",6,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",6,[[],[["i32",15],["option",4]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",6,[[],[["i64",15],["option",4]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",6,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",6,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",6,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",6,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",6,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",6,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",6,[[],[["u128",15],["option",4]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",6,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",6,[[],[["f64",15],["option",4]]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",13,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",13,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",13,[[],["bool",15]]],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",12,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",12,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",12,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",14,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",14,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",14,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",14,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",14,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",14,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",14,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",14,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",14,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",14,[[["u32",15]]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",15,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",18,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",17,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",20,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",19,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",21,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",22,[[["u32",15]],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",16,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",23,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",23,[[]]],[8,"MulAdd","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",24,null],[10,"mul_add","","Performs the fused multiply-add operation.",24,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",25,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",29,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",29,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",30,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",32,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",31,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",33,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",35,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",36,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",37,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",38,[[["u32",15]]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",34,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",39,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",39,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",40,[[]]],[10,"abs_sub","","The positive difference of two numbers.",40,[[]]],[10,"signum","","Returns the sign of the number.",40,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",40,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",40,[[],["bool",15]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"rational","num","",null,null],[3,"Ratio","num::rational","Represents the ratio between two numbers.",null,null],[6,"Rational","","Alias for a <code>Ratio</code> of machine-sized integers.",null,null],[6,"Rational32","","Alias for a <code>Ratio</code> of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a <code>Ratio</code> of 64-bit-sized integers.",null,null],[3,"ParseRatioError","","",null,null],[3,"Complex","num","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Rational","","Alias for a <code>Ratio</code> of machine-sized integers.",null,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple …",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and …",1,[[]]],[10,"divides","","Deprecated, use <code>is_multiple_of</code> instead.",1,[[],["bool",15]]],[10,"is_multiple_of","","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.",1,[[],["bool",15]]],[10,"is_even","","Returns <code>true</code> if the number is even.",1,[[],["bool",15]]],[10,"is_odd","","Returns <code>true</code> if the number is odd.",1,[[],["bool",15]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. …",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. …",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[5,"range","","Returns an iterator over the given range [start, stop) …",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by <code>step</code>. …",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by <code>step</code>. …",null,[[],["rangestepinclusive",3]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",6,[[],[["isize",15],["option",4]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",6,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",6,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",6,[[],[["i32",15],["option",4]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",6,[[],[["i64",15],["option",4]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",6,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",6,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",6,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",6,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",6,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",6,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",6,[[],[["u128",15],["option",4]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",6,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",6,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",7,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",7,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",7,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",7,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",7,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",7,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",7,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",7,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",7,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",7,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",7,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",7,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",7,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",7,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",8,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",9,[[]]],[5,"cast","num","Cast from one machine scalar to another.",null,[[],["option",4]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[]]],[0,"pow","","",null,null],[8,"Pow","num::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",39,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",39,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15]],["option",4]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15]]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,[[]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[]]],[8,"CheckedAdd","","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",15,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",18,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",17,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",16,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",7,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",7,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",7,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",7,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",7,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",7,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",7,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",7,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",7,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",7,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",7,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",7,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",7,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",7,[[["f64",15]],["option",4]]],[8,"Num","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",41,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",41,[[["u32",15],["str",15]],["result",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",8,[[],["option",4]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",13,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",13,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",13,[[],["bool",15]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",14,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",14,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",14,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",14,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",14,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",14,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",14,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",14,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",14,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",14,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",14,[[["u32",15]]]],[8,"Saturating","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",29,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",29,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",40,[[]]],[10,"abs_sub","","The positive difference of two numbers.",40,[[]]],[10,"signum","","Returns the sign of the number.",40,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",40,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",40,[[],["bool",15]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",6,[[],[["isize",15],["option",4]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",6,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",6,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",6,[[],[["i32",15],["option",4]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",6,[[],[["i64",15],["option",4]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",6,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",6,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",6,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",6,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",6,[[],[["u32",15],["option",4]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",6,[[],[["option",4],["u64",15]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",6,[[],[["u128",15],["option",4]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",6,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",6,[[],[["f64",15],["option",4]]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Zero","","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",12,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",12,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",12,[[],["bool",15]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","num::complex","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","num::integer","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"into_iter","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","num::iter","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"into_iter","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"into_iter","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"into_iter","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"into_iter","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"into_iter","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"into_iter","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","num::traits","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","num::rational","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"as_","num","",0,[[]]],[11,"clone","","",0,[[],["complex",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","num::complex","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"add_assign","num","",0,[[["complex",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["complex",3]]]],[11,"add_assign","","",0,[[]]],[11,"from","","",0,[[],[["complex",3],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_usize","","",0,[[["usize",15]],[["complex",3],["option",4]]]],[11,"from_isize","","",0,[[["isize",15]],[["complex",3],["option",4]]]],[11,"from_u8","","",0,[[["u8",15]],[["complex",3],["option",4]]]],[11,"from_u16","","",0,[[["u16",15]],[["complex",3],["option",4]]]],[11,"from_u32","","",0,[[["u32",15]],[["complex",3],["option",4]]]],[11,"from_u64","","",0,[[["u64",15]],[["complex",3],["option",4]]]],[11,"from_i8","","",0,[[["i8",15]],[["complex",3],["option",4]]]],[11,"from_i16","","",0,[[["i16",15]],[["complex",3],["option",4]]]],[11,"from_i32","","",0,[[["i32",15]],[["complex",3],["option",4]]]],[11,"from_i64","","",0,[[["i64",15]],[["complex",3],["option",4]]]],[11,"from_u128","","",0,[[["u128",15]],[["complex",3],["option",4]]]],[11,"from_i128","","",0,[[["i128",15]],[["complex",3],["option",4]]]],[11,"from_f32","","",0,[[["f32",15]],[["complex",3],["option",4]]]],[11,"from_f64","","",0,[[["f64",15]],[["complex",3],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[["complex",3]]]],[11,"one","","",0,[[],["complex",3]]],[11,"is_one","","",0,[[],["bool",15]]],[11,"set_one","","",0,[[]]],[11,"fmt","num::complex","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","num","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"rem_assign","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[]]],[11,"from_str_radix","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …",0,[[["u32",15],["str",15]],[["result",4],["complex",3]]]],[11,"to_usize","","",0,[[],[["usize",15],["option",4]]]],[11,"to_isize","","",0,[[],[["isize",15],["option",4]]]],[11,"to_u8","","",0,[[],[["option",4],["u8",15]]]],[11,"to_u16","","",0,[[],[["option",4],["u16",15]]]],[11,"to_u32","","",0,[[],[["u32",15],["option",4]]]],[11,"to_u64","","",0,[[],[["option",4],["u64",15]]]],[11,"to_i8","","",0,[[],[["option",4],["i8",15]]]],[11,"to_i16","","",0,[[],[["i16",15],["option",4]]]],[11,"to_i32","","",0,[[],[["i32",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_f32","","",0,[[],[["option",4],["f32",15]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["complex",3]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["complex",3]]]],[11,"eq","num::complex","",44,[[["parsecomplexerror",3]],["bool",15]]],[11,"ne","","",44,[[["parsecomplexerror",3]],["bool",15]]],[11,"eq","num","",0,[[["complex",3]],["bool",15]]],[11,"ne","","",0,[[["complex",3]],["bool",15]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"sum","","",0,[[],["complex",3]]],[11,"sum","","",0,[[],["complex",3]]],[11,"neg","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_str","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …",0,[[["str",15]],[["result",4],["complex",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"default","","",0,[[],["complex",3]]],[11,"zero","","",0,[[],["complex",3]]],[11,"is_zero","","",0,[[],["bool",15]]],[11,"set_zero","","",0,[[]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["complex",3]]]],[11,"div_assign","","",0,[[["complex",3]]]],[11,"from","","",0,[[],["complex",3]]],[11,"from","","",0,[[],["complex",3]]],[11,"product","","",0,[[],["complex",3]]],[11,"product","","",0,[[],["complex",3]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"inv","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"fmt","num::traits","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","num::rational","",52,[[],["ratio",3]]],[11,"clone","","",53,[[],["parseratioerror",3]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"pow","","",52,[[["i32",15]],["ratio",3]]],[11,"pow","","",52,[[["usize",15]],["ratio",3]]],[11,"pow","","",52,[[["i128",15]],["ratio",3]]],[11,"pow","","",52,[[["isize",15]],["ratio",3]]],[11,"pow","","",52,[[["i16",15]],["ratio",3]]],[11,"pow","","",52,[[["i32",15]],["ratio",3]]],[11,"pow","","",52,[[["i8",15]],["ratio",3]]],[11,"pow","","",52,[[["u8",15]],["ratio",3]]],[11,"pow","","",52,[[["u32",15]],["ratio",3]]],[11,"pow","","",52,[[["u16",15]],["ratio",3]]],[11,"pow","","",52,[[["u16",15]],["ratio",3]]],[11,"pow","","",52,[[["i16",15]],["ratio",3]]],[11,"pow","","",52,[[["i8",15]],["ratio",3]]],[11,"pow","","",52,[[["u32",15]],["ratio",3]]],[11,"pow","","",52,[[["i64",15]],["ratio",3]]],[11,"pow","","",52,[[["u128",15]],["ratio",3]]],[11,"pow","","",52,[[["i64",15]],["ratio",3]]],[11,"pow","","",52,[[["u128",15]],["ratio",3]]],[11,"pow","","",52,[[["isize",15]],["ratio",3]]],[11,"pow","","",52,[[["usize",15]],["ratio",3]]],[11,"pow","","",52,[[["u64",15]],["ratio",3]]],[11,"pow","","",52,[[["i128",15]],["ratio",3]]],[11,"pow","","",52,[[["u64",15]],["ratio",3]]],[11,"pow","","",52,[[["u8",15]],["ratio",3]]],[11,"one","","",52,[[],["ratio",3]]],[11,"is_one","","",52,[[],["bool",15]]],[11,"set_one","","",52,[[]]],[11,"checked_div","","",52,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"add_assign","","",52,[[]]],[11,"add_assign","","",52,[[["ratio",3]]]],[11,"add_assign","","",52,[[["ratio",3]]]],[11,"add_assign","","",52,[[]]],[11,"abs","","",52,[[],["ratio",3]]],[11,"abs_sub","","",52,[[["ratio",3]],["ratio",3]]],[11,"signum","","",52,[[],["ratio",3]]],[11,"is_positive","","",52,[[],["bool",15]]],[11,"is_negative","","",52,[[],["bool",15]]],[11,"inv","","",52,[[],["ratio",3]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","",52,[[],["ratio",3]]],[11,"sub","","",52,[[],["ratio",3]]],[11,"sub","","",52,[[["ratio",3]],["ratio",3]]],[11,"sub","","",52,[[["ratio",3]],["ratio",3]]],[11,"checked_sub","","",52,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"rem_assign","","",52,[[]]],[11,"rem_assign","","",52,[[["ratio",3]]]],[11,"rem_assign","","",52,[[["ratio",3]]]],[11,"rem_assign","","",52,[[]]],[11,"sub_assign","","",52,[[]]],[11,"sub_assign","","",52,[[["ratio",3]]]],[11,"sub_assign","","",52,[[["ratio",3]]]],[11,"sub_assign","","",52,[[]]],[11,"eq","","",52,[[["ratio",3]],["bool",15]]],[11,"eq","","",53,[[["parseratioerror",3]],["bool",15]]],[11,"ne","","",53,[[["parseratioerror",3]],["bool",15]]],[11,"from_i64","","",52,[[["i64",15]],[["option",4],["ratio",3]]]],[11,"from_i128","","",52,[[["i128",15]],[["option",4],["ratio",3]]]],[11,"from_u64","","",52,[[["u64",15]],[["option",4],["ratio",3]]]],[11,"from_u128","","",52,[[["u128",15]],[["option",4],["ratio",3]]]],[11,"from_f32","","",52,[[["f32",15]],[["option",4],["ratio",3]]]],[11,"from_f64","","",52,[[["f64",15]],[["option",4],["ratio",3]]]],[11,"from_i64","","",52,[[["i64",15]],[["option",4],["ratio",3]]]],[11,"from_i128","","",52,[[["i128",15]],[["option",4],["ratio",3]]]],[11,"from_u64","","",52,[[["u64",15]],[["option",4],["ratio",3]]]],[11,"from_u128","","",52,[[["u128",15]],[["option",4],["ratio",3]]]],[11,"from_f32","","",52,[[["f32",15]],[["option",4],["ratio",3]]]],[11,"from_f64","","",52,[[["f64",15]],[["option",4],["ratio",3]]]],[11,"from_i64","","",52,[[["i64",15]],[["ratio",3],["option",4]]]],[11,"from_i128","","",52,[[["i128",15]],[["ratio",3],["option",4]]]],[11,"from_u64","","",52,[[["u64",15]],[["ratio",3],["option",4]]]],[11,"from_u128","","",52,[[["u128",15]],[["ratio",3],["option",4]]]],[11,"from_f32","","",52,[[["f32",15]],[["ratio",3],["option",4]]]],[11,"from_f64","","",52,[[["f64",15]],[["ratio",3],["option",4]]]],[11,"from_i64","","",52,[[["i64",15]],[["ratio",3],["option",4]]]],[11,"from_i128","","",52,[[["i128",15]],[["ratio",3],["option",4]]]],[11,"from_u64","","",52,[[["u64",15]],[["ratio",3],["option",4]]]],[11,"from_u128","","",52,[[["u128",15]],[["ratio",3],["option",4]]]],[11,"from_f32","","",52,[[["f32",15]],[["ratio",3],["option",4]]]],[11,"from_f64","","",52,[[["f64",15]],[["ratio",3],["option",4]]]],[11,"from_i64","","",52,[[["i64",15]],[["option",4],["ratio",3]]]],[11,"from_i128","","",52,[[["i128",15]],[["option",4],["ratio",3]]]],[11,"from_u64","","",52,[[["u64",15]],[["option",4],["ratio",3]]]],[11,"from_u128","","",52,[[["u128",15]],[["option",4],["ratio",3]]]],[11,"from_f32","","",52,[[["f32",15]],[["option",4],["ratio",3]]]],[11,"from_f64","","",52,[[["f64",15]],[["option",4],["ratio",3]]]],[11,"from_i64","","",52,[[["i64",15]],[["option",4],["ratio",3]]]],[11,"from_i128","","",52,[[["i128",15]],[["option",4],["ratio",3]]]],[11,"from_u64","","",52,[[["u64",15]],[["option",4],["ratio",3]]]],[11,"from_u128","","",52,[[["u128",15]],[["option",4],["ratio",3]]]],[11,"from_f32","","",52,[[["f32",15]],[["option",4],["ratio",3]]]],[11,"from_f64","","",52,[[["f64",15]],[["option",4],["ratio",3]]]],[11,"from_i64","","",52,[[["i64",15]],[["option",4],["ratio",3]]]],[11,"from_i128","","",52,[[["i128",15]],[["option",4],["ratio",3]]]],[11,"from_u64","","",52,[[["u64",15]],[["option",4],["ratio",3]]]],[11,"from_u128","","",52,[[["u128",15]],[["option",4],["ratio",3]]]],[11,"from_f32","","",52,[[["f32",15]],[["option",4],["ratio",3]]]],[11,"from_f64","","",52,[[["f64",15]],[["option",4],["ratio",3]]]],[11,"from_i64","","",52,[[["i64",15]],[["option",4],["ratio",3]]]],[11,"from_i128","","",52,[[["i128",15]],[["option",4],["ratio",3]]]],[11,"from_u64","","",52,[[["u64",15]],[["option",4],["ratio",3]]]],[11,"from_u128","","",52,[[["u128",15]],[["option",4],["ratio",3]]]],[11,"from_f32","","",52,[[["f32",15]],[["option",4],["ratio",3]]]],[11,"from_f64","","",52,[[["f64",15]],[["option",4],["ratio",3]]]],[11,"from_i64","","",52,[[["i64",15]],[["ratio",3],["option",4]]]],[11,"from_i128","","",52,[[["i128",15]],[["ratio",3],["option",4]]]],[11,"from_u64","","",52,[[["u64",15]],[["ratio",3],["option",4]]]],[11,"from_u128","","",52,[[["u128",15]],[["ratio",3],["option",4]]]],[11,"from_f32","","",52,[[["f32",15]],[["ratio",3],["option",4]]]],[11,"from_f64","","",52,[[["f64",15]],[["ratio",3],["option",4]]]],[11,"from_i64","","",52,[[["i64",15]],[["option",4],["ratio",3]]]],[11,"from_i128","","",52,[[["i128",15]],[["option",4],["ratio",3]]]],[11,"from_u64","","",52,[[["u64",15]],[["option",4],["ratio",3]]]],[11,"from_u128","","",52,[[["u128",15]],[["option",4],["ratio",3]]]],[11,"from_f32","","",52,[[["f32",15]],[["option",4],["ratio",3]]]],[11,"from_f64","","",52,[[["f64",15]],[["option",4],["ratio",3]]]],[11,"from_i64","","",52,[[["i64",15]],[["ratio",3],["option",4]]]],[11,"from_i128","","",52,[[["i128",15]],[["ratio",3],["option",4]]]],[11,"from_u64","","",52,[[["u64",15]],[["ratio",3],["option",4]]]],[11,"from_u128","","",52,[[["u128",15]],[["ratio",3],["option",4]]]],[11,"from_f32","","",52,[[["f32",15]],[["ratio",3],["option",4]]]],[11,"from_f64","","",52,[[["f64",15]],[["ratio",3],["option",4]]]],[11,"from_i64","","",52,[[["i64",15]],[["option",4],["ratio",3]]]],[11,"from_i128","","",52,[[["i128",15]],[["option",4],["ratio",3]]]],[11,"from_u64","","",52,[[["u64",15]],[["option",4],["ratio",3]]]],[11,"from_u128","","",52,[[["u128",15]],[["option",4],["ratio",3]]]],[11,"from_f32","","",52,[[["f32",15]],[["option",4],["ratio",3]]]],[11,"from_f64","","",52,[[["f64",15]],[["option",4],["ratio",3]]]],[11,"mul_assign","","",52,[[["ratio",3]]]],[11,"mul_assign","","",52,[[]]],[11,"mul_assign","","",52,[[["ratio",3]]]],[11,"mul_assign","","",52,[[]]],[11,"into","","",52,[[]]],[11,"rem","","",52,[[["ratio",3]],["ratio",3]]],[11,"rem","","",52,[[["ratio",3]],["ratio",3]]],[11,"rem","","",52,[[],["ratio",3]]],[11,"rem","","",52,[[],["ratio",3]]],[11,"sum","","",52,[[],["ratio",3]]],[11,"sum","","",52,[[],["ratio",3]]],[11,"neg","","",52,[[],["ratio",3]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from_str","","Parses <code>numer/denom</code> or just <code>numer</code>.",52,[[["str",15]],[["result",4],["ratio",3],["parseratioerror",3]]]],[11,"checked_add","","",52,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",52,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",52,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",52,[[],[["option",4],["u64",15]]]],[11,"to_u128","","",52,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",52,[[],[["f64",15],["option",4]]]],[11,"add","","",52,[[["ratio",3]],["ratio",3]]],[11,"add","","",52,[[["ratio",3]],["ratio",3]]],[11,"add","","",52,[[],["ratio",3]]],[11,"add","","",52,[[],["ratio",3]]],[11,"from_str_radix","","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.",52,[[["u32",15],["str",15]],[["result",4],["ratio",3],["parseratioerror",3]]]],[11,"checked_mul","","",52,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"div_assign","","",52,[[]]],[11,"div_assign","","",52,[[]]],[11,"div_assign","","",52,[[["ratio",3]]]],[11,"div_assign","","",52,[[["ratio",3]]]],[11,"from","","",52,[[],["ratio",3]]],[11,"from","","",52,[[],["ratio",3]]],[11,"product","","",52,[[],["ratio",3]]],[11,"product","","",52,[[],["ratio",3]]],[11,"div","","",52,[[],["ratio",3]]],[11,"div","","",52,[[["ratio",3]],["ratio",3]]],[11,"div","","",52,[[],["ratio",3]]],[11,"div","","",52,[[["ratio",3]],["ratio",3]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",52,[[["ratio",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",52,[[]]],[11,"cmp","","",52,[[["ratio",3]],["ordering",4]]],[11,"zero","","",52,[[],["ratio",3]]],[11,"is_zero","","",52,[[],["bool",15]]],[11,"set_zero","","",52,[[]]],[11,"mul","","",52,[[],["ratio",3]]],[11,"mul","","",52,[[],["ratio",3]]],[11,"mul","","",52,[[["ratio",3]],["ratio",3]]],[11,"mul","","",52,[[["ratio",3]],["ratio",3]]],[11,"next","num::integer","",45,[[],["option",4]]],[11,"clone","","",2,[[],["extendedgcd",3]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",2,[[["extendedgcd",3]],["bool",15]]],[11,"ne","","",2,[[["extendedgcd",3]],["bool",15]]],[11,"clone","num::iter","",49,[[],["rangestepinclusive",3]]],[11,"clone","","",51,[[],["rangestepfrom",3]]],[11,"clone","","",50,[[],["rangefrom",3]]],[11,"clone","","",46,[[],["range",3]]],[11,"clone","","",47,[[],["rangeinclusive",3]]],[11,"clone","","",48,[[],["rangestep",3]]],[11,"next_back","","",46,[[],["option",4]]],[11,"next_back","","",47,[[],["option",4]]],[11,"next","","",49,[[],["option",4]]],[11,"next","","",51,[[],["option",4]]],[11,"size_hint","","",51,[[]]],[11,"next","","",48,[[],["option",4]]],[11,"next","","",46,[[],["option",4]]],[11,"size_hint","","",46,[[]]],[11,"next","","",50,[[],["option",4]]],[11,"size_hint","","",50,[[]]],[11,"next","","",47,[[],["option",4]]],[11,"size_hint","","",47,[[]]],[11,"new","num","Create a new Complex",0,[[],["complex",3]]],[11,"i","","Returns imaginary unit",0,[[],["complex",3]]],[11,"norm_sqr","","Returns the square of the norm (since <code>T</code> doesn\'t …",0,[[]]],[11,"scale","","Multiplies <code>self</code> by the scalar <code>t</code>.",0,[[],["complex",3]]],[11,"unscale","","Divides <code>self</code> by the scalar <code>t</code>.",0,[[],["complex",3]]],[11,"powu","","Raises <code>self</code> to an unsigned integer power.",0,[[["u32",15]],["complex",3]]],[11,"conj","","Returns the complex conjugate. i.e. <code>re - i im</code>",0,[[],["complex",3]]],[11,"inv","","Returns <code>1/self</code>",0,[[],["complex",3]]],[11,"powi","","Raises <code>self</code> to a signed integer power.",0,[[["i32",15]],["complex",3]]],[11,"l1_norm","","Returns the L1 norm <code>|re| + |im|</code> -- the Manhattan distance …",0,[[]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[],["bool",15]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[],["bool",15]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[],["bool",15]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[],["bool",15]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients …",45,[[],["iterbinomial",3]]],[11,"new_raw","num::rational","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …",52,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",52,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",52,[[]]],[11,"new","","Creates a new <code>Ratio</code>.",52,[[],["ratio",3]]],[11,"from_integer","","Creates a <code>Ratio</code> representing the integer <code>t</code>.",52,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",52,[[]]],[11,"is_integer","","Returns true if the rational number is an integer …",52,[[],["bool",15]]],[11,"reduced","","Returns a reduced copy of self.",52,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",52,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",52,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",52,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away …",52,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",52,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division …",52,[[],["ratio",3]]],[11,"pow","","Raises the <code>Ratio</code> to the power of an exponent.",52,[[["i32",15]],["ratio",3]]],[11,"approximate_float","","",52,[[],[["ratio",3],["option",4]]]]],"p":[[3,"Complex"],[8,"Integer"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Average"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_complex":{"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"new","","Create a new Complex",0,[[]]],[11,"i","","Returns imaginary unit",0,[[]]],[11,"norm_sqr","","Returns the square of the norm (since <code>T</code> doesn\'t …",0,[[]]],[11,"scale","","Multiplies <code>self</code> by the scalar <code>t</code>.",0,[[]]],[11,"unscale","","Divides <code>self</code> by the scalar <code>t</code>.",0,[[]]],[11,"powu","","Raises <code>self</code> to an unsigned integer power.",0,[[["u32",15]]]],[11,"conj","","Returns the complex conjugate. i.e. <code>re - i im</code>",0,[[]]],[11,"inv","","Returns <code>1/self</code>",0,[[]]],[11,"powi","","Raises <code>self</code> to a signed integer power.",0,[[["i32",15]]]],[11,"l1_norm","","Returns the L1 norm <code>|re| + |im|</code> -- the Manhattan distance …",0,[[]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[],["bool",15]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[],["bool",15]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[],["bool",15]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[],["bool",15]]],[3,"ParseComplexError","","",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"eq","","",0,[[["complex",3]],["bool",15]]],[11,"ne","","",0,[[["complex",3]],["bool",15]]],[11,"eq","","",1,[[["parsecomplexerror",3]],["bool",15]]],[11,"ne","","",1,[[["parsecomplexerror",3]],["bool",15]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"neg","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …",0,[[["str",15]],["result",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"clone","","",0,[[],["complex",3]]],[11,"default","","",0,[[],["complex",3]]],[11,"to_usize","","",0,[[],[["option",4],["usize",15]]]],[11,"to_isize","","",0,[[],[["option",4],["isize",15]]]],[11,"to_u8","","",0,[[],[["option",4],["u8",15]]]],[11,"to_u16","","",0,[[],[["option",4],["u16",15]]]],[11,"to_u32","","",0,[[],[["option",4],["u32",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_i8","","",0,[[],[["option",4],["i8",15]]]],[11,"to_i16","","",0,[[],[["option",4],["i16",15]]]],[11,"to_i32","","",0,[[],[["option",4],["i32",15]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_f32","","",0,[[],[["option",4],["f32",15]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"from_usize","","",0,[[["usize",15]],["option",4]]],[11,"from_isize","","",0,[[["isize",15]],["option",4]]],[11,"from_u8","","",0,[[["u8",15]],["option",4]]],[11,"from_u16","","",0,[[["u16",15]],["option",4]]],[11,"from_u32","","",0,[[["u32",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_i8","","",0,[[["i8",15]],["option",4]]],[11,"from_i16","","",0,[[["i16",15]],["option",4]]],[11,"from_i32","","",0,[[["i32",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from","","",0,[[["toprimitive",8]],["option",4]]],[11,"as_","","",0,[[]]],[11,"from_str_radix","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …",0,[[["u32",15],["str",15]],["result",4]]],[11,"zero","","",0,[[]]],[11,"is_zero","","",0,[[],["bool",15]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[]]],[11,"is_one","","",0,[[],["bool",15]]],[11,"set_one","","",0,[[]]],[11,"inv","","",0,[[]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[8,"Roots","num_integer","Provides methods to compute an integer\'s square root, …",null,null],[10,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",0,[[["u32",15]]]],[11,"sqrt","","Returns the truncated principal square root of an integer …",0,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal <code>n</code>th root of an integer -- …",null,[[["u32",15],["roots",8]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer …",null,[[["roots",8]],["roots",8]]],[8,"Average","","Provides methods to compute the average of two integers, …",null,null],[10,"average_ceil","","Returns the ceiling value of the average of <code>self</code> and <code>other</code>…",1,[[]]],[10,"average_floor","","Returns the floor value of the average of <code>self</code> and <code>other</code>. …",1,[[]]],[5,"average_ceil","","Returns the ceiling value of the average of <code>x</code> and <code>y</code> -- …",null,[[["average",8]],["average",8]]],[5,"average_floor","","Returns the floor value of the average of <code>x</code> and <code>y</code> -- see …",null,[[["average",8]],["average",8]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[]]],[11,"div_ceil","","Ceiled integer division.",2,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple …",2,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and …",2,[[]]],[10,"divides","","Deprecated, use <code>is_multiple_of</code> instead.",2,[[],["bool",15]]],[10,"is_multiple_of","","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.",2,[[],["bool",15]]],[10,"is_even","","Returns <code>true</code> if the number is even.",2,[[],["bool",15]]],[10,"is_odd","","Returns <code>true</code> if the number is odd.",2,[[],["bool",15]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. …",2,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. …",2,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",3,null],[12,"x","","",3,null],[12,"y","","",3,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the …",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number …",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest …",null,[[["integer",8]]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[11,"new","","For a given n, iterate over all binomial coefficients …",4,[[],["iterbinomial",3]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["clone",8],["integer",8]],[["clone",8],["integer",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["clone",8],["integer",8]]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"eq","","",3,[[["extendedgcd",3]],["bool",15]]],[11,"ne","","",3,[[["extendedgcd",3]],["bool",15]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",3,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer …",0,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",0,[[]]]],"p":[[8,"Roots"],[8,"Average"],[8,"Integer"],[3,"ExtendedGcd"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop) …",null,[[],["range",3]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[3,"RangeStep","","An iterator over the range [start, stop) by <code>step</code>. It …",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by <code>step</code>. …",null,[[],["rangestep",3]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by <code>step</code>. It …",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by <code>step</code>. …",null,[[],["rangestepinclusive",3]]],[3,"RangeFrom","","An iterator over the infinite range starting at <code>start</code>",null,null],[5,"range_from","","Return an iterator over the infinite range starting at …",null,[[],["rangefrom",3]]],[3,"RangeStepFrom","","An iterator over the infinite range starting at <code>start</code> by …",null,null],[5,"range_step_from","","Return an iterator over the infinite range starting at …",null,[[],["rangestepfrom",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"into_iter","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"into_iter","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_iter","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"clone","","",0,[[],["range",3]]],[11,"clone","","",1,[[],["rangeinclusive",3]]],[11,"clone","","",2,[[],["rangestep",3]]],[11,"clone","","",3,[[],["rangestepinclusive",3]]],[11,"clone","","",4,[[],["rangefrom",3]]],[11,"clone","","",5,[[],["rangestepfrom",3]]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"]]},\
"num_rational":{"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[6,"Rational","","Alias for a <code>Ratio</code> of machine-sized integers.",null,null],[6,"Rational32","","Alias for a <code>Ratio</code> of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a <code>Ratio</code> of 64-bit-sized integers.",null,null],[11,"new_raw","","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …",0,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[]]],[11,"new","","Creates a new <code>Ratio</code>.",0,[[],["ratio",3]]],[11,"from_integer","","Creates a <code>Ratio</code> representing the integer <code>t</code>.",0,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[]]],[11,"is_integer","","Returns true if the rational number is an integer …",0,[[],["bool",15]]],[11,"reduced","","Returns a reduced copy of self.",0,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",0,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",0,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",0,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away …",0,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",0,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division …",0,[[],["ratio",3]]],[11,"pow","","Raises the <code>Ratio</code> to the power of an exponent.",0,[[["i32",15]],["ratio",3]]],[3,"ParseRatioError","","",null,null],[11,"approximate_float","","",0,[[["floatcore",8],["numcast",8]],[["option",4],["ratio",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",1,[[["parseratioerror",3]],["bool",15]]],[11,"ne","","",1,[[["parseratioerror",3]],["bool",15]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"neg","","",0,[[],["ratio",3]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","Parses <code>numer/denom</code> or just <code>numer</code>.",0,[[["str",15]],[["result",4],["ratio",3],["parseratioerror",3]]]],[11,"into","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"clone","","",0,[[],["ratio",3]]],[11,"clone","","",1,[[],["parseratioerror",3]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"to_i64","","",0,[[],[["i64",15],["option",4]]]],[11,"to_i128","","",0,[[],[["option",4],["i128",15]]]],[11,"to_u64","","",0,[[],[["u64",15],["option",4]]]],[11,"to_u128","","",0,[[],[["u128",15],["option",4]]]],[11,"to_f64","","",0,[[],[["f64",15],["option",4]]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_i64","","",0,[[["i64",15]],["option",4]]],[11,"from_i128","","",0,[[["i128",15]],["option",4]]],[11,"from_u64","","",0,[[["u64",15]],["option",4]]],[11,"from_u128","","",0,[[["u128",15]],["option",4]]],[11,"from_f32","","",0,[[["f32",15]],["option",4]]],[11,"from_f64","","",0,[[["f64",15]],["option",4]]],[11,"from_str_radix","","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.",0,[[["u32",15],["str",15]],[["result",4],["ratio",3],["parseratioerror",3]]]],[11,"zero","","",0,[[],["ratio",3]]],[11,"is_zero","","",0,[[],["bool",15]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[],["ratio",3]]],[11,"is_one","","",0,[[],["bool",15]]],[11,"set_one","","",0,[[]]],[11,"checked_add","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_sub","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_mul","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"checked_div","","",0,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"inv","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[["u8",15]],["ratio",3]]],[11,"pow","","",0,[[["u8",15]],["ratio",3]]],[11,"pow","","",0,[[["u16",15]],["ratio",3]]],[11,"pow","","",0,[[["u16",15]],["ratio",3]]],[11,"pow","","",0,[[["u32",15]],["ratio",3]]],[11,"pow","","",0,[[["u32",15]],["ratio",3]]],[11,"pow","","",0,[[["u64",15]],["ratio",3]]],[11,"pow","","",0,[[["u64",15]],["ratio",3]]],[11,"pow","","",0,[[["u128",15]],["ratio",3]]],[11,"pow","","",0,[[["u128",15]],["ratio",3]]],[11,"pow","","",0,[[["usize",15]],["ratio",3]]],[11,"pow","","",0,[[["usize",15]],["ratio",3]]],[11,"pow","","",0,[[["i8",15]],["ratio",3]]],[11,"pow","","",0,[[["i8",15]],["ratio",3]]],[11,"pow","","",0,[[["i16",15]],["ratio",3]]],[11,"pow","","",0,[[["i16",15]],["ratio",3]]],[11,"pow","","",0,[[["i32",15]],["ratio",3]]],[11,"pow","","",0,[[["i32",15]],["ratio",3]]],[11,"pow","","",0,[[["i64",15]],["ratio",3]]],[11,"pow","","",0,[[["i64",15]],["ratio",3]]],[11,"pow","","",0,[[["i128",15]],["ratio",3]]],[11,"pow","","",0,[[["i128",15]],["ratio",3]]],[11,"pow","","",0,[[["isize",15]],["ratio",3]]],[11,"pow","","",0,[[["isize",15]],["ratio",3]]],[11,"abs","","",0,[[],["ratio",3]]],[11,"abs_sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"signum","","",0,[[],["ratio",3]]],[11,"is_positive","","",0,[[],["bool",15]]],[11,"is_negative","","",0,[[],["bool",15]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",0,[[]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[]]],[0,"cast","num_traits","",null,null],[8,"ToPrimitive","num_traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …",1,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …",1,[[],[["option",4],["i8",15]]]],[11,"to_i16","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …",1,[[],[["option",4],["i16",15]]]],[11,"to_i32","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …",1,[[],[["option",4],["i32",15]]]],[10,"to_i64","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …",1,[[],[["i64",15],["option",4]]]],[11,"to_i128","","Converts the value of <code>self</code> to an <code>i128</code>. If the value …",1,[[],[["option",4],["i128",15]]]],[11,"to_usize","","Converts the value of <code>self</code> to a <code>usize</code>. If the value …",1,[[],[["option",4],["usize",15]]]],[11,"to_u8","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…",1,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …",1,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …",1,[[],[["option",4],["u32",15]]]],[10,"to_u64","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …",1,[[],[["u64",15],["option",4]]]],[11,"to_u128","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …",1,[[],[["u128",15],["option",4]]]],[11,"to_f32","","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …",1,[[],[["option",4],["f32",15]]]],[11,"to_f64","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …",1,[[],[["f64",15],["option",4]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an <code>isize</code> to return an optional value of this …",2,[[["isize",15]],["option",4]]],[11,"from_i8","","Converts an <code>i8</code> to return an optional value of this type. …",2,[[["i8",15]],["option",4]]],[11,"from_i16","","Converts an <code>i16</code> to return an optional value of this type. …",2,[[["i16",15]],["option",4]]],[11,"from_i32","","Converts an <code>i32</code> to return an optional value of this type. …",2,[[["i32",15]],["option",4]]],[10,"from_i64","","Converts an <code>i64</code> to return an optional value of this type. …",2,[[["i64",15]],["option",4]]],[11,"from_i128","","Converts an <code>i128</code> to return an optional value of this …",2,[[["i128",15]],["option",4]]],[11,"from_usize","","Converts a <code>usize</code> to return an optional value of this …",2,[[["usize",15]],["option",4]]],[11,"from_u8","","Converts an <code>u8</code> to return an optional value of this type. …",2,[[["u8",15]],["option",4]]],[11,"from_u16","","Converts an <code>u16</code> to return an optional value of this type. …",2,[[["u16",15]],["option",4]]],[11,"from_u32","","Converts an <code>u32</code> to return an optional value of this type. …",2,[[["u32",15]],["option",4]]],[10,"from_u64","","Converts an <code>u64</code> to return an optional value of this type. …",2,[[["u64",15]],["option",4]]],[11,"from_u128","","Converts an <code>u128</code> to return an optional value of this …",2,[[["u128",15]],["option",4]]],[11,"from_f32","","Converts a <code>f32</code> to return an optional value of this type. …",2,[[["f32",15]],["option",4]]],[11,"from_f64","","Converts a <code>f64</code> to return an optional value of this type. …",2,[[["f64",15]],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted …",3,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars …",null,null],[10,"as_","","Convert a value to another, using the <code>as</code> operator.",4,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with …",null,null],[10,"infinity","","Returns positive infinity.",5,[[]]],[10,"neg_infinity","","Returns negative infinity.",5,[[]]],[10,"nan","","Returns NaN.",5,[[]]],[10,"neg_zero","","Returns <code>-0.0</code>.",5,[[]]],[10,"min_value","","Returns the smallest finite value that this type can …",5,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this …",5,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",5,[[]]],[10,"max_value","","Returns the largest finite value that this type can …",5,[[]]],[11,"is_nan","","Returns <code>true</code> if the number is NaN.",5,[[],["bool",15]]],[11,"is_infinite","","Returns <code>true</code> if the number is infinite.",5,[[],["bool",15]]],[11,"is_finite","","Returns <code>true</code> if the number is neither infinite or NaN.",5,[[],["bool",15]]],[11,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",5,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",5,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a …",5,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a …",5,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way …",5,[[]]],[11,"trunc","","Return the integer part of a number.",5,[[]]],[11,"fract","","Returns the fractional part of a number.",5,[[]]],[11,"abs","","Computes the absolute value of <code>self</code>. Returns …",5,[[]]],[11,"signum","","Returns a number that represents the sign of <code>self</code>.",5,[[]]],[11,"is_sign_positive","","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …",5,[[],["bool",15]]],[11,"is_sign_negative","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …",5,[[],["bool",15]]],[11,"min","","Returns the minimum of the two numbers.",5,[[]]],[11,"max","","Returns the maximum of the two numbers.",5,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the …",5,[[]]],[11,"powi","","Raise a number to an integer power.",5,[[["i32",15]]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",5,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",5,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as …",5,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",6,[[]]],[10,"FRAC_1_PI","","Return <code>1.0 / π</code>.",6,[[]]],[10,"FRAC_1_SQRT_2","","Return <code>1.0 / sqrt(2.0)</code>.",6,[[]]],[10,"FRAC_2_PI","","Return <code>2.0 / π</code>.",6,[[]]],[10,"FRAC_2_SQRT_PI","","Return <code>2.0 / sqrt(π)</code>.",6,[[]]],[10,"FRAC_PI_2","","Return <code>π / 2.0</code>.",6,[[]]],[10,"FRAC_PI_3","","Return <code>π / 3.0</code>.",6,[[]]],[10,"FRAC_PI_4","","Return <code>π / 4.0</code>.",6,[[]]],[10,"FRAC_PI_6","","Return <code>π / 6.0</code>.",6,[[]]],[10,"FRAC_PI_8","","Return <code>π / 8.0</code>.",6,[[]]],[10,"LN_10","","Return <code>ln(10.0)</code>.",6,[[]]],[10,"LN_2","","Return <code>ln(2.0)</code>.",6,[[]]],[10,"LOG10_E","","Return <code>log10(e)</code>.",6,[[]]],[10,"LOG2_E","","Return <code>log2(e)</code>.",6,[[]]],[10,"PI","","Return Archimedes’ constant <code>π</code>.",6,[[]]],[10,"SQRT_2","","Return <code>sqrt(2.0)</code>.",6,[[]]],[11,"TAU","","Return the full circle constant <code>τ</code>.",6,[[]]],[11,"LOG10_2","","Return <code>log10(2.0)</code>.",6,[[]]],[11,"LOG2_10","","Return <code>log2(10.0)</code>.",6,[[]]],[0,"identities","num_traits","",null,null],[8,"Zero","num_traits::identities","Defines an additive identity element for <code>Self</code>.",null,null],[10,"zero","","Returns the additive identity element of <code>Self</code>, <code>0</code>.",7,[[]]],[11,"set_zero","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.",7,[[]]],[10,"is_zero","","Returns <code>true</code> if <code>self</code> is equal to the additive identity.",7,[[],["bool",15]]],[8,"One","","Defines a multiplicative identity element for <code>Self</code>.",null,null],[10,"one","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.",8,[[]]],[11,"set_one","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …",8,[[]]],[11,"is_one","","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …",8,[[],["bool",15]]],[5,"zero","","Returns the additive identity, <code>0</code>.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, <code>1</code>.",null,[[],["one",8]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation …",9,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",9,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",9,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",9,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, <code>n</code>, …",9,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",9,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s …",9,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s …",9,[[]]],[10,"to_be","","Convert <code>self</code> to big endian from the target\'s endianness.",9,[[]]],[10,"to_le","","Convert <code>self</code> to little endian from the target\'s …",9,[[]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",9,[[["u32",15]]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns <code>None</code> instead of wrapping …",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow …",10,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns <code>None</code> instead of …",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If …",11,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns <code>None</code> instead of …",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or …",12,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns <code>None</code> instead of panicking …",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and …",13,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns <code>None</code> instead …",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for …",14,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns <code>None</code> if the result can\'t …",null,null],[10,"checked_neg","","Negates a number, returning <code>None</code> for results that can\'t …",15,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",16,[[["u32",15]],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns <code>None</code> on shifts larger …",null,null],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",17,[[["u32",15]],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse, …",null,null],[16,"Output","","The result after applying the operator.",18,null],[10,"inv","","Returns the multiplicative inverse of <code>self</code>.",18,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",19,null],[10,"mul_add","","Performs the fused multiply-add operation.",19,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",20,[[]]],[0,"overflowing","num_traits::ops","",null,null],[8,"OverflowingAdd","num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean …",21,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean …",22,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean …",23,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at …",24,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating …",24,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds …",null,null],[10,"saturating_add","","Saturating addition. Computes <code>self + other</code>, saturating at …",25,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds …",null,null],[10,"saturating_sub","","Saturating subtraction. Computes <code>self - other</code>, saturating …",26,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric …",null,null],[10,"saturating_mul","","Saturating multiplication. Computes <code>self * other</code>, …",27,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + other</code>, …",28,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - other</code>, …",29,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * other</code>, …",30,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",31,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",32,[[["u32",15]]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",33,[[["u32",15]]]],[0,"pow","num_traits","",null,null],[8,"Pow","num_traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",34,null],[10,"pow","","Returns <code>self</code> to the power <code>rhs</code>.",34,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation …",null,[[["usize",15],["clone",8],["mul",8],["one",8]],[["clone",8],["mul",8],["one",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning <code>None</code> if an …",null,[[["usize",15],["clone",8],["checkedmul",8],["one",8]],[["one",8],["option",4],["clone",8],["checkedmul",8]]]],[0,"sign","num_traits","",null,null],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that …",null,null],[10,"abs","","Computes the absolute value.",35,[[]]],[10,"abs_sub","","The positive difference of two numbers.",35,[[]]],[10,"signum","","Returns the sign of the number.",35,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the …",35,[[],["bool",15]]],[10,"is_negative","","Returns true if the number is negative and false if the …",35,[[],["bool",15]]],[5,"abs","","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…",null,null],[16,"FromStrRadixErr","","",36,null],[10,"from_str_radix","","Convert from a string and radix (typically <code>2..=36</code>).",36,[[["u32",15],["str",15]],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for <code>Num</code> types which also implement numeric …",null,null],[8,"RefNum","","The trait for references which implement numeric …",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment …",null,null],[8,"NumAssign","","The trait for <code>Num</code> types which also implement assignment …",null,null],[8,"NumAssignRef","","The trait for <code>NumAssign</code> types which also implement …",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",37,null],[13,"Invalid","","",37,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",38,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]},\
"raw_cpuid":{"doc":"","i":[[0,"native_cpuid","raw_cpuid","Uses Rust\'s <code>cpuid</code> function from the <code>arch</code> module.",null,null],[5,"cpuid_count","raw_cpuid::native_cpuid","",null,[[["u32",15]],["cpuidresult",3]]],[3,"CpuId","raw_cpuid","Main type used to query for information about the CPU …",null,null],[3,"CpuIdResult","","Low-level data-structure to store result of cpuid …",null,null],[12,"eax","","Return value EAX register",0,null],[12,"ebx","","Return value EBX register",0,null],[12,"ecx","","Return value ECX register",0,null],[12,"edx","","Return value EDX register",0,null],[11,"new","","Return new CPUID struct.",1,[[],["cpuid",3]]],[11,"get_vendor_info","","Return information about vendor. This is typically a …",1,[[],[["option",4],["vendorinfo",3]]]],[11,"get_feature_info","","Query a set of features that are available on this CPU.",1,[[],[["option",4],["featureinfo",3]]]],[11,"get_cache_info","","Query basic information about caches. This will just …",1,[[],[["option",4],["cacheinfoiter",3]]]],[11,"get_processor_serial","","Retrieve serial number of processor.",1,[[],[["processorserial",3],["option",4]]]],[11,"get_cache_parameters","","Retrieve more elaborate information about caches (as …",1,[[],[["cacheparametersiter",3],["option",4]]]],[11,"get_monitor_mwait_info","","Information about how monitor/mwait works on this CPU.",1,[[],[["option",4],["monitormwaitinfo",3]]]],[11,"get_thermal_power_info","","Query information about thermal and power management …",1,[[],[["thermalpowerinfo",3],["option",4]]]],[11,"get_extended_feature_info","","Find out about more features supported by this CPU.",1,[[],[["option",4],["extendedfeatures",3]]]],[11,"get_direct_cache_access_info","","Direct cache access info.",1,[[],[["option",4],["directcacheaccessinfo",3]]]],[11,"get_performance_monitoring_info","","Info about performance monitoring (how many counters …",1,[[],[["performancemonitoringinfo",3],["option",4]]]],[11,"get_extended_topology_info","","Information about topology (how many cores and what kind …",1,[[],[["extendedtopologyiter",3],["option",4]]]],[11,"get_extended_state_info","","Information for saving/restoring extended register state.",1,[[],[["option",4],["extendedstateinfo",3]]]],[11,"get_rdt_monitoring_info","","Quality of service informations.",1,[[],[["option",4],["rdtmonitoringinfo",3]]]],[11,"get_rdt_allocation_info","","Quality of service enforcement information.",1,[[],[["rdtallocationinfo",3],["option",4]]]],[11,"get_sgx_info","","",1,[[],[["option",4],["sgxinfo",3]]]],[11,"get_processor_trace_info","","Intel Processor Trace Enumeration Information.",1,[[],[["processortraceinfo",3],["option",4]]]],[11,"get_tsc_info","","Time Stamp Counter/Core Crystal Clock Information.",1,[[],[["option",4],["tscinfo",3]]]],[11,"get_processor_frequency_info","","Processor Frequency Information.",1,[[],[["option",4],["processorfrequencyinfo",3]]]],[11,"deterministic_address_translation_info","","",1,[[],[["datiter",3],["option",4]]]],[11,"get_soc_vendor_info","","",1,[[],[["option",4],["socvendorinfo",3]]]],[11,"get_hypervisor_info","","",1,[[],[["option",4],["hypervisorinfo",3]]]],[11,"get_extended_function_info","","Extended functionality of CPU described here (including …",1,[[],[["option",4],["extendedfunctioninfo",3]]]],[11,"get_memory_encryption_info","","",1,[[],[["option",4],["memoryencryptioninfo",3]]]],[3,"VendorInfo","","",null,null],[11,"as_string","","Return vendor identification as human readable string.",2,[[],["str",15]]],[3,"CacheInfoIter","","Used to iterate over cache information contained in cpuid …",null,null],[4,"CacheInfoType","","What type of cache are we dealing with?",null,null],[13,"General","","",3,null],[13,"Cache","","",3,null],[13,"TLB","","",3,null],[13,"STLB","","",3,null],[13,"DTLB","","",3,null],[13,"Prefetch","","",3,null],[3,"CacheInfo","","Describes any kind of cache (TLB, Data and Instruction …",null,null],[12,"num","","Number as retrieved from cpuid",4,null],[12,"typ","","Cache type",4,null],[11,"desc","","Description of the cache (from Intel Manual)",4,[[],["str",15]]],[17,"CACHE_INFO_TABLE","","This table is taken from Intel manual (Section CPUID …",null,null],[3,"ProcessorSerial","","",null,null],[11,"serial_lower","","Bits 00-31 of 96 bit processor serial number. (Available …",5,[[],["u32",15]]],[11,"serial_middle","","Bits 32-63 of 96 bit processor serial number. (Available …",5,[[],["u32",15]]],[11,"serial","","",5,[[],["u64",15]]],[3,"FeatureInfo","","",null,null],[11,"extended_family_id","","Version Information: Extended Family",6,[[],["u8",15]]],[11,"extended_model_id","","Version Information: Extended Model",6,[[],["u8",15]]],[11,"family_id","","Version Information: Family",6,[[],["u8",15]]],[11,"model_id","","Version Information: Model",6,[[],["u8",15]]],[11,"stepping_id","","Version Information: Stepping ID",6,[[],["u8",15]]],[11,"brand_index","","Brand Index",6,[[],["u8",15]]],[11,"cflush_cache_line_size","","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)",6,[[],["u8",15]]],[11,"initial_local_apic_id","","Initial APIC ID",6,[[],["u8",15]]],[11,"max_logical_processor_ids","","Maximum number of addressable IDs for logical processors …",6,[[],["u8",15]]],[11,"has_sse3","","Streaming SIMD Extensions 3 (SSE3). A value of 1 …",6,[[],["bool",15]]],[11,"has_pclmulqdq","","PCLMULQDQ. A value of 1 indicates the processor supports …",6,[[],["bool",15]]],[11,"has_ds_area","","64-bit DS Area. A value of 1 indicates the processor …",6,[[],["bool",15]]],[11,"has_monitor_mwait","","MONITOR/MWAIT. A value of 1 indicates the processor …",6,[[],["bool",15]]],[11,"has_cpl","","CPL Qualified Debug Store. A value of 1 indicates the …",6,[[],["bool",15]]],[11,"has_vmx","","Virtual Machine Extensions. A value of 1 indicates that …",6,[[],["bool",15]]],[11,"has_smx","","Safer Mode Extensions. A value of 1 indicates that the …",6,[[],["bool",15]]],[11,"has_eist","","Enhanced Intel SpeedStep® technology. A value of 1 …",6,[[],["bool",15]]],[11,"has_tm2","","Thermal Monitor 2. A value of 1 indicates whether the …",6,[[],["bool",15]]],[11,"has_ssse3","","A value of 1 indicates the presence of the Supplemental …",6,[[],["bool",15]]],[11,"has_cnxtid","","L1 Context ID. A value of 1 indicates the L1 data cache …",6,[[],["bool",15]]],[11,"has_fma","","A value of 1 indicates the processor supports FMA …",6,[[],["bool",15]]],[11,"has_cmpxchg16b","","CMPXCHG16B Available. A value of 1 indicates that the …",6,[[],["bool",15]]],[11,"has_pdcm","","Perfmon and Debug Capability: A value of 1 indicates the …",6,[[],["bool",15]]],[11,"has_pcid","","Process-context identifiers. A value of 1 indicates that …",6,[[],["bool",15]]],[11,"has_dca","","A value of 1 indicates the processor supports the ability …",6,[[],["bool",15]]],[11,"has_sse41","","A value of 1 indicates that the processor supports SSE4.1.",6,[[],["bool",15]]],[11,"has_sse42","","A value of 1 indicates that the processor supports SSE4.2.",6,[[],["bool",15]]],[11,"has_x2apic","","A value of 1 indicates that the processor supports x2APIC …",6,[[],["bool",15]]],[11,"has_movbe","","A value of 1 indicates that the processor supports MOVBE …",6,[[],["bool",15]]],[11,"has_popcnt","","A value of 1 indicates that the processor supports the …",6,[[],["bool",15]]],[11,"has_tsc_deadline","","A value of 1 indicates that the processors local APIC …",6,[[],["bool",15]]],[11,"has_aesni","","A value of 1 indicates that the processor supports the …",6,[[],["bool",15]]],[11,"has_xsave","","A value of 1 indicates that the processor supports the …",6,[[],["bool",15]]],[11,"has_oxsave","","A value of 1 indicates that the OS has enabled …",6,[[],["bool",15]]],[11,"has_avx","","A value of 1 indicates the processor supports the AVX …",6,[[],["bool",15]]],[11,"has_f16c","","A value of 1 indicates that processor supports 16-bit …",6,[[],["bool",15]]],[11,"has_rdrand","","A value of 1 indicates that processor supports RDRAND …",6,[[],["bool",15]]],[11,"has_hypervisor","","A value of 1 indicates the indicates the presence of a …",6,[[],["bool",15]]],[11,"has_fpu","","Floating Point Unit On-Chip. The processor contains an …",6,[[],["bool",15]]],[11,"has_vme","","Virtual 8086 Mode Enhancements. Virtual 8086 mode …",6,[[],["bool",15]]],[11,"has_de","","Debugging Extensions. Support for I/O breakpoints, …",6,[[],["bool",15]]],[11,"has_pse","","Page Size Extension. Large pages of size 4 MByte are …",6,[[],["bool",15]]],[11,"has_tsc","","Time Stamp Counter. The RDTSC instruction is supported, …",6,[[],["bool",15]]],[11,"has_msr","","Model Specific Registers RDMSR and WRMSR Instructions. …",6,[[],["bool",15]]],[11,"has_pae","","Physical Address Extension. Physical addresses greater …",6,[[],["bool",15]]],[11,"has_mce","","Machine Check Exception. Exception 18 is defined for …",6,[[],["bool",15]]],[11,"has_cmpxchg8b","","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …",6,[[],["bool",15]]],[11,"has_apic","","APIC On-Chip. The processor contains an Advanced …",6,[[],["bool",15]]],[11,"has_sysenter_sysexit","","SYSENTER and SYSEXIT Instructions. The SYSENTER and …",6,[[],["bool",15]]],[11,"has_mtrr","","Memory Type Range Registers. MTRRs are supported. The …",6,[[],["bool",15]]],[11,"has_pge","","Page Global Bit. The global bit is supported in …",6,[[],["bool",15]]],[11,"has_mca","","Machine Check Architecture. A value of 1 indicates the …",6,[[],["bool",15]]],[11,"has_cmov","","Conditional Move Instructions. The conditional move …",6,[[],["bool",15]]],[11,"has_pat","","Page Attribute Table. Page Attribute Table is supported. …",6,[[],["bool",15]]],[11,"has_pse36","","36-Bit Page Size Extension. 4-MByte pages addressing …",6,[[],["bool",15]]],[11,"has_psn","","Processor Serial Number. The processor supports the …",6,[[],["bool",15]]],[11,"has_clflush","","CLFLUSH Instruction. CLFLUSH Instruction is supported.",6,[[],["bool",15]]],[11,"has_ds","","Debug Store. The processor supports the ability to write …",6,[[],["bool",15]]],[11,"has_acpi","","Thermal Monitor and Software Controlled Clock Facilities. …",6,[[],["bool",15]]],[11,"has_mmx","","Intel MMX Technology. The processor supports the Intel …",6,[[],["bool",15]]],[11,"has_fxsave_fxstor","","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …",6,[[],["bool",15]]],[11,"has_sse","","SSE. The processor supports the SSE extensions.",6,[[],["bool",15]]],[11,"has_sse2","","SSE2. The processor supports the SSE2 extensions.",6,[[],["bool",15]]],[11,"has_ss","","Self Snoop. The processor supports the management of …",6,[[],["bool",15]]],[11,"has_htt","","Max APIC IDs reserved field is Valid. A value of 0 for …",6,[[],["bool",15]]],[11,"has_tm","","Thermal Monitor. The processor implements the thermal …",6,[[],["bool",15]]],[11,"has_pbe","","Pending Break Enable. The processor supports the use of …",6,[[],["bool",15]]],[3,"CacheParametersIter","","",null,null],[3,"CacheParameter","","",null,null],[4,"CacheType","","",null,null],[13,"Null","","Null - No more caches",7,null],[13,"Data","","Data cache",7,null],[13,"Instruction","","Instruction cache",7,null],[13,"Unified","","Data and Instruction cache",7,null],[13,"Reserved","","4-31 = Reserved",7,null],[11,"cache_type","","Cache Type",8,[[],["cachetype",4]]],[11,"level","","Cache Level (starts at 1)",8,[[],["u8",15]]],[11,"is_self_initializing","","Self Initializing cache level (does not need SW …",8,[[],["bool",15]]],[11,"is_fully_associative","","Fully Associative cache",8,[[],["bool",15]]],[11,"max_cores_for_cache","","Maximum number of addressable IDs for logical processors …",8,[[],["usize",15]]],[11,"max_cores_for_package","","Maximum number of addressable IDs for processor cores in …",8,[[],["usize",15]]],[11,"coherency_line_size","","System Coherency Line Size (Bits 11-00)",8,[[],["usize",15]]],[11,"physical_line_partitions","","Physical Line partitions (Bits 21-12)",8,[[],["usize",15]]],[11,"associativity","","Ways of associativity (Bits 31-22)",8,[[],["usize",15]]],[11,"sets","","Number of Sets (Bits 31-00)",8,[[],["usize",15]]],[11,"is_write_back_invalidate","","Write-Back Invalidate/Invalidate (Bit 0) False: …",8,[[],["bool",15]]],[11,"is_inclusive","","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …",8,[[],["bool",15]]],[11,"has_complex_indexing","","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…",8,[[],["bool",15]]],[3,"MonitorMwaitInfo","","",null,null],[11,"smallest_monitor_line","","Smallest monitor-line size in bytes (default is …",9,[[],["u16",15]]],[11,"largest_monitor_line","","Largest monitor-line size in bytes (default is …",9,[[],["u16",15]]],[11,"extensions_supported","","Enumeration of Monitor-Mwait extensions (beyond EAX and …",9,[[],["bool",15]]],[11,"interrupts_as_break_event","","Supports treating interrupts as break-event for MWAIT, …",9,[[],["bool",15]]],[11,"supported_c0_states","","Number of C0 sub C-states supported using MWAIT (Bits 03 …",9,[[],["u16",15]]],[11,"supported_c1_states","","Number of C1 sub C-states supported using MWAIT (Bits 07 …",9,[[],["u16",15]]],[11,"supported_c2_states","","Number of C2 sub C-states supported using MWAIT (Bits 11 …",9,[[],["u16",15]]],[11,"supported_c3_states","","Number of C3 sub C-states supported using MWAIT (Bits 15 …",9,[[],["u16",15]]],[11,"supported_c4_states","","Number of C4 sub C-states supported using MWAIT (Bits 19 …",9,[[],["u16",15]]],[11,"supported_c5_states","","Number of C5 sub C-states supported using MWAIT (Bits 23 …",9,[[],["u16",15]]],[11,"supported_c6_states","","Number of C6 sub C-states supported using MWAIT (Bits 27 …",9,[[],["u16",15]]],[11,"supported_c7_states","","Number of C7 sub C-states supported using MWAIT (Bits 31 …",9,[[],["u16",15]]],[3,"ThermalPowerInfo","","",null,null],[11,"dts_irq_threshold","","Number of Interrupt Thresholds in Digital Thermal Sensor",10,[[],["u8",15]]],[11,"has_dts","","Digital temperature sensor is supported if set.",10,[[],["bool",15]]],[11,"has_turbo_boost","","Intel Turbo Boost Technology Available (see description …",10,[[],["bool",15]]],[11,"has_arat","","ARAT. APIC-Timer-always-running feature is supported if …",10,[[],["bool",15]]],[11,"has_pln","","PLN. Power limit notification controls are supported if …",10,[[],["bool",15]]],[11,"has_ecmd","","ECMD. Clock modulation duty cycle extension is supported …",10,[[],["bool",15]]],[11,"has_ptm","","PTM. Package thermal management is supported if set.",10,[[],["bool",15]]],[11,"has_hwp","","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …",10,[[],["bool",15]]],[11,"has_hwp_notification","","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …",10,[[],["bool",15]]],[11,"has_hwp_activity_window","","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …",10,[[],["bool",15]]],[11,"has_hwp_energy_performance_preference","","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …",10,[[],["bool",15]]],[11,"has_hwp_package_level_request","","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …",10,[[],["bool",15]]],[11,"has_hdc","","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …",10,[[],["bool",15]]],[11,"has_turbo_boost3","","Intel® Turbo Boost Max Technology 3.0 available.",10,[[],["bool",15]]],[11,"has_hwp_capabilities","","HWP Capabilities. Highest Performance change is supported …",10,[[],["bool",15]]],[11,"has_hwp_peci_override","","HWP PECI override is supported if set.",10,[[],["bool",15]]],[11,"has_flexible_hwp","","Flexible HWP is supported if set.",10,[[],["bool",15]]],[11,"has_hwp_fast_access_mode","","Fast access mode for the IA32_HWP_REQUEST MSR is …",10,[[],["bool",15]]],[11,"has_ignore_idle_processor_hwp_request","","Ignoring Idle Logical Processor HWP request is supported …",10,[[],["bool",15]]],[11,"has_hw_coord_feedback","","Hardware Coordination Feedback Capability (Presence of …",10,[[],["bool",15]]],[11,"has_energy_bias_pref","","The processor supports performance-energy bias preference …",10,[[],["bool",15]]],[3,"ExtendedFeatures","","",null,null],[11,"has_fsgsbase","","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …",11,[[],["bool",15]]],[11,"has_tsc_adjust_msr","","IA32_TSC_ADJUST MSR is supported if 1.",11,[[],["bool",15]]],[11,"has_bmi1","","BMI1",11,[[],["bool",15]]],[11,"has_hle","","HLE",11,[[],["bool",15]]],[11,"has_avx2","","AVX2",11,[[],["bool",15]]],[11,"has_fdp","","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …",11,[[],["bool",15]]],[11,"has_smep","","SMEP. Supports Supervisor-Mode Execution Prevention if 1.",11,[[],["bool",15]]],[11,"has_bmi2","","BMI2",11,[[],["bool",15]]],[11,"has_rep_movsb_stosb","","Supports Enhanced REP MOVSB/STOSB if 1.",11,[[],["bool",15]]],[11,"has_invpcid","","INVPCID. If 1, supports INVPCID instruction for system …",11,[[],["bool",15]]],[11,"has_rtm","","RTM",11,[[],["bool",15]]],[11,"has_rdtm","","Supports Intel Resource Director Technology (RDT) …",11,[[],["bool",15]]],[11,"has_fpu_cs_ds_deprecated","","Deprecates FPU CS and FPU DS values if 1.",11,[[],["bool",15]]],[11,"has_mpx","","MPX. Supports Intel Memory Protection Extensions if 1.",11,[[],["bool",15]]],[11,"has_rdta","","Supports Intel Resource Director Technology (RDT) …",11,[[],["bool",15]]],[11,"has_rdseed","","Supports RDSEED.",11,[[],["bool",15]]],[11,"has_rdseet","","Supports RDSEED (deprecated alias).",11,[[],["bool",15]]],[11,"has_adx","","Supports ADX.",11,[[],["bool",15]]],[11,"has_smap","","SMAP. Supports Supervisor-Mode Access Prevention (and the …",11,[[],["bool",15]]],[11,"has_clflushopt","","Supports CLFLUSHOPT.",11,[[],["bool",15]]],[11,"has_processor_trace","","Supports Intel Processor Trace.",11,[[],["bool",15]]],[11,"has_sha","","Supports SHA Instructions.",11,[[],["bool",15]]],[11,"has_sgx","","Supports Intel® Software Guard Extensions (Intel® SGX …",11,[[],["bool",15]]],[11,"has_avx512f","","Supports AVX512F.",11,[[],["bool",15]]],[11,"has_avx512dq","","Supports AVX512DQ.",11,[[],["bool",15]]],[11,"has_avx512_ifma","","AVX512_IFMA",11,[[],["bool",15]]],[11,"has_avx512pf","","AVX512PF",11,[[],["bool",15]]],[11,"has_avx512er","","AVX512ER",11,[[],["bool",15]]],[11,"has_avx512cd","","AVX512CD",11,[[],["bool",15]]],[11,"has_avx512bw","","AVX512BW",11,[[],["bool",15]]],[11,"has_avx512vl","","AVX512VL",11,[[],["bool",15]]],[11,"has_clwb","","CLWB",11,[[],["bool",15]]],[11,"has_prefetchwt1","","Has PREFETCHWT1 (Intel® Xeon Phi™ only).",11,[[],["bool",15]]],[11,"has_umip","","Supports user-mode instruction prevention if 1.",11,[[],["bool",15]]],[11,"has_pku","","Supports protection keys for user-mode pages.",11,[[],["bool",15]]],[11,"has_ospke","","OS has set CR4.PKE to enable protection keys (and the …",11,[[],["bool",15]]],[11,"has_rdpid","","RDPID and IA32_TSC_AUX are available.",11,[[],["bool",15]]],[11,"has_sgx_lc","","Supports SGX Launch Configuration.",11,[[],["bool",15]]],[11,"mawau_value","","The value of MAWAU used by the BNDLDX and BNDSTX …",11,[[],["u8",15]]],[3,"DirectCacheAccessInfo","","",null,null],[11,"get_dca_cap_value","","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR …",12,[[],["u32",15]]],[3,"PerformanceMonitoringInfo","","",null,null],[11,"version_id","","Version ID of architectural performance monitoring. (Bits …",13,[[],["u8",15]]],[11,"number_of_counters","","Number of general-purpose performance monitoring counter …",13,[[],["u8",15]]],[11,"counter_bit_width","","Bit width of general-purpose, performance monitoring …",13,[[],["u8",15]]],[11,"ebx_length","","Length of EBX bit vector to enumerate architectural …",13,[[],["u8",15]]],[11,"fixed_function_counters","","Number of fixed-function performance counters (if Version …",13,[[],["u8",15]]],[11,"fixed_function_counters_bit_width","","Bit width of fixed-function performance counters (if …",13,[[],["u8",15]]],[11,"has_any_thread_deprecation","","AnyThread deprecation",13,[[],["bool",15]]],[11,"is_core_cyc_ev_unavailable","","Core cycle event not available if 1.",13,[[],["bool",15]]],[11,"is_inst_ret_ev_unavailable","","Instruction retired event not available if 1.",13,[[],["bool",15]]],[11,"is_ref_cycle_ev_unavailable","","Reference cycles event not available if 1.",13,[[],["bool",15]]],[11,"is_cache_ref_ev_unavailable","","Last-level cache reference event not available if 1.",13,[[],["bool",15]]],[11,"is_ll_cache_miss_ev_unavailable","","Last-level cache misses event not available if 1.",13,[[],["bool",15]]],[11,"is_branch_inst_ret_ev_unavailable","","Branch instruction retired event not available if 1.",13,[[],["bool",15]]],[11,"is_branch_midpred_ev_unavailable","","Branch mispredict retired event not available if 1.",13,[[],["bool",15]]],[3,"ExtendedTopologyIter","","Iterates over the system topology in order to retrieve …",null,null],[3,"ExtendedTopologyLevel","","Gives detailed information about the current level in the …",null,null],[11,"processors","","Number of logical processors at this level type. The …",14,[[],["u16",15]]],[11,"level_number","","Level number.",14,[[],["u8",15]]],[11,"level_type","","",14,[[],["topologytype",4]]],[11,"x2apic_id","","x2APIC ID the current logical processor. (Bits 31-00)",14,[[],["u32",15]]],[11,"shift_right_for_next_apic_id","","Number of bits to shift right on x2APIC ID to get a …",14,[[],["u32",15]]],[4,"TopologyType","","What type of core we have at this level in the topology …",null,null],[13,"Invalid","","",15,null],[13,"SMT","","Hyper-thread (Simultaneous multithreading)",15,null],[13,"Core","","",15,null],[3,"ExtendedStateInfo","","",null,null],[11,"xcr0_supports_legacy_x87","","Support for legacy x87 in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_sse_128","","Support for SSE 128-bit in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_avx_256","","Support for AVX 256-bit in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_mpx_bndregs","","Support for MPX BNDREGS in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_mpx_bndcsr","","Support for MPX BNDCSR in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_avx512_opmask","","Support for AVX512 OPMASK in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_avx512_zmm_hi256","","Support for AVX512 ZMM Hi256 XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_avx512_zmm_hi16","","Support for AVX512 ZMM Hi16 in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_pkru","","Support for PKRU in XCR0.",16,[[],["bool",15]]],[11,"ia32_xss_supports_pt","","Support for PT in IA32_XSS.",16,[[],["bool",15]]],[11,"ia32_xss_supports_hdc","","Support for HDC in IA32_XSS.",16,[[],["bool",15]]],[11,"xsave_area_size_enabled_features","","Maximum size (bytes, from the beginning of the …",16,[[],["u32",15]]],[11,"xsave_area_size_supported_features","","Maximum size (bytes, from the beginning of the …",16,[[],["u32",15]]],[11,"has_xsaveopt","","CPU has xsaveopt feature.",16,[[],["bool",15]]],[11,"has_xsavec","","Supports XSAVEC and the compacted form of XRSTOR if set.",16,[[],["bool",15]]],[11,"has_xgetbv","","Supports XGETBV with ECX = 1 if set.",16,[[],["bool",15]]],[11,"has_xsaves_xrstors","","Supports XSAVES/XRSTORS and IA32_XSS if set.",16,[[],["bool",15]]],[11,"xsave_size","","The size in bytes of the XSAVE area containing all states …",16,[[],["u32",15]]],[11,"iter","","Iterator over extended state enumeration levels >= 2.",16,[[],["extendedstateiter",3]]],[3,"ExtendedStateIter","","",null,null],[3,"ExtendedState","","",null,null],[12,"subleaf","","",17,null],[11,"size","","The size in bytes (from the offset specified in EBX) of …",17,[[],["u32",15]]],[11,"offset","","The offset in bytes of this extended state components …",17,[[],["u32",15]]],[11,"is_in_ia32_xss","","True if the bit n (corresponding to the sub-leaf index) …",17,[[],["bool",15]]],[11,"is_in_xcr0","","True if bit n is supported in XCR0.",17,[[],["bool",15]]],[11,"is_compacted_format","","Returns true when the compacted format of an XSAVE area …",17,[[],["bool",15]]],[3,"RdtMonitoringInfo","","",null,null],[11,"rmid_range","","Maximum range (zero-based) of RMID within this physical …",18,[[],["u32",15]]],[11,"has_l3_monitoring","","Supports L3 Cache Intel RDT Monitoring.",18,[[],["bool",15]]],[11,"l3_monitoring","","L3 Cache Monitoring.",18,[[],[["option",4],["l3monitoringinfo",3]]]],[3,"L3MonitoringInfo","","",null,null],[11,"conversion_factor","","Conversion factor from reported IA32_QM_CTR value to …",19,[[],["u32",15]]],[11,"maximum_rmid_range","","Maximum range (zero-based) of RMID of L3.",19,[[],["u32",15]]],[11,"has_occupancy_monitoring","","Supports occupancy monitoring.",19,[[],["bool",15]]],[11,"has_total_bandwidth_monitoring","","Supports total bandwidth monitoring.",19,[[],["bool",15]]],[11,"has_local_bandwidth_monitoring","","Supports local bandwidth monitoring.",19,[[],["bool",15]]],[3,"RdtAllocationInfo","","",null,null],[11,"has_l3_cat","","Supports L3 Cache Allocation.",20,[[],["bool",15]]],[11,"has_l2_cat","","Supports L2 Cache Allocation.",20,[[],["bool",15]]],[11,"has_memory_bandwidth_allocation","","Supports Memory Bandwidth Allocation.",20,[[],["bool",15]]],[11,"l3_cat","","L3 Cache Allocation Information.",20,[[],[["l3catinfo",3],["option",4]]]],[11,"l2_cat","","L2 Cache Allocation Information.",20,[[],[["option",4],["l2catinfo",3]]]],[11,"memory_bandwidth_allocation","","Memory Bandwidth Allocation Information.",20,[[],[["option",4],["membwallocationinfo",3]]]],[3,"L3CatInfo","","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX …",null,null],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",21,[[],["u8",15]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation …",21,[[],["u32",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",21,[[],["u16",15]]],[11,"has_code_data_prioritization","","Is Code and Data Prioritization Technology supported?",21,[[],["bool",15]]],[3,"L2CatInfo","","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX …",null,null],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",22,[[],["u8",15]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation …",22,[[],["u32",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",22,[[],["u16",15]]],[3,"MemBwAllocationInfo","","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX = …",null,null],[11,"max_hba_throttling","","Reports the maximum MBA throttling value supported for …",23,[[],["u16",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",23,[[],["u16",15]]],[11,"has_linear_response_delay","","Reports whether the response of the delay values is …",23,[[],["bool",15]]],[3,"SgxInfo","","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX = …",null,null],[11,"has_sgx1","","Has SGX1 support.",24,[[],["bool",15]]],[11,"has_sgx2","","Has SGX2 support.",24,[[],["bool",15]]],[11,"has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","","Supports ENCLV instruction leaves EINCVIRTCHILD, …",24,[[],["bool",15]]],[11,"has_encls_leaves_etrackc_erdinfo_eldbc_elduc","","Supports ENCLS instruction leaves ETRACKC, ERDINFO, …",24,[[],["bool",15]]],[11,"miscselect","","Bit vector of supported extended SGX features.",24,[[],["u32",15]]],[11,"max_enclave_size_non_64bit","","The maximum supported enclave size in non-64-bit mode is …",24,[[],["u8",15]]],[11,"max_enclave_size_64bit","","The maximum supported enclave size in 64-bit mode is …",24,[[],["u8",15]]],[11,"secs_attributes","","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …",24,[[]]],[11,"iter","","Iterator over SGX sub-leafs.",24,[[],["sgxsectioniter",3]]],[3,"SgxSectionIter","","Iterator over the SGX sub-leafs (ECX >= 2).",null,null],[4,"SgxSectionInfo","","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, …",null,null],[13,"Epc","","",25,null],[3,"EpcSection","","EBX:EAX and EDX:ECX provide information on the Enclave …",null,null],[11,"physical_base","","The physical address of the base of the EPC section",26,[[],["u64",15]]],[11,"size","","Size of the corresponding EPC section within the …",26,[[],["u64",15]]],[3,"ProcessorTraceInfo","","",null,null],[11,"has_rtit_cr3_match","","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be …",27,[[],["bool",15]]],[11,"has_configurable_psb_and_cycle_accurate_mode","","If true, Indicates support of Configurable PSB and …",27,[[],["bool",15]]],[11,"has_ip_tracestop_filtering","","If true, Indicates support of IP Filtering, TraceStop …",27,[[],["bool",15]]],[11,"has_mtc_timing_packet_coefi_suppression","","If true, Indicates support of MTC timing packet and …",27,[[],["bool",15]]],[11,"has_ptwrite","","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…",27,[[],["bool",15]]],[11,"has_power_event_trace","","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…",27,[[],["bool",15]]],[11,"has_topa","","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …",27,[[],["bool",15]]],[11,"has_topa_maximum_entries","","If true, ToPA tables can hold any number of output …",27,[[],["bool",15]]],[11,"has_single_range_output_scheme","","If true, Indicates support of Single-Range Output scheme.",27,[[],["bool",15]]],[11,"has_trace_transport_subsystem","","If true, Indicates support of output to Trace Transport …",27,[[],["bool",15]]],[11,"has_lip_with_cs_base","","If true, Generated packets which contain IP payloads have …",27,[[],["bool",15]]],[11,"configurable_address_ranges","","Number of configurable Address Ranges for filtering (Bits …",27,[[],["u8",15]]],[11,"supported_mtc_period_encodings","","Bitmap of supported MTC period encodings (Bit 31:16).",27,[[],["u16",15]]],[11,"supported_cycle_threshold_value_encodings","","Bitmap of supported Cycle Threshold value encodings (Bits …",27,[[],["u16",15]]],[11,"supported_psb_frequency_encodings","","Bitmap of supported Configurable PSB frequency encodings …",27,[[],["u16",15]]],[3,"TscInfo","","Time Stamp Counter and Nominal Core Crystal Clock …",null,null],[11,"denominator","","An unsigned integer which is the denominator of the …",28,[[],["u32",15]]],[11,"numerator","","An unsigned integer which is the numerator of the …",28,[[],["u32",15]]],[11,"nominal_frequency","","An unsigned integer which is the nominal frequency of the …",28,[[],["u32",15]]],[11,"tsc_frequency","","“TSC frequency” = “core crystal clock frequency” …",28,[[],[["u64",15],["option",4]]]],[3,"ProcessorFrequencyInfo","","Processor Frequency Information",null,null],[11,"processor_base_frequency","","Processor Base Frequency (in MHz).",29,[[],["u16",15]]],[11,"processor_max_frequency","","Maximum Frequency (in MHz).",29,[[],["u16",15]]],[11,"bus_frequency","","Bus (Reference) Frequency (in MHz).",29,[[],["u16",15]]],[3,"DatIter","","Deterministic Address Translation Structure Iterator",null,null],[3,"DatInfo","","Deterministic Address Translation Structure",null,null],[11,"has_4k_entries","","4K page size entries supported by this structure",30,[[],["bool",15]]],[11,"has_2mb_entries","","2MB page size entries supported by this structure",30,[[],["bool",15]]],[11,"has_4mb_entries","","4MB page size entries supported by this structure",30,[[],["bool",15]]],[11,"has_1gb_entries","","1GB page size entries supported by this structure",30,[[],["bool",15]]],[11,"is_fully_associative","","Fully associative structure",30,[[],["bool",15]]],[11,"partitioning","","Partitioning (0: Soft partitioning between the logical …",30,[[],["u8",15]]],[11,"ways","","Ways of associativity.",30,[[],["u16",15]]],[11,"sets","","Number of Sets.",30,[[],["u32",15]]],[11,"cache_type","","Translation cache type field.",30,[[],["dattype",4]]],[11,"cache_level","","Translation cache level (starts at 1)",30,[[],["u8",15]]],[11,"max_addressable_ids","","Maximum number of addressable IDs for logical processors …",30,[[],["u16",15]]],[4,"DatType","","Deterministic Address Translation cache type (EDX bits 04 …",null,null],[13,"Null","","Null (indicates this sub-leaf is not valid).",31,null],[13,"DataTLB","","",31,null],[13,"InstructionTLB","","",31,null],[13,"UnifiedTLB","","Some unified TLBs will allow a single TLB entry to …",31,null],[13,"Unknown","","",31,null],[3,"SoCVendorInfo","","",null,null],[11,"get_soc_vendor_id","","",32,[[],["u16",15]]],[11,"get_project_id","","",32,[[],["u32",15]]],[11,"get_stepping_id","","",32,[[],["u32",15]]],[11,"get_vendor_brand","","",32,[[],["socvendorbrand",3]]],[11,"get_vendor_attributes","","",32,[[],[["option",4],["socvendorattributesiter",3]]]],[3,"SoCVendorAttributesIter","","",null,null],[3,"SoCVendorBrand","","",null,null],[11,"as_string","","",33,[[],["str",15]]],[3,"HypervisorInfo","","Information about Hypervisor …",null,null],[4,"Hypervisor","","Identifies the different Hypervisor products.",null,null],[13,"Xen","","",34,null],[13,"VMware","","",34,null],[13,"HyperV","","",34,null],[13,"KVM","","",34,null],[13,"Unknown","","",34,null],[11,"identify","","",35,[[],["hypervisor",4]]],[11,"tsc_frequency","","TSC frequency in kHz.",35,[[],[["option",4],["u32",15]]]],[11,"apic_frequency","","(Virtual) Bus (local apic timer) frequency in kHz.",35,[[],[["option",4],["u32",15]]]],[3,"ExtendedFunctionInfo","","",null,null],[4,"L2Associativity","","",null,null],[13,"Disabled","","",36,null],[13,"DirectMapped","","",36,null],[13,"TwoWay","","",36,null],[13,"FourWay","","",36,null],[13,"EightWay","","",36,null],[13,"SixteenWay","","",36,null],[13,"FullyAssiciative","","",36,null],[13,"Unknown","","",36,null],[11,"processor_brand_string","","Retrieve processor brand string.",37,[[],[["option",4],["str",15]]]],[11,"extended_signature","","Extended Processor Signature and Feature Bits.",37,[[],[["option",4],["u32",15]]]],[11,"cache_line_size","","Cache Line size in bytes",37,[[],[["option",4],["u8",15]]]],[11,"l2_associativity","","L2 Associativity field",37,[[],[["l2associativity",4],["option",4]]]],[11,"cache_size","","Cache size in 1K units",37,[[],[["option",4],["u16",15]]]],[11,"physical_address_bits","","#Physical Address Bits",37,[[],[["option",4],["u8",15]]]],[11,"linear_address_bits","","#Linear Address Bits",37,[[],[["option",4],["u8",15]]]],[11,"has_invariant_tsc","","Is Invariant TSC available?",37,[[],["bool",15]]],[11,"has_lahf_sahf","","Is LAHF/SAHF available in 64-bit mode?",37,[[],["bool",15]]],[11,"has_lzcnt","","Is LZCNT available?",37,[[],["bool",15]]],[11,"has_prefetchw","","Is PREFETCHW available?",37,[[],["bool",15]]],[11,"has_syscall_sysret","","Are fast system calls available.",37,[[],["bool",15]]],[11,"has_execute_disable","","Is there support for execute disable bit.",37,[[],["bool",15]]],[11,"has_1gib_pages","","Is there support for 1GiB pages.",37,[[],["bool",15]]],[11,"has_rdtscp","","Check support for rdtscp instruction.",37,[[],["bool",15]]],[11,"has_64bit_mode","","Check support for 64-bit mode.",37,[[],["bool",15]]],[3,"MemoryEncryptionInfo","","",null,null],[11,"has_sme","","Secure Memory Encryption is supported if set.",38,[[],["bool",15]]],[11,"has_sev","","Secure Encrypted Virtualization is supported if set.",38,[[],["bool",15]]],[11,"has_page_flush_msr","","The Page Flush MSR is available if set.",38,[[],["bool",15]]],[11,"has_sev_es","","SEV Encrypted State is supported if set.",38,[[],["bool",15]]],[11,"physical_address_reduction","","",38,[[],["u8",15]]],[11,"c_bit_position","","",38,[[],["u8",15]]],[11,"max_encrypted_guests","","",38,[[],["u32",15]]],[11,"min_sev_no_es_asid","","",38,[[],["u32",15]]],[14,"cpuid","","Macro which queries cpuid directly.",null,null],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"into_iter","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"into_iter","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"into_iter","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"into_iter","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"into_iter","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"into_iter","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"into_iter","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"eq","","",7,[[["cachetype",4]],["bool",15]]],[11,"eq","","",15,[[["topologytype",4]],["bool",15]]],[11,"eq","","",34,[[["hypervisor",4]],["bool",15]]],[11,"ne","","",34,[[["hypervisor",4]],["bool",15]]],[11,"eq","","",36,[[["l2associativity",4]],["bool",15]]],[11,"next","","Iterate over all cache information.",39,[[],[["cacheinfo",3],["option",4]]]],[11,"next","","Iterate over all caches for this CPU. Note: cpuid is …",40,[[],[["cacheparameter",3],["option",4]]]],[11,"next","","",41,[[],[["extendedtopologylevel",3],["option",4]]]],[11,"next","","",42,[[],[["extendedstate",3],["option",4]]]],[11,"next","","",43,[[],[["sgxsectioninfo",4],["option",4]]]],[11,"next","","Iterate over each sub-leaf with an  address translation …",44,[[],[["option",4],["datinfo",3]]]],[11,"next","","Iterate over all SoC vendor specific attributes.",45,[[],[["option",4],["cpuidresult",3]]]],[11,"clone","","",0,[[],["cpuidresult",3]]],[11,"clone","","",3,[[],["cacheinfotype",4]]],[11,"clone","","",4,[[],["cacheinfo",3]]],[11,"clone","","",8,[[],["cacheparameter",3]]],[11,"default","","",1,[[],["cpuid",3]]],[11,"default","","",0,[[],["cpuidresult",3]]],[11,"default","","",2,[[],["vendorinfo",3]]],[11,"default","","",39,[[],["cacheinfoiter",3]]],[11,"default","","",3,[[],["cacheinfotype",4]]],[11,"default","","",4,[[],["cacheinfo",3]]],[11,"default","","",5,[[],["processorserial",3]]],[11,"default","","",6,[[],["featureinfo",3]]],[11,"default","","",40,[[],["cacheparametersiter",3]]],[11,"default","","",8,[[],["cacheparameter",3]]],[11,"default","","",7,[[],["cachetype",4]]],[11,"default","","",9,[[],["monitormwaitinfo",3]]],[11,"default","","",10,[[],["thermalpowerinfo",3]]],[11,"default","","",11,[[],["extendedfeatures",3]]],[11,"default","","",12,[[],["directcacheaccessinfo",3]]],[11,"default","","",13,[[],["performancemonitoringinfo",3]]],[11,"default","","",41,[[],["extendedtopologyiter",3]]],[11,"default","","",14,[[],["extendedtopologylevel",3]]],[11,"default","","",15,[[],["topologytype",4]]],[11,"default","","",16,[[],["extendedstateinfo",3]]],[11,"default","","",42,[[],["extendedstateiter",3]]],[11,"default","","",17,[[],["extendedstate",3]]],[11,"default","","",18,[[],["rdtmonitoringinfo",3]]],[11,"default","","",19,[[],["l3monitoringinfo",3]]],[11,"default","","",20,[[],["rdtallocationinfo",3]]],[11,"default","","",21,[[],["l3catinfo",3]]],[11,"default","","",22,[[],["l2catinfo",3]]],[11,"default","","",23,[[],["membwallocationinfo",3]]],[11,"default","","",24,[[],["sgxinfo",3]]],[11,"default","","",43,[[],["sgxsectioniter",3]]],[11,"default","","",25,[[],["sgxsectioninfo",4]]],[11,"default","","",26,[[],["epcsection",3]]],[11,"default","","",27,[[],["processortraceinfo",3]]],[11,"default","","",28,[[],["tscinfo",3]]],[11,"default","","",29,[[],["processorfrequencyinfo",3]]],[11,"default","","",44,[[],["datiter",3]]],[11,"default","","",30,[[],["datinfo",3]]],[11,"default","","",31,[[],["dattype",4]]],[11,"default","","",32,[[],["socvendorinfo",3]]],[11,"default","","",45,[[],["socvendorattributesiter",3]]],[11,"default","","",33,[[],["socvendorbrand",3]]],[11,"default","","",37,[[],["extendedfunctioninfo",3]]],[11,"default","","",36,[[],["l2associativity",4]]],[11,"default","","",38,[[],["memoryencryptioninfo",3]]]],"p":[[3,"CpuIdResult"],[3,"CpuId"],[3,"VendorInfo"],[4,"CacheInfoType"],[3,"CacheInfo"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[4,"CacheType"],[3,"CacheParameter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyLevel"],[4,"TopologyType"],[3,"ExtendedStateInfo"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[4,"SgxSectionInfo"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatInfo"],[4,"DatType"],[3,"SoCVendorInfo"],[3,"SoCVendorBrand"],[4,"Hypervisor"],[3,"HypervisorInfo"],[4,"L2Associativity"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"],[3,"CacheInfoIter"],[3,"CacheParametersIter"],[3,"ExtendedTopologyIter"],[3,"ExtendedStateIter"],[3,"SgxSectionIter"],[3,"DatIter"],[3,"SoCVendorAttributesIter"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out …","i":[[8,"Strategy","scopeguard","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return <code>true</code> if the guard’s associated code should run …",0,[[],["bool",15]]],[4,"Always","","Always run on scope exit.",null,null],[3,"ScopeGuard","","<code>ScopeGuard</code> is a scope guard that may own a protected …",null,null],[11,"with_strategy","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through …",1,[[],["scopeguard",3]]],[11,"into_inner","","“Defuse” the guard and extract the value without …",1,[[]]],[5,"guard","","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred …",null,[[],[["scopeguard",3],["always",4]]]],[14,"defer","","Macro to create a <code>ScopeGuard</code> (always run).",null,null],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"should_run","","",2,[[],["bool",15]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]},\
"x86":{"doc":"","i":[[0,"bits16","x86","Data structures and functions used by 16-bit mode.",null,null],[0,"segmentation","x86::bits16","",null,null],[0,"bits32","x86","Data structures and functions used by 32-bit mode.",null,null],[0,"eflags","x86::bits32","Processor state stored in the EFLAGS register.",null,null],[3,"EFlags","x86::bits32::eflags","The EFLAGS register.",null,null],[18,"FLAGS_ID","","ID Flag (ID)",0,null],[18,"FLAGS_VIP","","Virtual Interrupt Pending (VIP)",0,null],[18,"FLAGS_VIF","","Virtual Interrupt Flag (VIF)",0,null],[18,"FLAGS_AC","","Alignment Check (AC)",0,null],[18,"FLAGS_VM","","Virtual-8086 Mode (VM)",0,null],[18,"FLAGS_RF","","Resume Flag (RF)",0,null],[18,"FLAGS_NT","","Nested Task (NT)",0,null],[18,"FLAGS_IOPL0","","I/O Privilege Level (IOPL) 0",0,null],[18,"FLAGS_IOPL1","","I/O Privilege Level (IOPL) 1",0,null],[18,"FLAGS_IOPL2","","I/O Privilege Level (IOPL) 2",0,null],[18,"FLAGS_IOPL3","","I/O Privilege Level (IOPL) 3",0,null],[18,"FLAGS_OF","","Overflow Flag (OF)",0,null],[18,"FLAGS_DF","","Direction Flag (DF)",0,null],[18,"FLAGS_IF","","Interrupt Enable Flag (IF)",0,null],[18,"FLAGS_TF","","Trap Flag (TF)",0,null],[18,"FLAGS_SF","","Sign Flag (SF)",0,null],[18,"FLAGS_ZF","","Zero Flag (ZF)",0,null],[18,"FLAGS_AF","","Auxiliary Carry Flag (AF)",0,null],[18,"FLAGS_PF","","Parity Flag (PF)",0,null],[18,"FLAGS_A1","","Bit 1 is always 1.",0,null],[18,"FLAGS_CF","","Carry Flag (CF)",0,null],[11,"empty","","Returns an empty set of flags",0,[[],["eflags",3]]],[11,"all","","Returns the set containing all flags.",0,[[],["eflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",0,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",0,[[["u32",15]],[["option",4],["eflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",0,[[["u32",15]],["eflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",0,[[["u32",15]],["eflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",0,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",0,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",0,[[["eflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",0,[[["eflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",0,[[["eflags",3]]]],[11,"remove","","Removes the specified flags in-place.",0,[[["eflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",0,[[["eflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",0,[[["bool",15],["eflags",3]]]],[11,"new","","Creates a new Flags entry. Ensures bit 1 is set.",0,[[],["eflags",3]]],[11,"from_priv","","Creates a new Flags with the given I/O privilege level.",0,[[["ring",4]],["eflags",3]]],[5,"clac","","Clears the AC flag bit in EFLAGS register.",null,[[]]],[5,"stac","","Sets the AC flag bit in EFLAGS register.",null,[[]]],[0,"segmentation","x86::bits32","",null,null],[0,"task","","Helpers to program the task state segment. See Intel 3a, …",null,null],[3,"TaskStateSegment","x86::bits32::task","",null,null],[12,"link","","",1,null],[12,"esp0","","",1,null],[12,"ss0","","",1,null],[12,"esp1","","",1,null],[12,"ss1","","",1,null],[12,"esp2","","",1,null],[12,"ss2","","",1,null],[12,"cr3","","",1,null],[12,"eip","","",1,null],[12,"eflags","","",1,null],[12,"eax","","",1,null],[12,"ecx","","",1,null],[12,"edx","","",1,null],[12,"ebx","","",1,null],[12,"esp","","",1,null],[12,"ebp","","",1,null],[12,"esi","","",1,null],[12,"edi","","",1,null],[12,"es","","",1,null],[12,"cs","","",1,null],[12,"ss","","",1,null],[12,"ds","","",1,null],[12,"fs","","",1,null],[12,"gs","","",1,null],[12,"ldtr","","",1,null],[12,"iobp_offset","","",1,null],[11,"new","","",1,[[],["taskstatesegment",3]]],[0,"bits64","x86","Data structures and functions used by IA-32e but not …",null,null],[0,"paging","x86::bits64","Description of the data-structures for IA-32e paging mode.",null,null],[3,"PAddr","x86::bits64::paging","A wrapper for a physical address.",null,null],[12,"0","","",2,null],[11,"as_u64","","Convert to <code>u64</code>",2,[[],["u64",15]]],[11,"as_usize","","Convert to <code>usize</code>",2,[[],["usize",15]]],[11,"zero","","Physical Address zero.",2,[[]]],[11,"is_zero","","Is zero?",2,[[],["bool",15]]],[11,"base_page_offset","","Offset within the 4 KiB page.",2,[[],["u64",15]]],[11,"large_page_offset","","Offset within the 2 MiB page.",2,[[],["u64",15]]],[11,"huge_page_offset","","Offset within the 1 GiB page.",2,[[],["u64",15]]],[11,"align_down_to_base_page","","Return address of nearest 4 KiB page (lower or equal than …",2,[[]]],[11,"align_down_to_large_page","","Return address of nearest 2 MiB page (lower or equal than …",2,[[]]],[11,"align_down_to_huge_page","","Return address of nearest 1 GiB page (lower or equal than …",2,[[]]],[11,"align_up_to_base_page","","Return address of nearest 4 KiB page (higher or equal …",2,[[]]],[11,"align_up_to_large_page","","Return address of nearest 2 MiB page (higher or equal …",2,[[]]],[11,"align_up_to_huge_page","","Return address of nearest 1 GiB page (higher or equal …",2,[[]]],[11,"is_base_page_aligned","","Is this address aligned to a 4 KiB page?",2,[[],["bool",15]]],[11,"is_large_page_aligned","","Is this address aligned to a 2 MiB page?",2,[[],["bool",15]]],[11,"is_huge_page_aligned","","Is this address aligned to a 1 GiB page?",2,[[],["bool",15]]],[11,"is_aligned","","Is this address aligned to <code>align</code>?",2,[[],["bool",15]]],[3,"VAddr","","A wrapper for a virtual address.",null,null],[12,"0","","",3,null],[11,"from_u64","","Convert from <code>u64</code>",3,[[["u64",15]]]],[11,"from_usize","","Convert from <code>usize</code>",3,[[["usize",15]]]],[11,"as_u64","","Convert to <code>u64</code>",3,[[],["u64",15]]],[11,"as_usize","","Convert to <code>usize</code>",3,[[],["usize",15]]],[11,"as_mut_ptr","","Convert to mutable pointer.",3,[[]]],[11,"as_ptr","","Convert to pointer.",3,[[]]],[11,"zero","","Physical Address zero.",3,[[]]],[11,"is_zero","","Is zero?",3,[[],["bool",15]]],[11,"base_page_offset","","Offset within the 4 KiB page.",3,[[],["u64",15]]],[11,"large_page_offset","","Offset within the 2 MiB page.",3,[[],["u64",15]]],[11,"huge_page_offset","","Offset within the 1 GiB page.",3,[[],["u64",15]]],[11,"align_down_to_base_page","","Return address of nearest 4 KiB page (lower or equal than …",3,[[]]],[11,"align_down_to_large_page","","Return address of nearest 2 MiB page (lower or equal than …",3,[[]]],[11,"align_down_to_huge_page","","Return address of nearest 1 GiB page (lower or equal than …",3,[[]]],[11,"align_up_to_base_page","","Return address of nearest 4 KiB page (higher or equal …",3,[[]]],[11,"align_up_to_large_page","","Return address of nearest 2 MiB page (higher or equal …",3,[[]]],[11,"align_up_to_huge_page","","Return address of nearest 1 GiB page (higher or equal …",3,[[]]],[11,"is_base_page_aligned","","Is this address aligned to a 4 KiB page?",3,[[],["bool",15]]],[11,"is_large_page_aligned","","Is this address aligned to a 2 MiB page?",3,[[],["bool",15]]],[11,"is_huge_page_aligned","","Is this address aligned to a 1 GiB page?",3,[[],["bool",15]]],[11,"is_aligned","","Is this address aligned to <code>align</code>?",3,[[],["bool",15]]],[17,"BASE_PAGE_SHIFT","","Log2 of base page size (12 bits).",null,null],[17,"BASE_PAGE_SIZE","","Size of a base page (4 KiB)",null,null],[17,"LARGE_PAGE_SIZE","","Size of a large page (2 MiB)",null,null],[17,"HUGE_PAGE_SIZE","","Size of a huge page (1 GiB)",null,null],[17,"PML4_SLOT_SIZE","","Size of a region covered by a PML4 Entry (512 GiB)",null,null],[17,"CACHE_LINE_SIZE","","Size of a cache-line",null,null],[3,"Page","","A type wrapping a base page with a 4 KiB buffer.",null,null],[3,"LargePage","","A type wrapping a large page with a 2 MiB buffer.",null,null],[3,"HugePage","","A type wrapping a huge page with a 1 GiB buffer.",null,null],[17,"MAXPHYADDR","","MAXPHYADDR, which is at most 52; (use CPUID for finding …",null,null],[17,"PAGE_SIZE_ENTRIES","","Page tables have 512 = 4096 / 64 entries.",null,null],[6,"PML4","","A PML4 table.",null,null],[6,"PDPT","","A page directory pointer table.",null,null],[6,"PD","","A page directory.",null,null],[6,"PT","","A page table.",null,null],[5,"pml4_index","","Given virtual address calculate corresponding entry in …",null,[[["vaddr",3]],["usize",15]]],[5,"pdpt_index","","Given virtual address calculate corresponding entry in …",null,[[["vaddr",3]],["usize",15]]],[5,"pd_index","","Given virtual address calculate corresponding entry in PD.",null,[[["vaddr",3]],["usize",15]]],[5,"pt_index","","Given virtual address calculate corresponding entry in PT.",null,[[["vaddr",3]],["usize",15]]],[3,"PML4Flags","","PML4 configuration bit description.",null,null],[18,"P","","Present; must be 1 to reference a page-directory-pointer …",4,null],[18,"RW","","Read/write; if 0, writes may not be allowed to the …",4,null],[18,"US","","User/supervisor; if 0, user-mode accesses are not allowed …",4,null],[18,"PWT","","Page-level write-through; indirectly determines the …",4,null],[18,"PCD","","Page-level cache disable; indirectly determines the …",4,null],[18,"A","","Accessed; indicates whether this entry has been used for …",4,null],[18,"XD","","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …",4,null],[11,"empty","","Returns an empty set of flags",4,[[],["pml4flags",3]]],[11,"all","","Returns the set containing all flags.",4,[[],["pml4flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",4,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",4,[[["u64",15]],[["pml4flags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",4,[[["u64",15]],["pml4flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",4,[[["u64",15]],["pml4flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",4,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",4,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",4,[[["pml4flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",4,[[["pml4flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",4,[[["pml4flags",3]]]],[11,"remove","","Removes the specified flags in-place.",4,[[["pml4flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",4,[[["pml4flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",4,[[["pml4flags",3],["bool",15]]]],[3,"PML4Entry","","A PML4 Entry consists of an address and a bunch of flags.",null,null],[12,"0","","",5,null],[11,"new","","Creates a new PML4Entry.",5,[[["paddr",3],["pml4flags",3]],["pml4entry",3]]],[11,"address","","Retrieves the physical address in this entry.",5,[[],["paddr",3]]],[11,"flags","","",5,[[],["pml4flags",3]]],[11,"is_present","","Is page present?",5,[[],["bool",15]]],[11,"is_writeable","","Read/write; if 0, writes may not be allowed to the …",5,[[],["bool",15]]],[11,"is_user_mode_allowed","","User/supervisor; if 0, user-mode accesses are not allowed …",5,[[],["bool",15]]],[11,"is_page_write_through","","Page-level write-through; indirectly determines the …",5,[[],["bool",15]]],[11,"is_page_level_cache_disabled","","Page-level cache disable; indirectly determines the …",5,[[],["bool",15]]],[11,"is_accessed","","Accessed; indicates whether this entry has been used for …",5,[[],["bool",15]]],[11,"is_instruction_fetching_disabled","","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …",5,[[],["bool",15]]],[3,"PDPTFlags","","PDPT configuration bit description.",null,null],[18,"P","","Present; must be 1 to map a 1-GByte page or reference a …",6,null],[18,"RW","","Read/write; if 0, writes may not be allowed to the …",6,null],[18,"US","","User/supervisor; user-mode accesses are not allowed to …",6,null],[18,"PWT","","Page-level write-through.",6,null],[18,"PCD","","Page-level cache disable.",6,null],[18,"A","","Accessed; if PS set indicates whether software has …",6,null],[18,"D","","Dirty; if PS indicates whether software has written to …",6,null],[18,"PS","","Page size; if set this entry maps a 1-GByte page; …",6,null],[18,"G","","Global; if PS && CR4.PGE = 1, determines whether the …",6,null],[18,"PAT","","Indirectly determines the memory type used to access the …",6,null],[18,"XD","","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …",6,null],[11,"empty","","Returns an empty set of flags",6,[[],["pdptflags",3]]],[11,"all","","Returns the set containing all flags.",6,[[],["pdptflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",6,[[["u64",15]],[["pdptflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",6,[[["u64",15]],["pdptflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",6,[[["u64",15]],["pdptflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",6,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",6,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",6,[[["pdptflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",6,[[["pdptflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["pdptflags",3]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["pdptflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["pdptflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",6,[[["bool",15],["pdptflags",3]]]],[3,"PDPTEntry","","A PDPT Entry consists of an address and a bunch of flags.",null,null],[12,"0","","",7,null],[11,"new","","Creates a new PDPTEntry.",7,[[["paddr",3],["pdptflags",3]],["pdptentry",3]]],[11,"address","","Retrieves the physical address in this entry.",7,[[],["paddr",3]]],[11,"flags","","Returns the flags corresponding to this entry.",7,[[],["pdptflags",3]]],[11,"is_present","","Is page present?",7,[[],["bool",15]]],[11,"is_writeable","","Read/write; if 0, writes may not be allowed to the …",7,[[],["bool",15]]],[11,"is_user_mode_allowed","","User/supervisor; user-mode accesses are not allowed to …",7,[[],["bool",15]]],[11,"is_page_write_through","","Page-level write-through.",7,[[],["bool",15]]],[11,"is_page_level_cache_disabled","","Page-level cache disable.",7,[[],["bool",15]]],[11,"is_accessed","","Accessed; indicates whether this entry has been used for …",7,[[],["bool",15]]],[11,"is_pat","","Indirectly determines the memory type used to access the …",7,[[],["bool",15]]],[11,"is_instruction_fetching_disabled","","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …",7,[[],["bool",15]]],[11,"is_page","","Page size; if set this entry maps a 1-GByte page; …",7,[[],["bool",15]]],[3,"PDFlags","","PD configuration bits description.",null,null],[18,"P","","Present; must be 1 to map a 2-MByte page or reference a …",8,null],[18,"RW","","Read/write; if 0, writes may not be allowed to the …",8,null],[18,"US","","User/supervisor; user-mode accesses are not allowed to …",8,null],[18,"PWT","","Page-level write-through.",8,null],[18,"PCD","","Page-level cache disable.",8,null],[18,"A","","Accessed; if PS set indicates whether software has …",8,null],[18,"D","","Dirty; if PS indicates whether software has written to …",8,null],[18,"PS","","Page size; if set this entry maps a 2-MByte page; …",8,null],[18,"G","","Global; if PS && CR4.PGE = 1, determines whether the …",8,null],[18,"PAT","","Indirectly determines the memory type used to access the …",8,null],[18,"XD","","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …",8,null],[11,"empty","","Returns an empty set of flags",8,[[],["pdflags",3]]],[11,"all","","Returns the set containing all flags.",8,[[],["pdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",8,[[["u64",15]],[["option",4],["pdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",8,[[["u64",15]],["pdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",8,[[["u64",15]],["pdflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",8,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",8,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",8,[[["pdflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",8,[[["pdflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["pdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["pdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["pdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",8,[[["bool",15],["pdflags",3]]]],[3,"PDEntry","","A PD Entry consists of an address and a bunch of flags.",null,null],[12,"0","","",9,null],[11,"new","","Creates a new PDEntry.",9,[[["paddr",3],["pdflags",3]],["pdentry",3]]],[11,"address","","Retrieves the physical address in this entry.",9,[[],["paddr",3]]],[11,"flags","","Returns the flags corresponding to this entry.",9,[[],["pdflags",3]]],[11,"is_present","","Present; must be 1 to map a 2-MByte page or reference a …",9,[[],["bool",15]]],[11,"is_writeable","","Read/write; if 0, writes may not be allowed to the …",9,[[],["bool",15]]],[11,"is_user_mode_allowed","","User/supervisor; user-mode accesses are not allowed to …",9,[[],["bool",15]]],[11,"is_page_write_through","","Page-level write-through.",9,[[],["bool",15]]],[11,"is_page_level_cache_disabled","","Page-level cache disable.",9,[[],["bool",15]]],[11,"is_accessed","","Accessed; if PS set indicates whether software has …",9,[[],["bool",15]]],[11,"is_dirty","","Dirty; if PS set indicates whether software has written …",9,[[],["bool",15]]],[11,"is_page","","Page size; if set this entry maps a 2-MByte page; …",9,[[],["bool",15]]],[11,"is_global","","Global; if PS && CR4.PGE = 1, determines whether the …",9,[[],["bool",15]]],[11,"is_pat","","Indirectly determines the memory type used to access the …",9,[[],["bool",15]]],[11,"is_instruction_fetching_disabled","","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …",9,[[],["bool",15]]],[3,"PTFlags","","PT Entry bits description.",null,null],[18,"P","","Present; must be 1 to map a 4-KByte page.",10,null],[18,"RW","","Read/write; if 0, writes may not be allowed to the …",10,null],[18,"US","","User/supervisor; user-mode accesses are not allowed to …",10,null],[18,"PWT","","Page-level write-through.",10,null],[18,"PCD","","Page-level cache disable.",10,null],[18,"A","","Accessed; indicates whether software has accessed the …",10,null],[18,"D","","Dirty; indicates whether software has written to the …",10,null],[18,"G","","Global; if CR4.PGE = 1, determines whether the …",10,null],[18,"XD","","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["ptflags",3]]],[11,"all","","Returns the set containing all flags.",10,[[],["ptflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",10,[[["u64",15]],[["ptflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",10,[[["u64",15]],["ptflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[["u64",15]],["ptflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",10,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",10,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",10,[[["ptflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",10,[[["ptflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["ptflags",3]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["ptflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["ptflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",10,[[["bool",15],["ptflags",3]]]],[3,"PTEntry","","A PT Entry consists of an address and a bunch of flags.",null,null],[12,"0","","",11,null],[11,"new","","Creates a new PTEntry.",11,[[["paddr",3],["ptflags",3]],["ptentry",3]]],[11,"address","","Retrieves the physical address in this entry.",11,[[],["paddr",3]]],[11,"flags","","Returns the flags corresponding to this entry.",11,[[],["ptflags",3]]],[11,"is_present","","Present; must be 1 to map a 4-KByte page or reference a …",11,[[],["bool",15]]],[11,"is_writeable","","Read/write; if 0, writes may not be allowed to the …",11,[[],["bool",15]]],[11,"is_user_mode_allowed","","User/supervisor; user-mode accesses are not allowed to …",11,[[],["bool",15]]],[11,"is_page_write_through","","Page-level write-through.",11,[[],["bool",15]]],[11,"is_page_level_cache_disabled","","Page-level cache disable.",11,[[],["bool",15]]],[11,"is_accessed","","Accessed; if PS set indicates whether software has …",11,[[],["bool",15]]],[11,"is_dirty","","Dirty; if PD_PS set indicates whether software has …",11,[[],["bool",15]]],[11,"is_global","","Global; if PS && CR4.PGE = 1, determines whether the …",11,[[],["bool",15]]],[11,"is_instruction_fetching_disabled","","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …",11,[[],["bool",15]]],[0,"registers","x86::bits64","",null,null],[5,"rip","x86::bits64::registers","Read the RIP register (instruction pointer).",null,[[],["u64",15]]],[5,"rsp","","Read the RSP register (stack pointer register).",null,[[],["u64",15]]],[5,"rbp","","Read the RBP register (base pointer register).",null,[[],["u64",15]]],[0,"rflags","x86::bits64","Processor state stored in the RFLAGS register.",null,null],[3,"RFlags","x86::bits64::rflags","The RFLAGS register. This is duplicated code from bits32 …",null,null],[18,"FLAGS_ID","","ID Flag (ID)",12,null],[18,"FLAGS_VIP","","Virtual Interrupt Pending (VIP)",12,null],[18,"FLAGS_VIF","","Virtual Interrupt Flag (VIF)",12,null],[18,"FLAGS_AC","","Alignment Check (AC)",12,null],[18,"FLAGS_VM","","Virtual-8086 Mode (VM)",12,null],[18,"FLAGS_RF","","Resume Flag (RF)",12,null],[18,"FLAGS_NT","","Nested Task (NT)",12,null],[18,"FLAGS_IOPL0","","I/O Privilege Level (IOPL) 0",12,null],[18,"FLAGS_IOPL1","","I/O Privilege Level (IOPL) 1",12,null],[18,"FLAGS_IOPL2","","I/O Privilege Level (IOPL) 2",12,null],[18,"FLAGS_IOPL3","","I/O Privilege Level (IOPL) 3",12,null],[18,"FLAGS_OF","","Overflow Flag (OF)",12,null],[18,"FLAGS_DF","","Direction Flag (DF)",12,null],[18,"FLAGS_IF","","Interrupt Enable Flag (IF)",12,null],[18,"FLAGS_TF","","Trap Flag (TF)",12,null],[18,"FLAGS_SF","","Sign Flag (SF)",12,null],[18,"FLAGS_ZF","","Zero Flag (ZF)",12,null],[18,"FLAGS_AF","","Auxiliary Carry Flag (AF)",12,null],[18,"FLAGS_PF","","Parity Flag (PF)",12,null],[18,"FLAGS_A1","","Bit 1 is always 1.",12,null],[18,"FLAGS_CF","","Carry Flag (CF)",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["rflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["rflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",12,[[["u64",15]],[["rflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",12,[[["u64",15]],["rflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["u64",15]],["rflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",12,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",12,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",12,[[["rflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",12,[[["rflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["rflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["rflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["rflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",12,[[["rflags",3],["bool",15]]]],[11,"new","","Creates a new Flags entry. Ensures bit 1 is set.",12,[[],["rflags",3]]],[11,"from_priv","","Creates a new Flags with the given I/O privilege level.",12,[[["ring",4]],["rflags",3]]],[11,"from_raw","","",12,[[["u64",15]],["rflags",3]]],[5,"read","","",null,[[],["rflags",3]]],[5,"set","","",null,[[["rflags",3]]]],[0,"segmentation","x86::bits64","",null,null],[3,"Descriptor64","x86::bits64::segmentation","Entry for IDT, GDT or LDT.",null,null],[18,"NULL","","",13,null],[11,"set_base_limit","","Create a new segment, TSS or LDT descriptor by setting …",13,[[["u64",15]]]],[11,"set_selector_offset","","Creates a new descriptor with selector and offset (for …",13,[[["u64",15],["segmentselector",3]]]],[11,"set_ist","","Sets the interrupt stack table index. The 3-bit IST index …",13,[[["u8",15]]]],[5,"load_cs","","Reload code segment register. Note this is special since …",null,[[["segmentselector",3]]]],[5,"wrgsbase","","Write GS Segment Base Needs FSGSBASE-Enable Bit (bit 16 …",null,[[["u64",15]]]],[5,"wrfsbase","","Write FS Segment Base Needs FSGSBASE-Enable Bit (bit 16 …",null,[[["u64",15]]]],[5,"rdgsbase","","Read GS Segment Base Needs FSGSBASE-Enable Bit (bit 16 of …",null,[[],["u64",15]]],[5,"rdfsbase","","Read FS Segment Base Needs FSGSBASE-Enable Bit (bit 16 of …",null,[[],["u64",15]]],[5,"fs_deref","","\\\"Dereferences\\\" the fs register at offset 0.",null,[[],["u64",15]]],[5,"gs_deref","","\\\"Dereferences\\\" the gs register at offset 0.",null,[[],["u64",15]]],[5,"swapgs","","Swap the GS register.",null,[[]]],[0,"sgx","x86::bits64","Program x86 enclaves.",null,null],[5,"encls_eadd","x86::bits64::sgx","Add a Page to an Uninitialized Enclave.",null,[[["u64",15]]]],[5,"encls_eaug","","Add a Page to an Initialized Enclave.",null,[[["u64",15]]]],[5,"encls_eblock","","Mark a page in EPC as Blocked.",null,[[["u64",15]],["u32",15]]],[5,"encls_create","","Create an SECS page in the Enclave Page Cache",null,[[["u64",15]]]],[5,"encls_edbgrd","","Read From a Debug Enclave.",null,[[["u64",15]],["u64",15]]],[5,"encls_edbgwr","","Write to a Debug Enclave.",null,[[["u64",15]]]],[5,"encls_eextend","","Extend Uninitialized Enclave Measurement by 256 Bytes",null,[[["u64",15]]]],[5,"encls_einit","","Initialize an Enclave for Execution",null,[[["u64",15]],["u32",15]]],[5,"encls_eldb","","Loads and verifies an EPC page and marks the page as …",null,[[["u64",15]],["u32",15]]],[5,"encls_eldu","","Loads, verifies an EPC page and marks the page as …",null,[[["u64",15]],["u32",15]]],[5,"encls_emodpr","","Restrict the Permissions of an EPC Page.",null,[[["u64",15]],["u32",15]]],[5,"encls_emodt","","Change the Type of an EPC Page.",null,[[["u64",15]],["u32",15]]],[5,"encls_epa","","Add Version Array.",null,[[["u64",15]]]],[5,"encls_eremove","","Remove a page from the EPC.",null,[[["u64",15]]]],[5,"encls_etrack","","Activates EBLOCK Checks.",null,[[["u64",15]],["u32",15]]],[5,"encls_ewb","","Invalidate an EPC Page and Write out to Main Memory.",null,[[["u64",15]],["u32",15]]],[5,"enclu_eaccept","","Accept Changes to an EPC Page.",null,[[["u64",15]],["u32",15]]],[5,"enclu_eacceptcopy","","Initialize a Pending Page.",null,[[["u64",15]],["u32",15]]],[5,"enclu_eenter","","Enters an Enclave.",null,[[["u64",15]]]],[5,"enclu_eexit","","Exits an Enclave.",null,[[["u64",15]]]],[5,"enclu_egetkey","","Retrieves a Cryptographic Key.",null,[[["u64",15]]]],[5,"enclu_emodepe","","Extend an EPC Page Permissions.",null,[[["u64",15]]]],[5,"enclu_ereport","","Create a Cryptographic Report of the Enclave.",null,[[["u64",15]]]],[5,"enclu_eresume","","Re-Enters an Enclave.",null,[[["u64",15]]]],[0,"syscall","x86::bits64","Invokes an OS system-call handler at privilege level 0.",null,null],[5,"syscall0","x86::bits64::syscall","",null,[[["u64",15]],["u64",15]]],[5,"syscall1","","",null,[[["u64",15]],["u64",15]]],[5,"syscall2","","",null,[[["u64",15]],["u64",15]]],[5,"syscall3","","",null,[[["u64",15]],["u64",15]]],[5,"syscall4","","",null,[[["u64",15]],["u64",15]]],[5,"syscall5","","",null,[[["u64",15]],["u64",15]]],[5,"syscall6","","",null,[[["u64",15]],["u64",15]]],[0,"task","x86::bits64","Helpers to program the task state segment. See Intel 3a, …",null,null],[3,"TaskStateSegment","x86::bits64::task","Although hardware task-switching is not supported in …",null,null],[12,"reserved","","",14,null],[12,"rsp","","The full 64-bit canonical forms of the stack pointers …",14,null],[12,"reserved2","","",14,null],[12,"ist","","The full 64-bit canonical forms of the interrupt stack …",14,null],[12,"reserved3","","",14,null],[12,"reserved4","","",14,null],[12,"iomap_base","","The 16-bit offset to the I/O permission bit map from the …",14,null],[11,"new","","Creates a new empty TSS.",14,[[],["taskstatesegment",3]]],[11,"set_rsp","","Sets the stack pointer (<code>stack_ptr</code>) to be used for when an …",14,[[["ring",4],["u64",15]]]],[11,"set_ist","","Sets the stack pointer (<code>stack_ptr</code>) to be used when an …",14,[[["usize",15],["u64",15]]]],[0,"vmx","x86::bits64","Virtualize processor hardware for multiple software …",null,null],[5,"vmxon","x86::bits64::vmx","Enable VMX operation.",null,[[["u64",15]],["result",6]]],[5,"vmxoff","","Disable VMX operation.",null,[[],["result",6]]],[5,"vmclear","","Clear VMCS.",null,[[["u64",15]],["result",6]]],[5,"vmptrld","","Load current VMCS pointer.",null,[[["u64",15]],["result",6]]],[5,"vmptrst","","Return current VMCS pointer.",null,[[],[["u64",15],["result",6]]]],[5,"vmread","","Read a specified field from a VMCS.",null,[[["u32",15]],[["u64",15],["result",6]]]],[5,"vmwrite","","Write to a specified field in a VMCS.",null,[[["u32",15],["u64",15]],["result",6]]],[5,"vmlaunch","","Launch virtual machine.",null,[[],["result",6]]],[5,"vmresume","","Resume virtual machine.",null,[[],["result",6]]],[0,"apic","x86","Register information and driver to program xAPIC, X2APIC …",null,null],[0,"ioapic","x86::apic","To control an I/O APIC.",null,null],[3,"IoApic","x86::apic::ioapic","",null,null],[11,"new","","",15,[[["usize",15]]]],[11,"disable_all","","",15,[[]]],[11,"enable","","",15,[[["u8",15]]]],[11,"id","","",15,[[],["u8",15]]],[11,"version","","",15,[[],["u8",15]]],[11,"supported_interrupts","","Number of supported interrupts by this IO APIC.",15,[[],["u8",15]]],[0,"x2apic","x86::apic","x2APIC, the most recent APIC on x86 for large servers …",null,null],[3,"X2APIC","x86::apic::x2apic","Represents an x2APIC driver instance.",null,null],[11,"new","","Create a new x2APIC driver object for the local core.",16,[[],["x2apic",3]]],[11,"attach","","Attach to APIC (enable x2APIC mode, initialize LINT0)",16,[[]]],[11,"detach","","Detach from APIC (disable x2APIC and xAPIC mode).",16,[[]]],[11,"send_self_ipi","","Send an IPI to yourself.",16,[[["u64",15]]]],[0,"xapic","x86::apic","Information about the xAPIC for the local APIC.",null,null],[17,"XAPIC_ID","x86::apic::xapic","Local APIC ID register. Read-only. See Section 10.12.5.1 …",null,null],[17,"XAPIC_VERSION","","Local APIC Version register. Read-only. Same version used …",null,null],[17,"XAPIC_TPR","","Task Priority Register (TPR). Read/write. Bits 31:8 are …",null,null],[17,"XAPIC_PPR","","Processor Priority Register (PPR). Read-only.",null,null],[17,"XAPIC_EOI","","EOI register. Write-only.",null,null],[17,"XAPIC_LDR","","Logical Destination Register (LDR). Read/write in xAPIC …",null,null],[17,"XAPIC_SVR","","Spurious Interrupt Vector Register (SVR). Read/write. See …",null,null],[17,"XAPIC_ISR0","","In-Service Register (ISR); bits 31:0. Read-only.",null,null],[17,"XAPIC_ISR1","","ISR bits 63:32. Read-only.",null,null],[17,"XAPIC_ISR2","","ISR bits 95:64. Read-only.",null,null],[17,"XAPIC_ISR3","","ISR bits 127:96. Read-only.",null,null],[17,"XAPIC_ISR4","","ISR bits 159:128. Read-only.",null,null],[17,"XAPIC_ISR5","","ISR bits 191:160. Read-only.",null,null],[17,"XAPIC_ISR6","","ISR bits 223:192. Read-only.",null,null],[17,"XAPIC_ISR7","","ISR bits 255:224. Read-only.",null,null],[17,"XAPIC_TMR0","","Trigger Mode Register (TMR); bits 31:0. Read-only.",null,null],[17,"XAPIC_TMR1","","TMR bits 63:32. Read-only.",null,null],[17,"XAPIC_TMR2","","TMR bits 95:64. Read-only.",null,null],[17,"XAPIC_TMR3","","TMR bits 127:96. Read-only.",null,null],[17,"XAPIC_TMR4","","TMR bits 159:128. Read-only.",null,null],[17,"XAPIC_TMR5","","TMR bits 191:160. Read-only.",null,null],[17,"XAPIC_TMR6","","TMR bits 223:192. Read-only.",null,null],[17,"XAPIC_TMR7","","TMR bits 255:224. Read-only.",null,null],[17,"XAPIC_IRR0","","Interrupt Request Register (IRR); bits 31:0. Read-only.",null,null],[17,"XAPIC_IRR1","","IRR bits 63:32. Read-only.",null,null],[17,"XAPIC_IRR2","","IRR bits 95:64. Read-only.",null,null],[17,"XAPIC_IRR3","","IRR bits 127:96. Read-only.",null,null],[17,"XAPIC_IRR4","","IRR bits 159:128. Read-only.",null,null],[17,"XAPIC_IRR5","","IRR bits 191:160. Read-only.",null,null],[17,"XAPIC_IRR6","","IRR bits 223:192. Read-only.",null,null],[17,"XAPIC_IRR7","","IRR bits 255:224. Read-only.",null,null],[17,"XAPIC_ESR","","Error Status Register (ESR). Read/write. See Section …",null,null],[17,"XAPIC_LVT_CMCI","","LVT CMCI register. Read/write. See Figure 10-8 for …",null,null],[17,"XAPIC_ICR0","","Interrupt Command Register (ICR). Read/write. See Figure …",null,null],[17,"XAPIC_ICR1","","Interrupt Command Register (ICR). Read/write. See Figure …",null,null],[17,"XAPIC_LVT_TIMER","","LVT Timer register. Read/write. See Figure 10-8 for …",null,null],[17,"XAPIC_LVT_THERMAL","","LVT Thermal Sensor register. Read/write. See Figure 10-8 …",null,null],[17,"XAPIC_LVT_PMI","","LVT Performance Monitoring register. Read/write. See …",null,null],[17,"XAPIC_LVT_LINT0","","LVT LINT0 register. Read/write. See Figure 10-8 for …",null,null],[17,"XAPIC_LVT_LINT1","","LVT LINT1 register. Read/write. See Figure 10-8 for …",null,null],[17,"XAPIC_LVT_ERROR","","LVT Error register. Read/write. See Figure 10-8 for …",null,null],[17,"XAPIC_TIMER_INIT_COUNT","","Initial Count register (for Timer). Read/write.",null,null],[17,"XAPIC_TIMER_CURRENT_COUNT","","Current Count register (for Timer). Read-only.",null,null],[17,"XAPIC_TIMER_DIV_CONF","","Divide Configuration Register (DCR; for Timer). …",null,null],[3,"XAPIC","","State for the XAPIC driver.",null,null],[11,"new","","Create a new xAPIC object for the local CPU.",17,[[],["xapic",3]]],[11,"attach","","Attach driver to the xAPIC (enables device).",17,[[]]],[11,"detach","","Detach driver form the xAPIC (disables device).",17,[[]]],[4,"DeliveryMode","x86::apic","Specify IPI Delivery Mode",null,null],[13,"Fixed","","Delivers the interrupt specified in the vector field to …",18,null],[13,"LowestPriority","","Same as fixed mode, except that the interrupt is …",18,null],[13,"SMI","","Delivers an SMI interrupt to the target processor or …",18,null],[13,"_Reserved","","Reserved",18,null],[13,"NMI","","Delivers an NMI interrupt to the target processor or …",18,null],[13,"Init","","Delivers an INIT request to the target processor or …",18,null],[13,"StartUp","","Sends a special start-up IPI (called a SIPI) to the …",18,null],[4,"DestinationMode","","Specify IPI Destination Mode.",null,null],[13,"Physical","","",19,null],[13,"Logical","","",19,null],[4,"DeliveryStatus","","Specify Delivery Status",null,null],[13,"Idle","","",20,null],[13,"SendPending","","",20,null],[4,"Level","","IPI Level",null,null],[13,"Deassert","","",21,null],[13,"Assert","","",21,null],[4,"TriggerMode","","IPI Trigger Mode",null,null],[13,"Edge","","",22,null],[13,"Level","","",22,null],[4,"DestinationShorthand","","IPI Destination Shorthand",null,null],[13,"NoShorthand","","",23,null],[13,"Myself","","",23,null],[13,"AllIncludingSelf","","",23,null],[13,"AllExcludingSelf","","",23,null],[3,"Icr","","Abstract the IPI control register",null,null],[11,"for_x2apic","","Short-hand to create a Icr value that will work for an …",24,[[["deliverymode",4],["deliverystatus",4],["u8",15],["level",4],["destinationmode",4],["destinationshorthand",4],["triggermode",4],["apicid",4]],["icr",3]]],[11,"for_xapic","","",24,[[["deliverymode",4],["deliverystatus",4],["u8",15],["level",4],["destinationmode",4],["destinationshorthand",4],["triggermode",4],["apicid",4]],["icr",3]]],[11,"lower","","Get lower 32-bits of the Icr register.",24,[[],["u32",15]]],[11,"upper","","Get upper 32-bits of the Icr register.",24,[[],["u32",15]]],[4,"ApicId","","Encodes the id of a core.",null,null],[13,"XApic","","A core destination encoded as an xAPIC ID.",25,null],[13,"X2Apic","","A core destination encoded as an x2APIC ID.",25,null],[11,"x2apic_logical_id","","Returns the Logical x2APIC ID.",25,[[],["u32",15]]],[11,"x2apic_logical_cluster_address","","Returns the logical address relative to a cluster for a …",25,[[],["u32",15]]],[11,"x2apic_logical_cluster_id","","Returns the cluster ID a given APIC ID belongs to …",25,[[],["u32",15]]],[8,"ApicControl","","Abstracts common interface of local APIC (x2APIC, xAPIC) …",null,null],[10,"bsp","","Is a bootstrap processor?",26,[[],["bool",15]]],[10,"id","","Return APIC ID.",26,[[],["u32",15]]],[10,"logical_id","","Returns the logical APIC ID.",26,[[],["u32",15]]],[10,"version","","Read APIC version",26,[[],["u32",15]]],[10,"eoi","","End Of Interrupt -- Acknowledge interrupt delivery.",26,[[]]],[10,"tsc_enable","","Enable TSC deadline timer.",26,[[["u8",15]]]],[10,"tsc_set","","Set TSC deadline value.",26,[[["u64",15]]]],[10,"ipi_init","","Send a INIT IPI to a core.",26,[[["apicid",4]]]],[10,"ipi_init_deassert","","Deassert INIT IPI.",26,[[]]],[10,"ipi_startup","","Send a STARTUP IPI to a core.",26,[[["u8",15],["apicid",4]]]],[10,"send_ipi","","Send a generic IPI.",26,[[["icr",3]]]],[0,"controlregs","x86","Functions to read and write control registers. See Intel …",null,null],[3,"Cr0","x86::controlregs","",null,null],[18,"CR0_ENABLE_PAGING","","",27,null],[18,"CR0_CACHE_DISABLE","","",27,null],[18,"CR0_NOT_WRITE_THROUGH","","",27,null],[18,"CR0_ALIGNMENT_MASK","","",27,null],[18,"CR0_WRITE_PROTECT","","",27,null],[18,"CR0_NUMERIC_ERROR","","",27,null],[18,"CR0_EXTENSION_TYPE","","",27,null],[18,"CR0_TASK_SWITCHED","","",27,null],[18,"CR0_EMULATE_COPROCESSOR","","",27,null],[18,"CR0_MONITOR_COPROCESSOR","","",27,null],[18,"CR0_PROTECTED_MODE","","",27,null],[11,"empty","","Returns an empty set of flags",27,[[],["cr0",3]]],[11,"all","","Returns the set containing all flags.",27,[[],["cr0",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",27,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",27,[[["usize",15]],[["cr0",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",27,[[["usize",15]],["cr0",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",27,[[["usize",15]],["cr0",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",27,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",27,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",27,[[["cr0",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",27,[[["cr0",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",27,[[["cr0",3]]]],[11,"remove","","Removes the specified flags in-place.",27,[[["cr0",3]]]],[11,"toggle","","Toggles the specified flags in-place.",27,[[["cr0",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",27,[[["bool",15],["cr0",3]]]],[3,"Cr4","","",null,null],[18,"CR4_ENABLE_PROTECTION_KEY","","Enables use of Protection Keys (MPK).",28,null],[18,"CR4_ENABLE_SMAP","","Enable Supervisor Mode Access Prevention.",28,null],[18,"CR4_ENABLE_SMEP","","Enable Supervisor Mode Execution Protection.",28,null],[18,"CR4_ENABLE_OS_XSAVE","","Enable XSAVE and Processor Extended States.",28,null],[18,"CR4_ENABLE_PCID","","Enables process-context identifiers (PCIDs).",28,null],[18,"CR4_ENABLE_FSGSBASE","","Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, …",28,null],[18,"CR4_ENABLE_SMX","","Enables Safer Mode Extensions (Trusted Execution …",28,null],[18,"CR4_ENABLE_VMX","","Enables Virtual Machine Extensions.",28,null],[18,"CR4_ENABLE_LA57","","Enables 5-Level Paging.",28,null],[18,"CR4_ENABLE_UMIP","","Enable User-Mode Instruction Prevention (the SGDT, SIDT, …",28,null],[18,"CR4_UNMASKED_SSE","","Enables unmasked SSE exceptions.",28,null],[18,"CR4_ENABLE_SSE","","Enables Streaming SIMD Extensions (SSE) instructions and …",28,null],[18,"CR4_ENABLE_PPMC","","Enable Performance-Monitoring Counters",28,null],[18,"CR4_ENABLE_GLOBAL_PAGES","","Enable shared (PDE or PTE) address translation between …",28,null],[18,"CR4_ENABLE_MACHINE_CHECK","","Enable machine check interrupts.",28,null],[18,"CR4_ENABLE_PAE","","Enable: Physical Address Extension (allows to address …",28,null],[18,"CR4_ENABLE_PSE","","Enable Page Size Extensions (allows for pages larger than …",28,null],[18,"CR4_DEBUGGING_EXTENSIONS","","If set, enables debug register based breaks on I/O space …",28,null],[18,"CR4_TIME_STAMP_DISABLE","","If set, disables ability to take time-stamps.",28,null],[18,"CR4_VIRTUAL_INTERRUPTS","","If set, enables support for the virtual interrupt flag …",28,null],[18,"CR4_ENABLE_VME","","If set, enables support for the virtual interrupt flag …",28,null],[11,"empty","","Returns an empty set of flags",28,[[],["cr4",3]]],[11,"all","","Returns the set containing all flags.",28,[[],["cr4",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",28,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",28,[[["usize",15]],[["option",4],["cr4",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",28,[[["usize",15]],["cr4",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",28,[[["usize",15]],["cr4",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",28,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",28,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",28,[[["cr4",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",28,[[["cr4",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",28,[[["cr4",3]]]],[11,"remove","","Removes the specified flags in-place.",28,[[["cr4",3]]]],[11,"toggle","","Toggles the specified flags in-place.",28,[[["cr4",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",28,[[["bool",15],["cr4",3]]]],[3,"Xcr0","","",null,null],[18,"XCR0_PKRU_STATE","","",29,null],[18,"XCR0_HI16_ZMM_STATE","","",29,null],[18,"XCR0_ZMM_HI256_STATE","","",29,null],[18,"XCR0_OPMASK_STATE","","",29,null],[18,"XCR0_BNDCSR_STATE","","",29,null],[18,"XCR0_BNDREG_STATE","","",29,null],[18,"XCR0_AVX_STATE","","",29,null],[18,"XCR0_SSE_STATE","","",29,null],[18,"XCR0_FPU_MMX_STATE","","",29,null],[11,"empty","","Returns an empty set of flags",29,[[],["xcr0",3]]],[11,"all","","Returns the set containing all flags.",29,[[],["xcr0",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",29,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",29,[[["u64",15]],[["xcr0",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",29,[[["u64",15]],["xcr0",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",29,[[["u64",15]],["xcr0",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",29,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",29,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",29,[[["xcr0",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",29,[[["xcr0",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",29,[[["xcr0",3]]]],[11,"remove","","Removes the specified flags in-place.",29,[[["xcr0",3]]]],[11,"toggle","","Toggles the specified flags in-place.",29,[[["xcr0",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",29,[[["xcr0",3],["bool",15]]]],[5,"cr0","","Read cr0",null,[[],["cr0",3]]],[5,"cr0_write","","Write cr0.",null,[[["cr0",3]]]],[5,"cr2","","Contains page-fault linear address.",null,[[],["usize",15]]],[5,"cr2_write","","Write cr2, for instance to reset cr2",null,[[["u64",15]]]],[5,"cr3","","Contains page-table root pointer.",null,[[],["u64",15]]],[5,"cr3_write","","Switch page-table PML4 pointer.",null,[[["u64",15]]]],[5,"cr4","","Contains various flags to control operations in protected …",null,[[],["cr4",3]]],[5,"cr4_write","","Write cr4.",null,[[["cr4",3]]]],[5,"xcr0","","Read Extended Control Register XCR0. Only supported if …",null,[[],["xcr0",3]]],[5,"xcr0_write","","Write to Extended Control Register XCR0. Only supported …",null,[[["xcr0",3]]]],[0,"dtables","x86","Functions and data-structures for working with descriptor …",null,null],[3,"DescriptorTablePointer","x86::dtables","A struct describing a pointer to a descriptor table (GDT …",null,null],[12,"limit","","Size of the DT.",30,null],[12,"base","","Pointer to the memory region containing the DT.",30,null],[11,"new","","",30,[[]]],[11,"new_from_slice","","",30,[[]]],[5,"lgdt","","Load the GDTR register with the specified base and limit.",null,[[["descriptortablepointer",3]]]],[5,"sgdt","","Retrieve base and limit from the GDTR register.",null,[[["descriptortablepointer",3]]]],[5,"load_ldtr","","Loads the segment selector into the selector field of the …",null,[[["segmentselector",3]]]],[5,"ldtr","","Returns the segment selector from the local descriptor …",null,[[],["segmentselector",3]]],[5,"lidt","","Load the IDTR register with the specified base and limit.",null,[[["descriptortablepointer",3]]]],[5,"sidt","","Retrieve base and limit from the IDTR register.",null,[[["descriptortablepointer",3]]]],[0,"io","x86","I/O port functionality.",null,null],[5,"outb","x86::io","Write 8 bits to port",null,[[["u16",15],["u8",15]]]],[5,"inb","","Read 8 bits from port",null,[[["u16",15]],["u8",15]]],[5,"outw","","Write 16 bits to port",null,[[["u16",15]]]],[5,"inw","","Read 16 bits from port",null,[[["u16",15]],["u16",15]]],[5,"outl","","Write 32 bits to port",null,[[["u32",15],["u16",15]]]],[5,"inl","","Read 32 bits from port",null,[[["u16",15]],["u32",15]]],[0,"irq","x86","Shared interrupt description and set-up code. See the …",null,null],[3,"InterruptDescription","x86::irq","x86 Exception description (see also Intel Vol. 3a Chapter …",null,null],[12,"vector","","",31,null],[12,"mnemonic","","",31,null],[12,"description","","",31,null],[12,"irqtype","","",31,null],[12,"source","","",31,null],[17,"DIVIDE_ERROR_VECTOR","","",null,null],[17,"DEBUG_VECTOR","","",null,null],[17,"NONMASKABLE_INTERRUPT_VECTOR","","",null,null],[17,"BREAKPOINT_VECTOR","","",null,null],[17,"OVERFLOW_VECTOR","","",null,null],[17,"BOUND_RANGE_EXCEEDED_VECTOR","","",null,null],[17,"INVALID_OPCODE_VECTOR","","",null,null],[17,"DEVICE_NOT_AVAILABLE_VECTOR","","",null,null],[17,"DOUBLE_FAULT_VECTOR","","",null,null],[17,"COPROCESSOR_SEGMENT_OVERRUN_VECTOR","","",null,null],[17,"INVALID_TSS_VECTOR","","",null,null],[17,"SEGMENT_NOT_PRESENT_VECTOR","","",null,null],[17,"STACK_SEGEMENT_FAULT_VECTOR","","",null,null],[17,"GENERAL_PROTECTION_FAULT_VECTOR","","",null,null],[17,"PAGE_FAULT_VECTOR","","",null,null],[17,"X87_FPU_VECTOR","","",null,null],[17,"ALIGNMENT_CHECK_VECTOR","","",null,null],[17,"MACHINE_CHECK_VECTOR","","",null,null],[17,"SIMD_FLOATING_POINT_VECTOR","","",null,null],[17,"VIRTUALIZATION_VECTOR","","",null,null],[7,"EXCEPTIONS","","x86 External Interrupts (1-32).",null,null],[3,"PageFaultError","","",null,null],[18,"P","","0: The fault was caused by a non-present page. 1: The …",32,null],[18,"WR","","0: The access causing the fault was a read. 1: The access …",32,null],[18,"US","","0: The access causing the fault originated when the …",32,null],[18,"RSVD","","0: The fault was not caused by reserved bit violation. 1: …",32,null],[18,"ID","","0: The fault was not caused by an instruction fetch. 1: …",32,null],[18,"PK","","0: The fault was not by protection keys. 1: There was a …",32,null],[11,"empty","","Returns an empty set of flags",32,[[],["pagefaulterror",3]]],[11,"all","","Returns the set containing all flags.",32,[[],["pagefaulterror",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",32,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",32,[[["u32",15]],[["pagefaulterror",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",32,[[["u32",15]],["pagefaulterror",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",32,[[["u32",15]],["pagefaulterror",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",32,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",32,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",32,[[["pagefaulterror",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",32,[[["pagefaulterror",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",32,[[["pagefaulterror",3]]]],[11,"remove","","Removes the specified flags in-place.",32,[[["pagefaulterror",3]]]],[11,"toggle","","Toggles the specified flags in-place.",32,[[["pagefaulterror",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",32,[[["pagefaulterror",3],["bool",15]]]],[5,"enable","","Enable Interrupts.",null,[[]]],[5,"disable","","Disable Interrupts.",null,[[]]],[0,"msr","x86","MSR value list and function to read and write them.",null,null],[5,"wrmsr","x86::msr","Write 64 bits to msr register.",null,[[["u32",15],["u64",15]]]],[5,"rdmsr","","Read 64 bits msr register.",null,[[["u32",15]],["u64",15]]],[17,"P5_MC_ADDR","","See Section 35.16, MSRs in Pentium Processors,  and see  …",null,null],[17,"IA32_P5_MC_ADDR","","See Section 35.16, MSRs in Pentium Processors.",null,null],[17,"P5_MC_TYPE","","See Section 35.16, MSRs in Pentium Processors,  and see  …",null,null],[17,"IA32_P5_MC_TYPE","","See Section 35.16, MSRs in Pentium Processors.",null,null],[17,"IA32_MONITOR_FILTER_SIZE","","See Section 8.10.5, Monitor/Mwait Address Range …",null,null],[17,"IA32_MONITOR_FILTER_LINE_SIZE","","See Section 8.10.5, Monitor/Mwait Address  Range …",null,null],[17,"IA32_TIME_STAMP_COUNTER","","See Section 17.13, Time-Stamp Counter,  and see Table …",null,null],[17,"TSC","","See Section 17.13, Time-Stamp Counter.",null,null],[17,"MSR_PLATFORM_ID","","Model Specific Platform ID (R)",null,null],[17,"IA32_PLATFORM_ID","","Platform ID (R)  See Table 35-2. The operating system can …",null,null],[17,"APIC_BASE","","Section 10.4.4, Local APIC Status and Location.",null,null],[17,"IA32_APIC_BASE","","APIC Location and Status (R/W) See Table 35-2. See …",null,null],[17,"EBL_CR_POWERON","","Processor Hard Power-On Configuration  (R/W) Enables and …",null,null],[17,"MSR_EBL_CR_POWERON","","Processor Hard Power-On Configuration (R/W) Enables and  …",null,null],[17,"MSR_EBC_HARD_POWERON","","Processor Hard Power-On Configuration (R/W) Enables and …",null,null],[17,"MSR_EBC_SOFT_POWERON","","Processor Soft Power-On Configuration (R/W)  Enables and …",null,null],[17,"MSR_EBC_FREQUENCY_ID","","Processor Frequency Configuration The bit field layout of …",null,null],[17,"TEST_CTL","","Test Control Register",null,null],[17,"MSR_SMI_COUNT","","SMI Counter (R/O)",null,null],[17,"IA32_FEATURE_CONTROL","","Control Features in IA-32 Processor (R/W) See Table 35-2 …",null,null],[17,"IA32_TSC_ADJUST","","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.",null,null],[17,"MSR_LASTBRANCH_0_FROM_IP","","Last Branch Record 0 From IP (R/W) One of eight pairs of …",null,null],[17,"MSR_LASTBRANCH_1","","Last Branch Record 1 (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_1_FROM_IP","","Last Branch Record 1 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_2_FROM_IP","","Last Branch Record 2 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_3_FROM_IP","","Last Branch Record 3 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_4","","Last Branch Record 4 (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_4_FROM_IP","","Last Branch Record 4 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_5","","Last Branch Record 5 (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_5_FROM_IP","","Last Branch Record 5 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_6","","Last Branch Record 6 (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_6_FROM_IP","","Last Branch Record 6 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_7","","Last Branch Record 7 (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_7_FROM_IP","","Last Branch Record 7 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_0_TO_IP","","Last Branch Record 0 (R/W)  One of 16 pairs of last …",null,null],[17,"MSR_LASTBRANCH_1_TO_IP","","Last Branch Record 1 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_2_TO_IP","","Last Branch Record 2 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_3_TO_IP","","Last Branch Record 3 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_4_TO_IP","","Last Branch Record 4 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_5_TO_IP","","Last Branch Record 5 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_6_TO_IP","","Last Branch Record 6 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_7_TO_IP","","Last Branch Record 7 To IP (R/W) See description of …",null,null],[17,"IA32_BIOS_UPDT_TRIG","","BIOS Update Trigger Register (W)  See Table 35-2.",null,null],[17,"BIOS_UPDT_TRIG","","BIOS Update Trigger Register.",null,null],[17,"IA32_BIOS_SIGN_ID","","BIOS Update Signature ID (R/W) See Table 35-2.",null,null],[17,"IA32_SMM_MONITOR_CTL","","SMM Monitor Configuration (R/W) See Table 35-2.",null,null],[17,"IA32_SMBASE","","If IA32_VMX_MISC[bit 15])",null,null],[17,"MSR_SMRR_PHYSMASK","","System Management Mode Physical Address Mask register  …",null,null],[17,"IA32_PMC0","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC1","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC2","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC3","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC4","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC5","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC6","","Performance Counter Register  See Table 35-2.",null,null],[17,"IA32_PMC7","","Performance Counter Register  See Table 35-2.",null,null],[17,"MSR_FSB_FREQ","","Scaleable Bus Speed(RO) This field indicates the intended …",null,null],[17,"MSR_PLATFORM_INFO","","see http://biosbits.org.",null,null],[17,"MSR_PKG_CST_CONFIG_CONTROL","","C-State Configuration Control (R/W)  Note: C-state values …",null,null],[17,"MSR_PMG_IO_CAPTURE_BASE","","Power Management IO Redirection in C-state (R/W)  See …",null,null],[17,"IA32_MPERF","","Maximum Performance Frequency Clock Count (RW)  See Table …",null,null],[17,"IA32_APERF","","Actual Performance Frequency Clock Count (RW)  See Table …",null,null],[17,"IA32_MTRRCAP","","MTRR Information See Section 11.11.1, MTRR Feature  …",null,null],[17,"MSR_BBL_CR_CTL","","",null,null],[17,"MSR_BBL_CR_CTL3","","",null,null],[17,"IA32_SYSENTER_CS","","CS register target for CPL 0 code (R/W) See Table 35-2. …",null,null],[17,"SYSENTER_CS_MSR","","CS register target for CPL 0 code",null,null],[17,"IA32_SYSENTER_ESP","","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See …",null,null],[17,"SYSENTER_ESP_MSR","","Stack pointer for CPL 0 stack",null,null],[17,"IA32_SYSENTER_EIP","","CPL 0 code entry point (R/W) See Table 35-2. See Section …",null,null],[17,"SYSENTER_EIP_MSR","","CPL 0 code entry point",null,null],[17,"MCG_CAP","","",null,null],[17,"IA32_MCG_CAP","","Machine Check Capabilities (R) See Table 35-2. See …",null,null],[17,"IA32_MCG_STATUS","","Machine Check Status. (R) See Table 35-2. See Section …",null,null],[17,"MCG_STATUS","","",null,null],[17,"MCG_CTL","","",null,null],[17,"IA32_MCG_CTL","","Machine Check Feature Enable (R/W) See Table 35-2. See …",null,null],[17,"MSR_SMM_MCA_CAP","","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability …",null,null],[17,"MSR_ERROR_CONTROL","","MC Bank Error Configuration (R/W)",null,null],[17,"MSR_MCG_RAX","","Machine Check EAX/RAX Save State See Section 15.3.2.6, …",null,null],[17,"MSR_MCG_RBX","","Machine Check EBX/RBX Save State See Section 15.3.2.6, …",null,null],[17,"MSR_MCG_RCX","","Machine Check ECX/RCX Save State See Section 15.3.2.6, …",null,null],[17,"MSR_MCG_RDX","","Machine Check EDX/RDX Save State See Section 15.3.2.6, …",null,null],[17,"MSR_MCG_RSI","","Machine Check ESI/RSI Save State See Section 15.3.2.6, …",null,null],[17,"MSR_MCG_RDI","","Machine Check EDI/RDI Save State See Section 15.3.2.6, …",null,null],[17,"MSR_MCG_RBP","","Machine Check EBP/RBP Save State See Section 15.3.2.6, …",null,null],[17,"IA32_PERFEVTSEL0","","Performance Event Select for Counter 0 (R/W) Supports all …",null,null],[17,"IA32_PERFEVTSEL1","","Performance Event Select for Counter 1 (R/W) Supports all …",null,null],[17,"IA32_PERFEVTSEL2","","Performance Event Select for Counter 2 (R/W) Supports all …",null,null],[17,"MSR_MCG_RFLAGS","","Machine Check EFLAGS/RFLAG Save State See Section …",null,null],[17,"IA32_PERFEVTSEL3","","Performance Event Select for Counter 3 (R/W) Supports all …",null,null],[17,"MSR_MCG_RIP","","Machine Check EIP/RIP Save State See Section 15.3.2.6, …",null,null],[17,"MSR_MCG_MISC","","Machine Check Miscellaneous See Section 15.3.2.6, …",null,null],[17,"IA32_PERFEVTSEL4","","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8",null,null],[17,"IA32_PERFEVTSEL5","","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8",null,null],[17,"IA32_PERFEVTSEL6","","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8",null,null],[17,"IA32_PERFEVTSEL7","","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8",null,null],[17,"MSR_MCG_R8","","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  …",null,null],[17,"MSR_MCG_R9","","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG …",null,null],[17,"MSR_MCG_R10","","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended …",null,null],[17,"MSR_MCG_R11","","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended …",null,null],[17,"MSR_MCG_R12","","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended …",null,null],[17,"MSR_MCG_R13","","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended …",null,null],[17,"MSR_MCG_R14","","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended …",null,null],[17,"MSR_PERF_STATUS","","",null,null],[17,"IA32_PERF_STATUS","","See Table 35-2. See Section 14.1, Enhanced Intel  …",null,null],[17,"IA32_PERF_CTL","","See Table 35-2. See Section 14.1, Enhanced Intel  …",null,null],[17,"IA32_CLOCK_MODULATION","","Clock Modulation (R/W)  See Table 35-2. …",null,null],[17,"IA32_THERM_INTERRUPT","","Thermal Interrupt Control (R/W) See Section 14.5.2, …",null,null],[17,"IA32_THERM_STATUS","","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal …",null,null],[17,"MSR_THERM2_CTL","","Thermal Monitor 2 Control.",null,null],[17,"IA32_MISC_ENABLE","","",null,null],[17,"MSR_PLATFORM_BRV","","Platform Feature Requirements (R)",null,null],[17,"MSR_TEMPERATURE_TARGET","","",null,null],[17,"MSR_OFFCORE_RSP_0","","Offcore Response Event Select Register (R/W)",null,null],[17,"MSR_OFFCORE_RSP_1","","Offcore Response Event Select Register (R/W)",null,null],[17,"MSR_MISC_PWR_MGMT","","See http://biosbits.org.",null,null],[17,"MSR_TURBO_POWER_CURRENT_LIMIT","","See http://biosbits.org.",null,null],[17,"MSR_TURBO_RATIO_LIMIT","","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.…",null,null],[17,"IA32_ENERGY_PERF_BIAS","","if CPUID.6H:ECX[3] = 1",null,null],[17,"IA32_PACKAGE_THERM_STATUS","","If CPUID.06H: EAX[6] = 1",null,null],[17,"IA32_PACKAGE_THERM_INTERRUPT","","If CPUID.06H: EAX[6] = 1",null,null],[17,"MSR_LBR_SELECT","","Last Branch Record Filtering Select Register (R/W)  See …",null,null],[17,"MSR_LASTBRANCH_TOS","","Last Branch Record Stack TOS (R/W)  Contains an index …",null,null],[17,"DEBUGCTLMSR","","",null,null],[17,"MSR_DEBUGCTLA","","Debug Control (R/W)  Controls how several debug features …",null,null],[17,"MSR_DEBUGCTLB","","Debug Control (R/W)  Controls how several debug features …",null,null],[17,"IA32_DEBUGCTL","","Debug Control (R/W)  Controls how several debug features …",null,null],[17,"LASTBRANCHFROMIP","","",null,null],[17,"MSR_LASTBRANCH_0","","Last Branch Record 0 (R/W)  One of four last branch …",null,null],[17,"LASTBRANCHTOIP","","",null,null],[17,"LASTINTFROMIP","","",null,null],[17,"MSR_LASTBRANCH_2","","Last Branch Record 2 See description of the …",null,null],[17,"MSR_LER_FROM_LIP","","Last Exception Record From Linear IP (R)  Contains a …",null,null],[17,"LASTINTTOIP","","",null,null],[17,"MSR_LASTBRANCH_3","","Last Branch Record 3 See description of the …",null,null],[17,"MSR_LER_TO_LIP","","Last Exception Record To Linear IP (R)  This area …",null,null],[17,"ROB_CR_BKUPTMPDR6","","",null,null],[17,"IA32_SMRR_PHYSBASE","","See Table 35-2.",null,null],[17,"IA32_SMRR_PHYSMASK","","If IA32_MTRR_CAP[SMRR]  = 1",null,null],[17,"IA32_PLATFORM_DCA_CAP","","06_0FH",null,null],[17,"IA32_CPU_DCA_CAP","","",null,null],[17,"IA32_DCA_0_CAP","","06_2EH",null,null],[17,"MSR_POWER_CTL","","Power Control Register. See http://biosbits.org.",null,null],[17,"IA32_MTRR_PHYSBASE0","","Variable Range Base MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSMASK0","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSBASE1","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSMASK1","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSBASE2","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSMASK2","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSBASE3","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSMASK3","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSBASE4","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSMASK4","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSBASE5","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSMASK5","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSBASE6","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSMASK6","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSBASE7","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSMASK7","","Variable Range Mask MTRR See Section 11.11.2.3, Variable …",null,null],[17,"IA32_MTRR_PHYSBASE8","","if IA32_MTRR_CAP[7:0] >  8",null,null],[17,"IA32_MTRR_PHYSMASK8","","if IA32_MTRR_CAP[7:0] >  8",null,null],[17,"IA32_MTRR_PHYSBASE9","","if IA32_MTRR_CAP[7:0] >  9",null,null],[17,"IA32_MTRR_PHYSMASK9","","if IA32_MTRR_CAP[7:0] >  9",null,null],[17,"IA32_MTRR_FIX64K_00000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX16K_80000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX16K_A0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_C0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_C8000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs …",null,null],[17,"IA32_MTRR_FIX4K_D0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs …",null,null],[17,"IA32_MTRR_FIX4K_D8000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_E0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_E8000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_F0000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_MTRR_FIX4K_F8000","","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.",null,null],[17,"IA32_PAT","","Page Attribute Table See Section 11.11.2.2, Fixed Range …",null,null],[17,"IA32_MC0_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC1_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC2_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC3_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC4_CTL2","","See Table 35-2.",null,null],[17,"MSR_MC4_CTL2","","Always 0 (CMCI not supported).",null,null],[17,"IA32_MC5_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC6_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC7_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC8_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC9_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC10_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC11_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC12_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC13_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC14_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC15_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC16_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC17_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC18_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC19_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC20_CTL2","","See Table 35-2.",null,null],[17,"IA32_MC21_CTL2","","See Table 35-2.",null,null],[17,"IA32_MTRR_DEF_TYPE","","Default Memory Types (R/W)  Sets the memory type for the …",null,null],[17,"MSR_BPU_COUNTER0","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_GQ_SNOOP_MESF","","",null,null],[17,"MSR_BPU_COUNTER1","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_BPU_COUNTER2","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_BPU_COUNTER3","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_MS_COUNTER0","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_MS_COUNTER1","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_MS_COUNTER2","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_MS_COUNTER3","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_FLAME_COUNTER0","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_PERF_FIXED_CTR0","","Fixed-Function Performance Counter Register 0 (R/W)",null,null],[17,"IA32_FIXED_CTR0","","Fixed-Function Performance Counter Register 0 (R/W)  See …",null,null],[17,"MSR_FLAME_COUNTER1","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_PERF_FIXED_CTR1","","Fixed-Function Performance Counter Register 1 (R/W)",null,null],[17,"IA32_FIXED_CTR1","","Fixed-Function Performance Counter Register 1 (R/W)  See …",null,null],[17,"MSR_FLAME_COUNTER2","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_PERF_FIXED_CTR2","","Fixed-Function Performance Counter Register 2 (R/W)",null,null],[17,"IA32_FIXED_CTR2","","Fixed-Function Performance Counter Register 2 (R/W)  See …",null,null],[17,"MSR_FLAME_COUNTER3","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_IQ_COUNTER4","","See Section 18.12.2, Performance Counters.",null,null],[17,"MSR_IQ_COUNTER5","","See Section 18.12.2, Performance Counters.",null,null],[17,"IA32_PERF_CAPABILITIES","","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.",null,null],[17,"MSR_PERF_CAPABILITIES","","RO. This applies to processors that do not support …",null,null],[17,"MSR_BPU_CCCR0","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_BPU_CCCR1","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_BPU_CCCR2","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_BPU_CCCR3","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_MS_CCCR0","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_MS_CCCR1","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_MS_CCCR2","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_MS_CCCR3","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_FLAME_CCCR0","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_FLAME_CCCR1","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_FLAME_CCCR2","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_FLAME_CCCR3","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR0","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR1","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR2","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR3","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR4","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_IQ_CCCR5","","See Section 18.12.3, CCCR MSRs.",null,null],[17,"MSR_PERF_FIXED_CTR_CTRL","","Fixed-Function-Counter Control Register (R/W)",null,null],[17,"IA32_FIXED_CTR_CTRL","","Fixed-Function-Counter Control Register (R/W)  See Table …",null,null],[17,"MSR_PERF_GLOBAL_STAUS","","See Section 18.4.2, Global Counter Control Facilities.",null,null],[17,"IA32_PERF_GLOBAL_STAUS","","See Table 35-2. See Section 18.4.2, Global Counter …",null,null],[17,"MSR_PERF_GLOBAL_CTRL","","See Section 18.4.2, Global Counter Control Facilities.",null,null],[17,"IA32_PERF_GLOBAL_CTRL","","See Table 35-2. See Section 18.4.2, Global Counter …",null,null],[17,"MSR_PERF_GLOBAL_OVF_CTRL","","See Section 18.4.2, Global Counter Control Facilities.",null,null],[17,"IA32_PERF_GLOBAL_OVF_CTRL","","See Table 35-2. See Section 18.4.2, Global Counter …",null,null],[17,"MSR_UNCORE_PERF_GLOBAL_CTRL","","See Section 18.7.2.1, Uncore Performance Monitoring  …",null,null],[17,"MSR_UNC_PERF_GLOBAL_CTRL","","Uncore PMU global control",null,null],[17,"MSR_UNCORE_PERF_GLOBAL_STATUS","","See Section 18.7.2.1, Uncore Performance Monitoring  …",null,null],[17,"MSR_UNC_PERF_GLOBAL_STATUS","","Uncore PMU main status",null,null],[17,"MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","","See Section 18.7.2.1, Uncore Performance Monitoring  …",null,null],[17,"MSR_UNCORE_FIXED_CTR0","","See Section 18.7.2.1, Uncore Performance Monitoring  …",null,null],[17,"MSR_W_PMON_FIXED_CTR","","Uncore W-box perfmon fixed counter",null,null],[17,"MSR_UNC_PERF_FIXED_CTRL","","Uncore fixed counter control (R/W)",null,null],[17,"MSR_UNCORE_FIXED_CTR_CTRL","","See Section 18.7.2.1, Uncore Performance Monitoring  …",null,null],[17,"MSR_W_PMON_FIXED_CTR_CTL","","Uncore U-box perfmon fixed counter control MSR",null,null],[17,"MSR_UNC_PERF_FIXED_CTR","","Uncore fixed counter",null,null],[17,"MSR_UNCORE_ADDR_OPCODE_MATCH","","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.",null,null],[17,"MSR_UNC_CBO_CONFIG","","Uncore C-Box configuration information (R/O)",null,null],[17,"MSR_PEBS_NUM_ALT","","",null,null],[17,"MSR_BSU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_BSU_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FSB_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FSB_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FIRM_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FIRM_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FLAME_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_FLAME_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_DAC_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_DAC_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_MOB_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_MOB_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_PMH_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_PMH_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_SAAT_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_SAAT_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_U2L_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC0","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_UNC_ARB_PER_CTR0","","Uncore Arb unit, performance counter 0",null,null],[17,"MSR_U2L_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC1","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_UNC_ARB_PER_CTR1","","Uncore Arb unit, performance counter 1",null,null],[17,"MSR_BPU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC2","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_UNC_ARB_PERFEVTSEL0","","Uncore Arb unit, counter 0 event select MSR",null,null],[17,"MSR_BPU_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC3","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_UNC_ARB_PERFEVTSEL1","","Uncore Arb unit, counter 1 event select MSR",null,null],[17,"MSR_IS_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC4","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_IS_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC5","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_ITLB_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC6","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_ITLB_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PMC7","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_CRU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_IQ_ESCR0","","See Section 18.12.1, ESCR MSRs. This MSR is not available …",null,null],[17,"MSR_IQ_ESCR1","","See Section 18.12.1, ESCR MSRs. This MSR is not available …",null,null],[17,"MSR_RAT_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_RAT_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_SSU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_MS_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL0","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_MS_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL1","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_TBPU_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL2","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_TBPU_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL3","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_TC_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL4","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_TC_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_UNCORE_PERFEVTSEL5","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_UNCORE_PERFEVTSEL6","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_UNCORE_PERFEVTSEL7","","See Section 18.7.2.2, Uncore Performance Event …",null,null],[17,"MSR_IX_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_ALF_ESCR0","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_ALF_ESCR1","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR2","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR3","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR4","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"MSR_CRU_ESCR5","","See Section 18.12.1, ESCR MSRs.",null,null],[17,"IA32_PEBS_ENABLE","","",null,null],[17,"MSR_PEBS_ENABLE","","Precise Event-Based Sampling (PEBS) (R/W)  Controls the …",null,null],[17,"MSR_PEBS_MATRIX_VERT","","See Table 19-26.",null,null],[17,"MSR_PEBS_LD_LAT","","see See Section 18.7.1.2, Load Latency Performance …",null,null],[17,"MSR_PKG_C3_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_PKG_C2_RESIDENCY","","Package C2 Residency Note: C-state values are processor …",null,null],[17,"MSR_PKG_C6C_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_PKG_C4_RESIDENCY","","Package C4 Residency Note: C-state values are processor …",null,null],[17,"MSR_PKG_C7_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_PKG_C6_RESIDENCY","","Package C6 Residency Note: C-state values are processor …",null,null],[17,"MSR_CORE_C3_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_CORE_C4_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_CORE_C6_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_CORE_C7_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MC0_CTL","","",null,null],[17,"IA32_MC0_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC0_STATUS","","",null,null],[17,"IA32_MC0_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MC0_ADDR","","",null,null],[17,"IA32_MC0_ADDR1","","P6 Family Processors",null,null],[17,"IA32_MC0_ADDR","","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The …",null,null],[17,"MC0_MISC","","Defined in MCA architecture but not implemented in the P6 …",null,null],[17,"IA32_MC0_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …",null,null],[17,"MSR_MC0_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MC1_CTL","","",null,null],[17,"IA32_MC1_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC1_STATUS","","Bit definitions same as MC0_STATUS.",null,null],[17,"IA32_MC1_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MC1_ADDR","","",null,null],[17,"IA32_MC1_ADDR2","","P6 Family Processors",null,null],[17,"IA32_MC1_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …",null,null],[17,"MC1_MISC","","Defined in MCA architecture but not implemented in the P6 …",null,null],[17,"IA32_MC1_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …",null,null],[17,"MSR_MC1_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MC2_CTL","","",null,null],[17,"IA32_MC2_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC2_STATUS","","Bit definitions same as MC0_STATUS.",null,null],[17,"IA32_MC2_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MC2_ADDR","","",null,null],[17,"IA32_MC2_ADDR1","","P6 Family Processors",null,null],[17,"IA32_MC2_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …",null,null],[17,"MC2_MISC","","Defined in MCA architecture but not implemented in the P6 …",null,null],[17,"IA32_MC2_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …",null,null],[17,"MSR_MC2_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MC4_CTL","","",null,null],[17,"IA32_MC3_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC4_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC4_STATUS","","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, …",null,null],[17,"IA32_MC3_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MSR_MC4_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.",null,null],[17,"MC4_ADDR","","Defined in MCA architecture but not implemented in P6 …",null,null],[17,"IA32_MC3_ADDR1","","P6 Family Processors",null,null],[17,"IA32_MC3_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …",null,null],[17,"MSR_MC4_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …",null,null],[17,"MC4_MISC","","Defined in MCA architecture but not implemented in the P6 …",null,null],[17,"IA32_MC3_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …",null,null],[17,"MC3_CTL","","",null,null],[17,"IA32_MC4_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC3_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MC3_STATUS","","Bit definitions same as MC0_STATUS.",null,null],[17,"IA32_MC4_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MSR_MC3_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.",null,null],[17,"MC3_ADDR","","",null,null],[17,"IA32_MC4_ADDR1","","P6 Family Processors",null,null],[17,"IA32_MC4_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …",null,null],[17,"MSR_MC3_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …",null,null],[17,"MSR_MC3_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MC3_MISC","","Defined in MCA architecture but not implemented in the P6 …",null,null],[17,"IA32_MC4_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The …",null,null],[17,"MSR_MC4_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC5_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC5_CTL","","06_0FH",null,null],[17,"MSR_MC5_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC5_STATUS","","06_0FH",null,null],[17,"MSR_MC5_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …",null,null],[17,"IA32_MC5_ADDR1","","06_0FH",null,null],[17,"MSR_MC5_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC5_MISC","","06_0FH",null,null],[17,"IA32_MC6_CTL","","06_1DH",null,null],[17,"MSR_MC6_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC6_STATUS","","06_1DH",null,null],[17,"MSR_MC6_STATUS","","Apply to Intel Xeon processor 7400 series (processor …",null,null],[17,"IA32_MC6_ADDR1","","06_1DH",null,null],[17,"MSR_MC6_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC6_MISC","","Misc MAC information of Integrated I/O. (R/O) see Section …",null,null],[17,"MSR_MC6_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC7_CTL","","06_1AH",null,null],[17,"MSR_MC7_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC7_STATUS","","06_1AH",null,null],[17,"MSR_MC7_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC7_ADDR1","","06_1AH",null,null],[17,"MSR_MC7_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC7_MISC","","06_1AH",null,null],[17,"MSR_MC7_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC8_CTL","","06_1AH",null,null],[17,"MSR_MC8_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC8_STATUS","","06_1AH",null,null],[17,"MSR_MC8_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC8_ADDR1","","06_1AH",null,null],[17,"MSR_MC8_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC8_MISC","","06_1AH",null,null],[17,"MSR_MC8_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC9_CTL","","06_2EH",null,null],[17,"MSR_MC9_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC9_STATUS","","06_2EH",null,null],[17,"MSR_MC9_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC9_ADDR1","","06_2EH",null,null],[17,"MSR_MC9_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC9_MISC","","06_2EH",null,null],[17,"MSR_MC9_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC10_CTL","","06_2EH",null,null],[17,"MSR_MC10_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC10_STATUS","","06_2EH",null,null],[17,"MSR_MC10_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC10_ADDR1","","06_2EH",null,null],[17,"MSR_MC10_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC10_MISC","","06_2EH",null,null],[17,"MSR_MC10_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC11_CTL","","06_2EH",null,null],[17,"MSR_MC11_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC11_STATUS","","06_2EH",null,null],[17,"MSR_MC11_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC11_ADDR1","","06_2EH",null,null],[17,"MSR_MC11_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC11_MISC","","06_2EH",null,null],[17,"MSR_MC11_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC12_CTL","","06_2EH",null,null],[17,"MSR_MC12_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC12_STATUS","","06_2EH",null,null],[17,"MSR_MC12_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC12_ADDR1","","06_2EH",null,null],[17,"MSR_MC12_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC12_MISC","","06_2EH",null,null],[17,"MSR_MC12_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC13_CTL","","06_2EH",null,null],[17,"MSR_MC13_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC13_STATUS","","06_2EH",null,null],[17,"MSR_MC13_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC13_ADDR1","","06_2EH",null,null],[17,"MSR_MC13_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC13_MISC","","06_2EH",null,null],[17,"MSR_MC13_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC14_CTL","","06_2EH",null,null],[17,"MSR_MC14_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC14_STATUS","","06_2EH",null,null],[17,"MSR_MC14_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC14_ADDR1","","06_2EH",null,null],[17,"MSR_MC14_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC14_MISC","","06_2EH",null,null],[17,"MSR_MC14_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC15_CTL","","06_2EH",null,null],[17,"MSR_MC15_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC15_STATUS","","06_2EH",null,null],[17,"MSR_MC15_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC15_ADDR1","","06_2EH",null,null],[17,"MSR_MC15_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC15_MISC","","06_2EH",null,null],[17,"MSR_MC15_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC16_CTL","","06_2EH",null,null],[17,"MSR_MC16_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC16_STATUS","","06_2EH",null,null],[17,"MSR_MC16_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC16_ADDR1","","06_2EH",null,null],[17,"MSR_MC16_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC16_MISC","","06_2EH",null,null],[17,"MSR_MC16_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC17_CTL","","06_2EH",null,null],[17,"MSR_MC17_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC17_STATUS","","06_2EH",null,null],[17,"MSR_MC17_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC17_ADDR1","","06_2EH",null,null],[17,"MSR_MC17_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC17_MISC","","06_2EH",null,null],[17,"MSR_MC17_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC18_CTL","","06_2EH",null,null],[17,"MSR_MC18_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC18_STATUS","","06_2EH",null,null],[17,"MSR_MC18_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC18_ADDR1","","06_2EH",null,null],[17,"MSR_MC18_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC18_MISC","","06_2EH",null,null],[17,"MSR_MC18_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC19_CTL","","06_2EH",null,null],[17,"MSR_MC19_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC19_STATUS","","06_2EH",null,null],[17,"MSR_MC19_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC19_ADDR1","","06_2EH",null,null],[17,"MSR_MC19_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC19_MISC","","06_2EH",null,null],[17,"MSR_MC19_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC20_CTL","","06_2EH",null,null],[17,"MSR_MC20_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC20_STATUS","","06_2EH",null,null],[17,"MSR_MC20_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC20_ADDR1","","06_2EH",null,null],[17,"MSR_MC20_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC20_MISC","","06_2EH",null,null],[17,"MSR_MC20_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_MC21_CTL","","06_2EH",null,null],[17,"MSR_MC21_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"IA32_MC21_STATUS","","06_2EH",null,null],[17,"MSR_MC21_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"IA32_MC21_ADDR1","","06_2EH",null,null],[17,"MSR_MC21_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"IA32_MC21_MISC","","06_2EH",null,null],[17,"MSR_MC21_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC22_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC22_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MSR_MC22_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC22_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC23_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC23_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MSR_MC23_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC23_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC24_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC24_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MSR_MC24_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC24_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC25_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC25_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MSR_MC25_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC25_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"MSR_MC26_CTL","","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.",null,null],[17,"MSR_MC26_STATUS","","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …",null,null],[17,"MSR_MC26_ADDR","","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.",null,null],[17,"MSR_MC26_MISC","","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.",null,null],[17,"IA32_VMX_BASIC","","Reporting Register of Basic VMX Capabilities (R/O) See …",null,null],[17,"IA32_VMX_PINBASED_CTLS","","Capability Reporting Register of Pin-based VM-execution  …",null,null],[17,"IA32_VMX_PROCBASED_CTLS","","Capability Reporting Register of Primary Processor-based  …",null,null],[17,"IA32_VMX_EXIT_CTLS","","Capability Reporting Register of VM-exit Controls (R/O) …",null,null],[17,"IA32_VMX_ENTRY_CTLS","","Capability Reporting Register of VM-entry Controls (R/O) …",null,null],[17,"IA32_VMX_MISC","","Reporting Register of Miscellaneous VMX Capabilities …",null,null],[17,"IA32_VMX_CR0_FIXED0","","Capability Reporting Register of CR0 Bits Fixed to 0 …",null,null],[17,"IA32_VMX_CRO_FIXED0","","If CPUID.01H:ECX.[bit 5] = 1",null,null],[17,"IA32_VMX_CR0_FIXED1","","Capability Reporting Register of CR0 Bits Fixed to 1 …",null,null],[17,"IA32_VMX_CRO_FIXED1","","If CPUID.01H:ECX.[bit 5] = 1",null,null],[17,"IA32_VMX_CR4_FIXED0","","Capability Reporting Register of CR4 Bits Fixed to 0 …",null,null],[17,"IA32_VMX_CR4_FIXED1","","Capability Reporting Register of CR4 Bits Fixed to 1 …",null,null],[17,"IA32_VMX_VMCS_ENUM","","Capability Reporting Register of VMCS Field Enumeration …",null,null],[17,"IA32_VMX_PROCBASED_CTLS2","","Capability Reporting Register of Secondary …",null,null],[17,"IA32_VMX_EPT_VPID_ENUM","","Capability Reporting Register of EPT and VPID (R/O)  See …",null,null],[17,"IA32_VMX_EPT_VPID_CAP","","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit …",null,null],[17,"IA32_VMX_TRUE_PINBASED_CTLS","","Capability Reporting Register of Pin-based VM-execution …",null,null],[17,"IA32_VMX_TRUE_PROCBASED_CTLS","","Capability Reporting Register of Primary Processor-based  …",null,null],[17,"IA32_VMX_TRUE_EXIT_CTLS","","Capability Reporting Register of VM-exit Flex Controls …",null,null],[17,"IA32_VMX_TRUE_ENTRY_CTLS","","Capability Reporting Register of VM-entry Flex Controls …",null,null],[17,"IA32_VMX_FMFUNC","","Capability Reporting Register of VM-function Controls …",null,null],[17,"IA32_VMX_VMFUNC","","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] …",null,null],[17,"IA32_A_PMC0","","(If CPUID.0AH: EAX[15:8] >  0) & IA32_PERF_CAPABILITIES[ …",null,null],[17,"IA32_A_PMC1","","(If CPUID.0AH: EAX[15:8] >  1) & IA32_PERF_CAPABILITIES[ …",null,null],[17,"IA32_A_PMC2","","(If CPUID.0AH: EAX[15:8] >  2) & IA32_PERF_CAPABILITIES[ …",null,null],[17,"IA32_A_PMC3","","(If CPUID.0AH: EAX[15:8] >  3) & IA32_PERF_CAPABILITIES[ …",null,null],[17,"IA32_A_PMC4","","(If CPUID.0AH: EAX[15:8] >  4) & IA32_PERF_CAPABILITIES[ …",null,null],[17,"IA32_A_PMC5","","(If CPUID.0AH: EAX[15:8] >  5) & IA32_PERF_CAPABILITIES[ …",null,null],[17,"IA32_A_PMC6","","(If CPUID.0AH: EAX[15:8] >  6) & IA32_PERF_CAPABILITIES[ …",null,null],[17,"IA32_A_PMC7","","(If CPUID.0AH: EAX[15:8] >  7) & IA32_PERF_CAPABILITIES[ …",null,null],[17,"MSR_SMM_FEATURE_CONTROL","","Enhanced SMM Feature Control (SMM-RW) Reports SMM …",null,null],[17,"MSR_SMM_DELAYED","","SMM Delayed (SMM-RO) Reports the interruptible state of …",null,null],[17,"MSR_SMM_BLOCKED","","SMM Blocked (SMM-RO) Reports the blocked state of all …",null,null],[17,"MSR_IA32_RTIT_OUTPUT_BASE","","Trace Output Base Register (R/W)",null,null],[17,"MSR_IA32_RTIT_OUTPUT_MASK_PTRS","","Trace Output Mask Pointers Register (R/W)",null,null],[17,"MSR_IA32_RTIT_CTL","","Trace Control Register (R/W)",null,null],[17,"MSR_IA32_RTIT_STATUS","","Tracing Status Register (R/W)",null,null],[17,"MSR_IA32_CR3_MATCH","","Trace Filter CR3 Match Register (R/W)",null,null],[17,"MSR_IA32_ADDR0_START","","Trace Start Address 0",null,null],[17,"MSR_IA32_ADDR0_END","","Trace End Address 0",null,null],[17,"MSR_IA32_ADDR1_START","","Trace Start Address 1",null,null],[17,"MSR_IA32_ADDR1_END","","Trace End Address 1",null,null],[17,"MSR_IA32_ADDR2_START","","Trace Start Address 3",null,null],[17,"MSR_IA32_ADDR2_END","","Trace End Address 3",null,null],[17,"MSR_IA32_ADDR3_START","","Trace Start Address 4",null,null],[17,"MSR_IA32_ADDR3_END","","Trace End Address 4",null,null],[17,"IA32_DS_AREA","","DS Save Area (R/W) See Table 35-2. Points to the DS …",null,null],[17,"MSR_RAPL_POWER_UNIT","","Unit Multipliers used in RAPL Interfaces (R/O)  See …",null,null],[17,"MSR_PKGC3_IRTL","","Package C3 Interrupt Response Limit (R/W)  Note: C-state …",null,null],[17,"MSR_PKGC6_IRTL","","Package C6 Interrupt Response Limit (R/W)  This MSR …",null,null],[17,"MSR_PKGC7_IRTL","","Package C7 Interrupt Response Limit (R/W)  This MSR …",null,null],[17,"MSR_PKG_POWER_LIMIT","","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, …",null,null],[17,"MSR_PKG_ENERGY_STATUS","","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL …",null,null],[17,"MSR_PKG_PERF_STATUS","","Package RAPL Perf Status (R/O)",null,null],[17,"MSR_PKG_POWER_INFO","","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package …",null,null],[17,"MSR_DRAM_POWER_LIMIT","","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, …",null,null],[17,"MSR_DRAM_ENERGY_STATUS","","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL …",null,null],[17,"MSR_DRAM_PERF_STATUS","","DRAM Performance Throttling Status (R/O) See Section …",null,null],[17,"MSR_DRAM_POWER_INFO","","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL …",null,null],[17,"MSR_PKG_C9_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_PKG_C10_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_PP0_POWER_LIMIT","","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, …",null,null],[17,"MSR_PP0_ENERGY_STATUS","","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …",null,null],[17,"MSR_PP0_POLICY","","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 …",null,null],[17,"MSR_PP0_PERF_STATUS","","PP0 Performance Throttling Status (R/O) See Section …",null,null],[17,"MSR_PP1_POWER_LIMIT","","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, …",null,null],[17,"MSR_PP1_ENERGY_STATUS","","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …",null,null],[17,"MSR_PP1_POLICY","","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 …",null,null],[17,"MSR_CONFIG_TDP_NOMINAL","","Nominal TDP Ratio (R/O)",null,null],[17,"MSR_CONFIG_TDP_LEVEL1","","ConfigTDP Level 1 ratio and power level (R/O)",null,null],[17,"MSR_CONFIG_TDP_LEVEL2","","ConfigTDP Level 2 ratio and power level (R/O)",null,null],[17,"MSR_CONFIG_TDP_CONTROL","","ConfigTDP Control (R/W)",null,null],[17,"MSR_TURBO_ACTIVATION_RATIO","","ConfigTDP Control (R/W)",null,null],[17,"MSR_CORE_C1_RESIDENCY","","Note: C-state values are processor specific C-state code …",null,null],[17,"MSR_LASTBRANCH_8_FROM_IP","","Last Branch Record 8 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_9_FROM_IP","","Last Branch Record 9 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_10_FROM_IP","","Last Branch Record 10 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_11_FROM_IP","","Last Branch Record 11 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_12_FROM_IP","","Last Branch Record 12 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_13_FROM_IP","","Last Branch Record 13 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_14_FROM_IP","","Last Branch Record 14 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_15_FROM_IP","","Last Branch Record 15 From IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_8_TO_IP","","Last Branch Record 8 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_9_TO_IP","","Last Branch Record 9 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_10_TO_IP","","Last Branch Record 10 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_11_TO_IP","","Last Branch Record 11 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_12_TO_IP","","Last Branch Record 12 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_13_TO_IP","","Last Branch Record 13 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_14_TO_IP","","Last Branch Record 14 To IP (R/W) See description of …",null,null],[17,"MSR_LASTBRANCH_15_TO_IP","","Last Branch Record 15 To IP (R/W) See description of …",null,null],[17,"IA32_TSC_DEADLINE","","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See …",null,null],[17,"MSR_UNC_CBO_0_PERFEVTSEL0","","Uncore C-Box 0, counter 0 event select MSR",null,null],[17,"MSR_UNC_CBO_0_PERFEVTSEL1","","Uncore C-Box 0, counter 1 event select MSR",null,null],[17,"MSR_UNC_CBO_0_PER_CTR0","","Uncore C-Box 0, performance counter 0",null,null],[17,"MSR_UNC_CBO_0_PER_CTR1","","Uncore C-Box 0, performance counter 1",null,null],[17,"MSR_UNC_CBO_1_PERFEVTSEL0","","Uncore C-Box 1, counter 0 event select MSR",null,null],[17,"MSR_UNC_CBO_1_PERFEVTSEL1","","Uncore C-Box 1, counter 1 event select MSR",null,null],[17,"MSR_UNC_CBO_1_PER_CTR0","","Uncore C-Box 1, performance counter 0",null,null],[17,"MSR_UNC_CBO_1_PER_CTR1","","Uncore C-Box 1, performance counter 1",null,null],[17,"MSR_UNC_CBO_2_PERFEVTSEL0","","Uncore C-Box 2, counter 0 event select MSR",null,null],[17,"MSR_UNC_CBO_2_PERFEVTSEL1","","Uncore C-Box 2, counter 1 event select MSR",null,null],[17,"MSR_UNC_CBO_2_PER_CTR0","","Uncore C-Box 2, performance counter 0",null,null],[17,"MSR_UNC_CBO_2_PER_CTR1","","Uncore C-Box 2, performance counter 1",null,null],[17,"MSR_UNC_CBO_3_PERFEVTSEL0","","Uncore C-Box 3, counter 0 event select MSR",null,null],[17,"MSR_UNC_CBO_3_PERFEVTSEL1","","Uncore C-Box 3, counter 1 event select MSR.",null,null],[17,"MSR_UNC_CBO_3_PER_CTR0","","Uncore C-Box 3, performance counter 0.",null,null],[17,"MSR_UNC_CBO_3_PER_CTR1","","Uncore C-Box 3, performance counter 1.",null,null],[17,"IA32_X2APIC_APICID","","x2APIC ID register (R/O) See x2APIC Specification.",null,null],[17,"IA32_X2APIC_VERSION","","x2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_TPR","","x2APIC Task Priority register (R/W)",null,null],[17,"IA32_X2APIC_PPR","","x2APIC Processor Priority register (R/O)",null,null],[17,"IA32_X2APIC_EOI","","x2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 …",null,null],[17,"IA32_X2APIC_LDR","","x2APIC Logical Destination register (R/O)",null,null],[17,"IA32_X2APIC_SIVR","","x2APIC Spurious Interrupt Vector register (R/W)",null,null],[17,"IA32_X2APIC_ISR0","","x2APIC In-Service register bits [31:0] (R/O)",null,null],[17,"IA32_X2APIC_ISR1","","x2APIC In-Service register bits [63:32] (R/O)",null,null],[17,"IA32_X2APIC_ISR2","","x2APIC In-Service register bits [95:64] (R/O)",null,null],[17,"IA32_X2APIC_ISR3","","x2APIC In-Service register bits [127:96] (R/O)",null,null],[17,"IA32_X2APIC_ISR4","","x2APIC In-Service register bits [159:128] (R/O)",null,null],[17,"IA32_X2APIC_ISR5","","x2APIC In-Service register bits [191:160] (R/O)",null,null],[17,"IA32_X2APIC_ISR6","","x2APIC In-Service register bits [223:192] (R/O)",null,null],[17,"IA32_X2APIC_ISR7","","x2APIC In-Service register bits [255:224] (R/O)",null,null],[17,"IA32_X2APIC_TMR0","","x2APIC Trigger Mode register bits [31:0] (R/O)",null,null],[17,"IA32_X2APIC_TMR1","","x2APIC Trigger Mode register bits [63:32] (R/O)",null,null],[17,"IA32_X2APIC_TMR2","","x2APIC Trigger Mode register bits [95:64] (R/O)",null,null],[17,"IA32_X2APIC_TMR3","","x2APIC Trigger Mode register bits [127:96] (R/O)",null,null],[17,"IA32_X2APIC_TMR4","","x2APIC Trigger Mode register bits [159:128] (R/O)",null,null],[17,"IA32_X2APIC_TMR5","","x2APIC Trigger Mode register bits [191:160] (R/O)",null,null],[17,"IA32_X2APIC_TMR6","","x2APIC Trigger Mode register bits [223:192] (R/O)",null,null],[17,"IA32_X2APIC_TMR7","","x2APIC Trigger Mode register bits [255:224] (R/O)",null,null],[17,"IA32_X2APIC_IRR0","","x2APIC Interrupt Request register bits [31:0] (R/O)",null,null],[17,"IA32_X2APIC_IRR1","","x2APIC Interrupt Request register bits [63:32] (R/O)",null,null],[17,"IA32_X2APIC_IRR2","","x2APIC Interrupt Request register bits [95:64] (R/O)",null,null],[17,"IA32_X2APIC_IRR3","","x2APIC Interrupt Request register bits [127:96] (R/O)",null,null],[17,"IA32_X2APIC_IRR4","","x2APIC Interrupt Request register bits [159:128] (R/O)",null,null],[17,"IA32_X2APIC_IRR5","","x2APIC Interrupt Request register bits [191:160] (R/O)",null,null],[17,"IA32_X2APIC_IRR6","","x2APIC Interrupt Request register bits [223:192] (R/O)",null,null],[17,"IA32_X2APIC_IRR7","","x2APIC Interrupt Request register bits [255:224] (R/O)",null,null],[17,"IA32_X2APIC_ESR","","Error Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_LVT_CMCI","","x2APIC LVT Corrected Machine Check Interrupt register …",null,null],[17,"IA32_X2APIC_ICR","","x2APIC Interrupt Command register (R/W)",null,null],[17,"IA32_X2APIC_LVT_TIMER","","x2APIC LVT Timer Interrupt register (R/W)",null,null],[17,"IA32_X2APIC_LVT_THERMAL","","x2APIC LVT Thermal Sensor Interrupt register (R/W)",null,null],[17,"IA32_X2APIC_LVT_PMI","","x2APIC LVT Performance Monitor register (R/W)",null,null],[17,"IA32_X2APIC_LVT_LINT0","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_LVT_LINT1","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_LVT_ERROR","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"IA32_X2APIC_INIT_COUNT","","x2APIC Initial Count register (R/W)",null,null],[17,"IA32_X2APIC_CUR_COUNT","","x2APIC Current Count register (R/O)",null,null],[17,"IA32_X2APIC_DIV_CONF","","x2APIC Divide Configuration register (R/W)",null,null],[17,"IA32_X2APIC_SELF_IPI","","If ( CPUID.01H:ECX.[bit 21]  = 1 )",null,null],[17,"MSR_U_PMON_GLOBAL_CTRL","","Uncore U-box perfmon global control MSR.",null,null],[17,"MSR_U_PMON_GLOBAL_STATUS","","Uncore U-box perfmon global status MSR.",null,null],[17,"MSR_U_PMON_GLOBAL_OVF_CTRL","","Uncore U-box perfmon global overflow control MSR.",null,null],[17,"MSR_U_PMON_EVNT_SEL","","Uncore U-box perfmon event select MSR.",null,null],[17,"MSR_U_PMON_CTR","","Uncore U-box perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_BOX_CTRL","","Uncore B-box 0 perfmon local box control MSR.",null,null],[17,"MSR_B0_PMON_BOX_STATUS","","Uncore B-box 0 perfmon local box status MSR.",null,null],[17,"MSR_B0_PMON_BOX_OVF_CTRL","","Uncore B-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_B0_PMON_EVNT_SEL0","","Uncore B-box 0 perfmon event select MSR.",null,null],[17,"MSR_B0_PMON_CTR0","","Uncore B-box 0 perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_EVNT_SEL1","","Uncore B-box 0 perfmon event select MSR.",null,null],[17,"MSR_B0_PMON_CTR1","","Uncore B-box 0 perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_EVNT_SEL2","","Uncore B-box 0 perfmon event select MSR.",null,null],[17,"MSR_B0_PMON_CTR2","","Uncore B-box 0 perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_EVNT_SEL3","","Uncore B-box 0 perfmon event select MSR.",null,null],[17,"MSR_B0_PMON_CTR3","","Uncore B-box 0 perfmon counter MSR.",null,null],[17,"MSR_S0_PMON_BOX_CTRL","","Uncore S-box 0 perfmon local box control MSR.",null,null],[17,"MSR_S0_PMON_BOX_STATUS","","Uncore S-box 0 perfmon local box status MSR.",null,null],[17,"MSR_S0_PMON_BOX_OVF_CTRL","","Uncore S-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_S0_PMON_EVNT_SEL0","","Uncore S-box 0 perfmon event select MSR.",null,null],[17,"MSR_S0_PMON_CTR0","","Uncore S-box 0 perfmon counter MSR.",null,null],[17,"MSR_S0_PMON_EVNT_SEL1","","Uncore S-box 0 perfmon event select MSR.",null,null],[17,"MSR_S0_PMON_CTR1","","Uncore S-box 0 perfmon counter MSR.",null,null],[17,"MSR_S0_PMON_EVNT_SEL2","","Uncore S-box 0 perfmon event select MSR.",null,null],[17,"MSR_S0_PMON_CTR2","","Uncore S-box 0 perfmon counter MSR.",null,null],[17,"MSR_S0_PMON_EVNT_SEL3","","Uncore S-box 0 perfmon event select MSR.",null,null],[17,"MSR_S0_PMON_CTR3","","Uncore S-box 0 perfmon counter MSR.",null,null],[17,"MSR_B1_PMON_BOX_CTRL","","Uncore B-box 1 perfmon local box control MSR.",null,null],[17,"MSR_B1_PMON_BOX_STATUS","","Uncore B-box 1 perfmon local box status MSR.",null,null],[17,"MSR_B1_PMON_BOX_OVF_CTRL","","Uncore B-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_B1_PMON_EVNT_SEL0","","Uncore B-box 1 perfmon event select MSR.",null,null],[17,"MSR_B1_PMON_CTR0","","Uncore B-box 1 perfmon counter MSR.",null,null],[17,"MSR_B1_PMON_EVNT_SEL1","","Uncore B-box 1 perfmon event select MSR.",null,null],[17,"MSR_B1_PMON_CTR1","","Uncore B-box 1 perfmon counter MSR.",null,null],[17,"MSR_B1_PMON_EVNT_SEL2","","Uncore B-box 1 perfmon event select MSR.",null,null],[17,"MSR_B1_PMON_CTR2","","Uncore B-box 1 perfmon counter MSR.",null,null],[17,"MSR_B1_PMON_EVNT_SEL3","","Uncore B-box 1vperfmon event select MSR.",null,null],[17,"MSR_B1_PMON_CTR3","","Uncore B-box 1 perfmon counter MSR.",null,null],[17,"MSR_W_PMON_BOX_CTRL","","Uncore W-box perfmon local box control MSR.",null,null],[17,"MSR_W_PMON_BOX_STATUS","","Uncore W-box perfmon local box status MSR.",null,null],[17,"MSR_W_PMON_BOX_OVF_CTRL","","Uncore W-box perfmon local box overflow control MSR.",null,null],[17,"IA32_QM_EVTSEL","","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )",null,null],[17,"IA32_QM_CTR","","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )",null,null],[17,"IA32_PQR_ASSOC","","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )",null,null],[17,"MSR_W_PMON_EVNT_SEL0","","Uncore W-box perfmon event select MSR.",null,null],[17,"MSR_W_PMON_CTR0","","Uncore W-box perfmon counter MSR.",null,null],[17,"MSR_W_PMON_EVNT_SEL1","","Uncore W-box perfmon event select MSR.",null,null],[17,"MSR_W_PMON_CTR1","","Uncore W-box perfmon counter MSR.",null,null],[17,"MSR_W_PMON_EVNT_SEL2","","Uncore W-box perfmon event select MSR.",null,null],[17,"MSR_W_PMON_CTR2","","Uncore W-box perfmon counter MSR.",null,null],[17,"MSR_W_PMON_EVNT_SEL3","","Uncore W-box perfmon event select MSR.",null,null],[17,"MSR_W_PMON_CTR3","","Uncore W-box perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_BOX_CTRL","","Uncore M-box 0 perfmon local box control MSR.",null,null],[17,"MSR_M0_PMON_BOX_STATUS","","Uncore M-box 0 perfmon local box status MSR.",null,null],[17,"MSR_M0_PMON_BOX_OVF_CTRL","","Uncore M-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_M0_PMON_TIMESTAMP","","Uncore M-box 0 perfmon time stamp unit select MSR.",null,null],[17,"MSR_M0_PMON_DSP","","Uncore M-box 0 perfmon DSP unit select MSR.",null,null],[17,"MSR_M0_PMON_ISS","","Uncore M-box 0 perfmon ISS unit select MSR.",null,null],[17,"MSR_M0_PMON_MAP","","Uncore M-box 0 perfmon MAP unit select MSR.",null,null],[17,"MSR_M0_PMON_MSC_THR","","Uncore M-box 0 perfmon MIC THR select MSR.",null,null],[17,"MSR_M0_PMON_PGT","","Uncore M-box 0 perfmon PGT unit select MSR.",null,null],[17,"MSR_M0_PMON_PLD","","Uncore M-box 0 perfmon PLD unit select MSR.",null,null],[17,"MSR_M0_PMON_ZDP","","Uncore M-box 0 perfmon ZDP unit select MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL0","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR0","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL1","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR1","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL2","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR2","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL3","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR3","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL4","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR4","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_M0_PMON_EVNT_SEL5","","Uncore M-box 0 perfmon event select MSR.",null,null],[17,"MSR_M0_PMON_CTR5","","Uncore M-box 0 perfmon counter MSR.",null,null],[17,"MSR_S1_PMON_BOX_CTRL","","Uncore S-box 1 perfmon local box control MSR.",null,null],[17,"MSR_S1_PMON_BOX_STATUS","","Uncore S-box 1 perfmon local box status MSR.",null,null],[17,"MSR_S1_PMON_BOX_OVF_CTRL","","Uncore S-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_S1_PMON_EVNT_SEL0","","Uncore S-box 1 perfmon event select MSR.",null,null],[17,"MSR_S1_PMON_CTR0","","Uncore S-box 1 perfmon counter MSR.",null,null],[17,"MSR_S1_PMON_EVNT_SEL1","","Uncore S-box 1 perfmon event select MSR.",null,null],[17,"MSR_S1_PMON_CTR1","","Uncore S-box 1 perfmon counter MSR.",null,null],[17,"MSR_S1_PMON_EVNT_SEL2","","Uncore S-box 1 perfmon event select MSR.",null,null],[17,"MSR_S1_PMON_CTR2","","Uncore S-box 1 perfmon counter MSR.",null,null],[17,"MSR_S1_PMON_EVNT_SEL3","","Uncore S-box 1 perfmon event select MSR.",null,null],[17,"MSR_S1_PMON_CTR3","","Uncore S-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_BOX_CTRL","","Uncore M-box 1 perfmon local box control MSR.",null,null],[17,"MSR_M1_PMON_BOX_STATUS","","Uncore M-box 1 perfmon local box status MSR.",null,null],[17,"MSR_M1_PMON_BOX_OVF_CTRL","","Uncore M-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_M1_PMON_TIMESTAMP","","Uncore M-box 1 perfmon time stamp unit select MSR.",null,null],[17,"MSR_M1_PMON_DSP","","Uncore M-box 1 perfmon DSP unit select MSR.",null,null],[17,"MSR_M1_PMON_ISS","","Uncore M-box 1 perfmon ISS unit select MSR.",null,null],[17,"MSR_M1_PMON_MAP","","Uncore M-box 1 perfmon MAP unit select MSR.",null,null],[17,"MSR_M1_PMON_MSC_THR","","Uncore M-box 1 perfmon MIC THR select MSR.",null,null],[17,"MSR_M1_PMON_PGT","","Uncore M-box 1 perfmon PGT unit select MSR.",null,null],[17,"MSR_M1_PMON_PLD","","Uncore M-box 1 perfmon PLD unit select MSR.",null,null],[17,"MSR_M1_PMON_ZDP","","Uncore M-box 1 perfmon ZDP unit select MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL0","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR0","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL1","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR1","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL2","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR2","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL3","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR3","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL4","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR4","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_M1_PMON_EVNT_SEL5","","Uncore M-box 1 perfmon event select MSR.",null,null],[17,"MSR_M1_PMON_CTR5","","Uncore M-box 1 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_BOX_CTRL","","Uncore C-box 0 perfmon local box control MSR.",null,null],[17,"MSR_C0_PMON_BOX_STATUS","","Uncore C-box 0 perfmon local box status MSR.",null,null],[17,"MSR_C0_PMON_BOX_OVF_CTRL","","Uncore C-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL0","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR0","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL1","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR1","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL2","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR2","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL3","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR3","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL4","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR4","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C0_PMON_EVNT_SEL5","","Uncore C-box 0 perfmon event select MSR.",null,null],[17,"MSR_C0_PMON_CTR5","","Uncore C-box 0 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_BOX_CTRL","","Uncore C-box 4 perfmon local box control MSR.",null,null],[17,"MSR_C4_PMON_BOX_STATUS","","Uncore C-box 4 perfmon local box status MSR.",null,null],[17,"MSR_C4_PMON_BOX_OVF_CTRL","","Uncore C-box 4 perfmon local box overflow control MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL0","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR0","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL1","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR1","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL2","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR2","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL3","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR3","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL4","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR4","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C4_PMON_EVNT_SEL5","","Uncore C-box 4 perfmon event select MSR.",null,null],[17,"MSR_C4_PMON_CTR5","","Uncore C-box 4 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_BOX_CTRL","","Uncore C-box 2 perfmon local box control MSR.",null,null],[17,"MSR_C2_PMON_BOX_STATUS","","Uncore C-box 2 perfmon local box status MSR.",null,null],[17,"MSR_C2_PMON_BOX_OVF_CTRL","","Uncore C-box 2 perfmon local box overflow control MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL0","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR0","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL1","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR1","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL2","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR2","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL3","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR3","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL4","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR4","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C2_PMON_EVNT_SEL5","","Uncore C-box 2 perfmon event select MSR.",null,null],[17,"MSR_C2_PMON_CTR5","","Uncore C-box 2 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_BOX_CTRL","","Uncore C-box 6 perfmon local box control MSR.",null,null],[17,"MSR_C6_PMON_BOX_STATUS","","Uncore C-box 6 perfmon local box status MSR.",null,null],[17,"MSR_C6_PMON_BOX_OVF_CTRL","","Uncore C-box 6 perfmon local box overflow control MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL0","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR0","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL1","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR1","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL2","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR2","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL3","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR3","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL4","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR4","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C6_PMON_EVNT_SEL5","","Uncore C-box 6 perfmon event select MSR.",null,null],[17,"MSR_C6_PMON_CTR5","","Uncore C-box 6 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_BOX_CTRL","","Uncore C-box 1 perfmon local box control MSR.",null,null],[17,"MSR_C1_PMON_BOX_STATUS","","Uncore C-box 1 perfmon local box status MSR.",null,null],[17,"MSR_C1_PMON_BOX_OVF_CTRL","","Uncore C-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL0","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR0","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL1","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR1","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL2","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR2","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL3","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR3","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL4","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR4","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C1_PMON_EVNT_SEL5","","Uncore C-box 1 perfmon event select MSR.",null,null],[17,"MSR_C1_PMON_CTR5","","Uncore C-box 1 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_BOX_CTRL","","Uncore C-box 5 perfmon local box control MSR.",null,null],[17,"MSR_C5_PMON_BOX_STATUS","","Uncore C-box 5 perfmon local box status MSR.",null,null],[17,"MSR_C5_PMON_BOX_OVF_CTRL","","Uncore C-box 5 perfmon local box overflow control MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL0","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR0","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL1","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR1","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL2","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR2","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL3","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR3","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL4","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR4","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C5_PMON_EVNT_SEL5","","Uncore C-box 5 perfmon event select MSR.",null,null],[17,"MSR_C5_PMON_CTR5","","Uncore C-box 5 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_BOX_CTRL","","Uncore C-box 3 perfmon local box control MSR.",null,null],[17,"MSR_C3_PMON_BOX_STATUS","","Uncore C-box 3 perfmon local box status MSR.",null,null],[17,"MSR_C3_PMON_BOX_OVF_CTRL","","Uncore C-box 3 perfmon local box overflow control MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL0","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR0","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL1","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR1","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL2","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR2","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL3","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR3","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL4","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR4","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C3_PMON_EVNT_SEL5","","Uncore C-box 3 perfmon event select MSR.",null,null],[17,"MSR_C3_PMON_CTR5","","Uncore C-box 3 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_BOX_CTRL","","Uncore C-box 7 perfmon local box control MSR.",null,null],[17,"MSR_C7_PMON_BOX_STATUS","","Uncore C-box 7 perfmon local box status MSR.",null,null],[17,"MSR_C7_PMON_BOX_OVF_CTRL","","Uncore C-box 7 perfmon local box overflow control MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL0","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR0","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL1","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR1","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL2","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR2","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL3","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR3","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL4","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR4","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_C7_PMON_EVNT_SEL5","","Uncore C-box 7 perfmon event select MSR.",null,null],[17,"MSR_C7_PMON_CTR5","","Uncore C-box 7 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_BOX_CTRL","","Uncore R-box 0 perfmon local box control MSR.",null,null],[17,"MSR_R0_PMON_BOX_STATUS","","Uncore R-box 0 perfmon local box status MSR.",null,null],[17,"MSR_R0_PMON_BOX_OVF_CTRL","","Uncore R-box 0 perfmon local box overflow control MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P0","","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P1","","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P2","","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P3","","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P4","","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P5","","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P6","","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.",null,null],[17,"MSR_R0_PMON_IPERF0_P7","","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.",null,null],[17,"MSR_R0_PMON_QLX_P0","","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.",null,null],[17,"MSR_R0_PMON_QLX_P1","","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.",null,null],[17,"MSR_R0_PMON_QLX_P2","","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.",null,null],[17,"MSR_R0_PMON_QLX_P3","","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL0","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR0","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL1","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR1","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL2","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR2","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL3","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR3","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL4","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR4","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL5","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR5","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL6","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR6","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R0_PMON_EVNT_SEL7","","Uncore R-box 0 perfmon event select MSR.",null,null],[17,"MSR_R0_PMON_CTR7","","Uncore R-box 0 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_BOX_CTRL","","Uncore R-box 1 perfmon local box control MSR.",null,null],[17,"MSR_R1_PMON_BOX_STATUS","","Uncore R-box 1 perfmon local box status MSR.",null,null],[17,"MSR_R1_PMON_BOX_OVF_CTRL","","Uncore R-box 1 perfmon local box overflow control MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P8","","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P9","","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P10","","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P11","","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P12","","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P13","","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P14","","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.",null,null],[17,"MSR_R1_PMON_IPERF1_P15","","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.",null,null],[17,"MSR_R1_PMON_QLX_P4","","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.",null,null],[17,"MSR_R1_PMON_QLX_P5","","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.",null,null],[17,"MSR_R1_PMON_QLX_P6","","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.",null,null],[17,"MSR_R1_PMON_QLX_P7","","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL8","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR8","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL9","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR9","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL10","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR10","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL11","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR11","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL12","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR12","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL13","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR13","","Uncore R-box 1perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL14","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR14","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_R1_PMON_EVNT_SEL15","","Uncore R-box 1 perfmon event select MSR.",null,null],[17,"MSR_R1_PMON_CTR15","","Uncore R-box 1 perfmon counter MSR.",null,null],[17,"MSR_B0_PMON_MATCH","","Uncore B-box 0 perfmon local box match MSR.",null,null],[17,"MSR_B0_PMON_MASK","","Uncore B-box 0 perfmon local box mask MSR.",null,null],[17,"MSR_S0_PMON_MATCH","","Uncore S-box 0 perfmon local box match MSR.",null,null],[17,"MSR_S0_PMON_MASK","","Uncore S-box 0 perfmon local box mask MSR.",null,null],[17,"MSR_B1_PMON_MATCH","","Uncore B-box 1 perfmon local box match MSR.",null,null],[17,"MSR_B1_PMON_MASK","","Uncore B-box 1 perfmon local box mask MSR.",null,null],[17,"MSR_M0_PMON_MM_CONFIG","","Uncore M-box 0 perfmon local box address match/mask …",null,null],[17,"MSR_M0_PMON_ADDR_MATCH","","Uncore M-box 0 perfmon local box address match MSR.",null,null],[17,"MSR_M0_PMON_ADDR_MASK","","Uncore M-box 0 perfmon local box address mask MSR.",null,null],[17,"MSR_S1_PMON_MATCH","","Uncore S-box 1 perfmon local box match MSR.",null,null],[17,"MSR_S1_PMON_MASK","","Uncore S-box 1 perfmon local box mask MSR.",null,null],[17,"MSR_M1_PMON_MM_CONFIG","","Uncore M-box 1 perfmon local box address match/mask …",null,null],[17,"MSR_M1_PMON_ADDR_MATCH","","Uncore M-box 1 perfmon local box address match MSR.",null,null],[17,"MSR_M1_PMON_ADDR_MASK","","Uncore M-box 1 perfmon local box address mask MSR.",null,null],[17,"MSR_C8_PMON_BOX_CTRL","","Uncore C-box 8 perfmon local box control MSR.",null,null],[17,"MSR_C8_PMON_BOX_STATUS","","Uncore C-box 8 perfmon local box status MSR.",null,null],[17,"MSR_C8_PMON_BOX_OVF_CTRL","","Uncore C-box 8 perfmon local box overflow control MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL0","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR0","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL1","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR1","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL2","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR2","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL3","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR3","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL4","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR4","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C8_PMON_EVNT_SEL5","","Uncore C-box 8 perfmon event select MSR.",null,null],[17,"MSR_C8_PMON_CTR5","","Uncore C-box 8 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_BOX_CTRL","","Uncore C-box 9 perfmon local box control MSR.",null,null],[17,"MSR_C9_PMON_BOX_STATUS","","Uncore C-box 9 perfmon local box status MSR.",null,null],[17,"MSR_C9_PMON_BOX_OVF_CTRL","","Uncore C-box 9 perfmon local box overflow control MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL0","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR0","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL1","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR1","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL2","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR2","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL3","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR3","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL4","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR4","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_C9_PMON_EVNT_SEL5","","Uncore C-box 9 perfmon event select MSR.",null,null],[17,"MSR_C9_PMON_CTR5","","Uncore C-box 9 perfmon counter MSR.",null,null],[17,"MSR_EMON_L3_CTR_CTL0","","GBUSQ Event Control and Counter  Register (R/W) See …",null,null],[17,"MSR_IFSB_BUSQ0","","IFSB BUSQ Event Control and Counter  Register (R/W) See …",null,null],[17,"MSR_EMON_L3_CTR_CTL1","","GBUSQ Event Control/Counter Register (R/W) Apply to Intel …",null,null],[17,"MSR_IFSB_BUSQ1","","IFSB BUSQ Event Control and Counter Register (R/W)",null,null],[17,"MSR_EMON_L3_CTR_CTL2","","GSNPQ Event Control and Counter  Register (R/W)  See …",null,null],[17,"MSR_IFSB_SNPQ0","","IFSB SNPQ Event Control and Counter  Register (R/W)  See …",null,null],[17,"MSR_EMON_L3_CTR_CTL3","","GSNPQ Event Control/Counter Register (R/W) Apply to Intel …",null,null],[17,"MSR_IFSB_SNPQ1","","IFSB SNPQ Event Control and Counter  Register (R/W)",null,null],[17,"MSR_EFSB_DRDY0","","EFSB DRDY Event Control and Counter Register (R/W)  See …",null,null],[17,"MSR_EMON_L3_CTR_CTL4","","FSB Event Control and Counter Register (R/W)  See Section …",null,null],[17,"MSR_EFSB_DRDY1","","EFSB DRDY Event Control and Counter  Register (R/W)",null,null],[17,"MSR_EMON_L3_CTR_CTL5","","FSB Event Control/Counter Register (R/W) Apply to Intel …",null,null],[17,"MSR_EMON_L3_CTR_CTL6","","FSB Event Control/Counter Register (R/W) Apply to Intel …",null,null],[17,"MSR_IFSB_CTL6","","IFSB Latency Event Control Register  (R/W) See Section …",null,null],[17,"MSR_EMON_L3_CTR_CTL7","","FSB Event Control/Counter Register (R/W) Apply to Intel …",null,null],[17,"MSR_IFSB_CNTR7","","IFSB Latency Event Counter Register  (R/W)  See Section …",null,null],[17,"MSR_EMON_L3_GL_CTL","","L3/FSB Common Control Register (R/W) Apply to Intel Xeon …",null,null],[17,"IA32_EFER","","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.…",null,null],[17,"IA32_STAR","","System Call Target Address (R/W)  See Table 35-2.",null,null],[17,"IA32_LSTAR","","IA-32e Mode System Call Target Address (R/W)  See Table …",null,null],[17,"IA32_CSTAR","","System Call Target Address the compatibility mode.",null,null],[17,"IA32_FMASK","","System Call Flag Mask (R/W)  See Table 35-2.",null,null],[17,"IA32_FS_BASE","","Map of BASE Address of FS (R/W)  See Table 35-2.",null,null],[17,"IA32_GS_BASE","","Map of BASE Address of GS (R/W)  See Table 35-2.",null,null],[17,"IA32_KERNEL_GSBASE","","Swap Target of BASE Address of GS (R/W) See Table 35-2.",null,null],[17,"IA32_TSC_AUX","","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section …",null,null],[0,"random","x86","Instructions to generate random bits directly from the …",null,null],[5,"rdrand16","x86::random","Generates a 16-bit random value and stores it in <code>e</code>.",null,[[["u16",15]],["bool",15]]],[5,"rdrand32","","Generates a 32-bit random value and stores it in <code>e</code>.",null,[[["u32",15]],["bool",15]]],[5,"rdrand64","","Generates a 64-bit random value and stores it in <code>e</code>.",null,[[["u64",15]],["bool",15]]],[8,"RdRand","","RdRand trait to implement the generic rdrand_slice …",null,null],[10,"fill_random","","Fills <code>self</code> with random bits. Returns true on success or …",33,[[],["bool",15]]],[5,"rdrand_slice","","Fill a slice with random values.",null,[[],["bool",15]]],[5,"rdseed16","","Generates a 16-bit random value and stores it in <code>e</code>.",null,[[["u16",15]],["bool",15]]],[5,"rdseed32","","Generates a 32-bit random value and stores it in <code>e</code>.",null,[[["u32",15]],["bool",15]]],[5,"rdseed64","","Generates a 64-bit random value and stores it in <code>e</code>.",null,[[["u64",15]],["bool",15]]],[8,"RdSeed","","RdSeed trait to implement the generic rdseed_slice …",null,null],[10,"fill_random","","Fills <code>self</code> with random bits. Returns true on success or …",34,[[],["bool",15]]],[5,"rdseed_slice","","Fill a slice with random values.",null,[[],["bool",15]]],[0,"segmentation","x86","Functionality to manipulate segment registers, build …",null,null],[3,"SegmentSelector","x86::segmentation","Specifies which element to load into a segment from …",null,null],[18,"RPL_0","","Requestor Privilege Level",35,null],[18,"RPL_1","","",35,null],[18,"RPL_2","","",35,null],[18,"RPL_3","","",35,null],[18,"TI_GDT","","Table Indicator (TI) 0 means GDT is used.",35,null],[18,"TI_LDT","","Table Indicator (TI) 1 means LDT is used.",35,null],[11,"empty","","Returns an empty set of flags",35,[[],["segmentselector",3]]],[11,"all","","Returns the set containing all flags.",35,[[],["segmentselector",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",35,[[],["u16",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",35,[[["u16",15]],[["option",4],["segmentselector",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",35,[[["u16",15]],["segmentselector",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",35,[[["u16",15]],["segmentselector",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",35,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",35,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",35,[[["segmentselector",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",35,[[["segmentselector",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",35,[[["segmentselector",3]]]],[11,"remove","","Removes the specified flags in-place.",35,[[["segmentselector",3]]]],[11,"toggle","","Toggles the specified flags in-place.",35,[[["segmentselector",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",35,[[["bool",15],["segmentselector",3]]]],[11,"new","","Create a new SegmentSelector",35,[[["u16",15],["ring",4]],["segmentselector",3]]],[11,"index","","Returns segment selector\'s index in GDT or LDT.",35,[[],["u16",15]]],[11,"from_raw","","Make a new segment selector from a untyped u16 value.",35,[[["u16",15]],["segmentselector",3]]],[4,"SystemDescriptorTypes64","","System-Segment and Gate-Descriptor Types 64-bit mode See …",null,null],[13,"LDT","","",36,null],[13,"TssAvailable","","",36,null],[13,"TssBusy","","",36,null],[13,"CallGate","","",36,null],[13,"InterruptGate","","",36,null],[13,"TrapGate","","",36,null],[4,"SystemDescriptorTypes32","","System-Segment and Gate-Descriptor Types 32-bit mode. See …",null,null],[13,"TSSAvailable16","","",37,null],[13,"LDT","","",37,null],[13,"TSSBusy16","","",37,null],[13,"CallGate16","","",37,null],[13,"TaskGate","","",37,null],[13,"InterruptGate16","","",37,null],[13,"TrapGate16","","",37,null],[13,"TssAvailable32","","",37,null],[13,"TssBusy32","","",37,null],[13,"CallGate32","","",37,null],[13,"InterruptGate32","","",37,null],[13,"TrapGate32","","",37,null],[4,"DataSegmentType","","Data Segment types for descriptors. See also Intel 3a, …",null,null],[13,"ReadOnly","","Data Read-Only",38,null],[13,"ReadOnlyAccessed","","Data Read-Only, accessed",38,null],[13,"ReadWrite","","Data Read/Write",38,null],[13,"ReadWriteAccessed","","Data Read/Write, accessed",38,null],[13,"ReadExpand","","Data Read-Only, expand-down",38,null],[13,"ReadExpandAccessed","","Data Read-Only, expand-down, accessed",38,null],[13,"ReadWriteExpand","","Data Read/Write, expand-down",38,null],[13,"ReadWriteExpandAccessed","","Data Read/Write, expand-down, accessed",38,null],[4,"CodeSegmentType","","Code Segment types for descriptors. See also Intel 3a, …",null,null],[13,"Execute","","Code Execute-Only",39,null],[13,"ExecuteAccessed","","Code Execute-Only, accessed",39,null],[13,"ExecuteRead","","Code Execute/Read",39,null],[13,"ExecuteReadAccessed","","Code Execute/Read, accessed",39,null],[13,"ExecuteConforming","","Code Execute-Only, conforming",39,null],[13,"ExecuteConformingAccessed","","Code Execute-Only, conforming, accessed",39,null],[13,"ExecuteReadConforming","","Code Execute/Read, conforming",39,null],[13,"ExecuteReadConformingAccessed","","Code Execute/Read, conforming, accessed",39,null],[8,"GateDescriptorBuilder","","Trait that defines the architecture specific functions …",null,null],[10,"tss_descriptor","","",40,[[["bool",15],["u64",15]]]],[10,"call_gate_descriptor","","",40,[[["segmentselector",3]]]],[10,"interrupt_descriptor","","",40,[[["segmentselector",3]]]],[10,"trap_gate_descriptor","","",40,[[["segmentselector",3]]]],[8,"TaskGateDescriptorBuilder","","Trait to implement for building a task-gate (this …",null,null],[10,"task_gate_descriptor","","",41,[[["segmentselector",3]]]],[8,"SegmentDescriptorBuilder","","Trait to define functions that build architecture …",null,null],[10,"code_descriptor","","",42,[[["codesegmenttype",4]]]],[10,"data_descriptor","","",42,[[["datasegmenttype",4]]]],[8,"LdtDescriptorBuilder","","Trait to define functions that build an architecture …",null,null],[10,"ldt_descriptor","","",43,[[]]],[8,"BuildDescriptor","","",null,null],[10,"finish","","",44,[[]]],[3,"DescriptorBuilder","","Makes building descriptors easier (hopefully).",null,null],[11,"limit_granularity_4kb","","The segment limit is interpreted in 4-KByte units if this …",45,[[],["descriptorbuilder",3]]],[11,"present","","Indicates whether the segment is present in memory (set) …",45,[[],["descriptorbuilder",3]]],[11,"dpl","","Specifies the privilege level of the segment.",45,[[["ring",4]],["descriptorbuilder",3]]],[11,"avl","","Toggle the AVL bit.",45,[[],["descriptorbuilder",3]]],[11,"db","","Set default operation size (false for 16bit segment, true …",45,[[],["descriptorbuilder",3]]],[11,"l","","Set L bit if this descriptor is a 64-bit code segment. In …",45,[[],["descriptorbuilder",3]]],[11,"ist","","Set a the interrupt stack table index (only if this ends …",45,[[["u8",15]],["descriptorbuilder",3]]],[3,"Descriptor","","Entry for IDT, GDT or LDT. Provides size and location of …",null,null],[12,"lower","","",46,null],[12,"upper","","",46,null],[18,"NULL","","",46,null],[11,"as_u64","","",46,[[],["u64",15]]],[11,"set_base_limit","","Create a new segment, TSS or LDT descriptor by setting …",46,[[["u32",15]]]],[11,"set_selector_offset","","Creates a new descriptor with selector and offset (for …",46,[[["u32",15],["segmentselector",3]]]],[11,"set_type","","Set the type of the descriptor (bits 8-11). Indicates the …",46,[[["u8",15]]]],[11,"set_s","","Specifies whether the segment descriptor is for a system …",46,[[]]],[11,"set_dpl","","Specifies the privilege level of the segment. The DPL is …",46,[[["ring",4]]]],[11,"set_p","","Set Present bit. Indicates whether the segment is present …",46,[[]]],[11,"set_avl","","Set AVL bit. System software can use this bit to store …",46,[[]]],[11,"set_l","","Set L In IA-32e mode, bit 21 of the second doubleword of …",46,[[]]],[11,"set_db","","Set D/B. Performs different functions depending on …",46,[[]]],[11,"set_g","","Set G bit Determines the scaling of the segment limit …",46,[[]]],[5,"load_ss","","Reload stack segment register.",null,[[["segmentselector",3]]]],[5,"load_ds","","Reload data segment register.",null,[[["segmentselector",3]]]],[5,"load_es","","Reload es segment register.",null,[[["segmentselector",3]]]],[5,"load_fs","","Reload fs segment register.",null,[[["segmentselector",3]]]],[5,"load_gs","","Reload gs segment register.",null,[[["segmentselector",3]]]],[5,"cs","","Returns the current value of the code segment register.",null,[[],["segmentselector",3]]],[5,"es","","Returns the current value of the extra segment register.",null,[[],["segmentselector",3]]],[5,"ss","","Returns the current value of the stack segment register.",null,[[],["segmentselector",3]]],[5,"ds","","Returns the current value of the data segment register.",null,[[],["segmentselector",3]]],[5,"fs","","Returns the current value of the FS segment register.",null,[[],["segmentselector",3]]],[5,"gs","","Returns the current value of the GS segment register.",null,[[],["segmentselector",3]]],[0,"task","x86","Helpers to program the task state segment. See Intel 3a, …",null,null],[5,"tr","x86::task","Returns the current value of the task register.",null,[[],["segmentselector",3]]],[5,"load_tr","","Loads the task register.",null,[[["segmentselector",3]]]],[0,"time","x86","Functions to read time stamp counters on x86.",null,null],[5,"rdtsc","x86::time","Read the time stamp counter.",null,[[],["u64",15]]],[5,"rdtscp","","Read the time stamp counter.",null,[[],["u64",15]]],[0,"tlb","x86","Functions to flush the translation lookaside buffer (TLB).",null,null],[5,"flush","x86::tlb","Invalidate the given address in the TLB using the <code>invlpg</code> …",null,[[["usize",15]]]],[5,"flush_all","","Invalidate the TLB completely by reloading the CR3 …",null,[[]]],[0,"vmx","x86","Data structures and definitions used by Virtual Machine …",null,null],[0,"vmcs","x86::vmx","Virtual-machine control structure fields.",null,null],[0,"control","x86::vmx::vmcs","VM-execution, VM-exit, and VM-entry control fields.",null,null],[17,"VPID","x86::vmx::vmcs::control","Virtual-processor identifier (VPID).",null,null],[17,"POSTED_INTERRUPT_NOTIFICATION_VECTOR","","Posted-interrupt notification vector.",null,null],[17,"EPTP_INDEX","","EPTP index.",null,null],[17,"IO_BITMAP_A_ADDR_FULL","","Address of I/O bitmap A (full).",null,null],[17,"IO_BITMAP_A_ADDR_HIGH","","Address of I/O bitmap A (high).",null,null],[17,"IO_BITMAP_B_ADDR_FULL","","Address of I/O bitmap B (full).",null,null],[17,"IO_BITMAP_B_ADDR_HIGH","","Address of I/O bitmap B (high).",null,null],[17,"MSR_BITMAPS_ADDR_FULL","","Address of MSR bitmaps (full).",null,null],[17,"MSR_BITMAPS_ADDR_HIGH","","Address of MSR bitmaps (high).",null,null],[17,"VMEXIT_MSR_STORE_ADDR_FULL","","VM-exit MSR-store address (full).",null,null],[17,"VMEXIT_MSR_STORE_ADDR_HIGH","","VM-exit MSR-store address (high).",null,null],[17,"VMEXIT_MSR_LOAD_ADDR_FULL","","VM-exit MSR-load address (full).",null,null],[17,"VMEXIT_MSR_LOAD_ADDR_HIGH","","VM-exit MSR-load address (high).",null,null],[17,"VMENTRY_MSR_LOAD_ADDR_FULL","","VM-entry MSR-load address (full).",null,null],[17,"VMENTRY_MSR_LOAD_ADDR_HIGH","","VM-entry MSR-load address (high).",null,null],[17,"EXECUTIVE_VMCS_PTR_FULL","","Executive-VMCS pointer (full).",null,null],[17,"EXECUTIVE_VMCS_PTR_HIGH","","Executive-VMCS pointer (high).",null,null],[17,"PML_ADDR_FULL","","PML address (full).",null,null],[17,"PML_ADDR_HIGH","","PML address (high).",null,null],[17,"TSC_OFFSET_FULL","","TSC offset (full).",null,null],[17,"TSC_OFFSET_HIGH","","TSC offset (high).",null,null],[17,"VIRT_APIC_ADDR_FULL","","Virtual-APIC address (full).",null,null],[17,"VIRT_APIC_ADDR_HIGH","","Virtual-APIC address (high).",null,null],[17,"APIC_ACCESS_ADDR_FULL","","APIC-access address (full).",null,null],[17,"APIC_ACCESS_ADDR_HIGH","","APIC-access address (high).",null,null],[17,"POSTED_INTERRUPT_DESC_ADDR_FULL","","Posted-interrupt descriptor address (full).",null,null],[17,"POSTED_INTERRUPT_DESC_ADDR_HIGH","","Posted-interrupt descriptor address (high).",null,null],[17,"VM_FUNCTION_CONTROLS_FULL","","VM-function controls (full).",null,null],[17,"VM_FUNCTION_CONTROLS_HIGH","","VM-function controls (high).",null,null],[17,"EPTP_FULL","","EPT pointer (full).",null,null],[17,"EPTP_HIGH","","EPT pointer (high).",null,null],[17,"EOI_EXIT0_FULL","","EOI-exit bitmap 0 (full).",null,null],[17,"EOI_EXIT0_HIGH","","EOI-exit bitmap 0 (high).",null,null],[17,"EOI_EXIT1_FULL","","EOI-exit bitmap 1 (full).",null,null],[17,"EOI_EXIT1_HIGH","","EOI-exit bitmap 1 (high).",null,null],[17,"EOI_EXIT2_FULL","","EOI-exit bitmap 2 (full).",null,null],[17,"EOI_EXIT2_HIGH","","EOI-exit bitmap 2 (high).",null,null],[17,"EOI_EXIT3_FULL","","EOI-exit bitmap 3 (full).",null,null],[17,"EOI_EXIT3_HIGH","","EOI-exit bitmap 3 (high).",null,null],[17,"EPTP_LIST_ADDR_FULL","","EPTP-list address (full).",null,null],[17,"EPTP_LIST_ADDR_HIGH","","EPTP-list address (high).",null,null],[17,"VMREAD_BITMAP_ADDR_FULL","","VMREAD-bitmap address (full).",null,null],[17,"VMREAD_BITMAP_ADDR_HIGH","","VMREAD-bitmap address (high).",null,null],[17,"VMWRITE_BITMAP_ADDR_FULL","","VMWRITE-bitmap address (full).",null,null],[17,"VMWRITE_BITMAP_ADDR_HIGH","","VMWRITE-bitmap address (high).",null,null],[17,"VIRT_EXCEPTION_INFO_ADDR_FULL","","Virtualization-exception information address (full).",null,null],[17,"VIRT_EXCEPTION_INFO_ADDR_HIGH","","Virtualization-exception information address (high).",null,null],[17,"XSS_EXITING_BITMAP_FULL","","XSS-exiting bitmap (full).",null,null],[17,"XSS_EXITING_BITMAP_HIGH","","XSS-exiting bitmap (high).",null,null],[17,"ENCLS_EXITING_BITMAP_FULL","","ENCLS-exiting bitmap (full).",null,null],[17,"ENCLS_EXITING_BITMAP_HIGH","","ENCLS-exiting bitmap (high).",null,null],[17,"SUBPAGE_PERM_TABLE_PTR_FULL","","Sub-page-permission-table pointer (full).",null,null],[17,"SUBPAGE_PERM_TABLE_PTR_HIGH","","Sub-page-permission-table pointer (high).",null,null],[17,"TSC_MULTIPLIER_FULL","","TSC multiplier (full).",null,null],[17,"TSC_MULTIPLIER_HIGH","","TSC multiplier (high).",null,null],[17,"PINBASED_EXEC_CONTROLS","","Pin-based VM-execution controls.",null,null],[17,"PRIMARY_PROCBASED_EXEC_CONTROLS","","Primary processor-based VM-execution controls.",null,null],[17,"EXCEPTION_BITMAP","","Exception bitmap.",null,null],[17,"PAGE_FAULT_ERR_CODE_MASK","","Page-fault error-code mask.",null,null],[17,"PAGE_FAULT_ERR_CODE_MATCH","","Page-fault error-code match.",null,null],[17,"CR3_TARGET_COUNT","","CR3-target count.",null,null],[17,"VMEXIT_CONTROLS","","VM-exit controls.",null,null],[17,"VMEXIT_MSR_STORE_COUNT","","VM-exit MSR-store count.",null,null],[17,"VMEXIT_MSR_LOAD_COUNT","","VM-exit MSR-load count.",null,null],[17,"VMENTRY_CONTROLS","","VM-entry controls.",null,null],[17,"VMENTRY_MSR_LOAD_COUNT","","VM-entry MSR-load count.",null,null],[17,"VMENTRY_INTERRUPTION_INFO_FIELD","","VM-entry interruption-information field.",null,null],[17,"VMENTRY_EXCEPTION_ERR_CODE","","VM-entry exception error code.",null,null],[17,"VMENTRY_INSTRUCTION_LEN","","VM-entry instruction length.",null,null],[17,"TPR_THRESHOLD","","TPR threshold.",null,null],[17,"SECONDARY_PROCBASED_EXEC_CONTROLS","","Secondary processor-based VM-execution controls.",null,null],[17,"PLE_GAP","","PLE_Gap.",null,null],[17,"PLE_WINDOW","","PLE_Window.",null,null],[17,"CR0_GUEST_HOST_MASK","","CR0 guest/host mask.",null,null],[17,"CR4_GUEST_HOST_MASK","","CR4 guest/host mask.",null,null],[17,"CR0_READ_SHADOW","","CR0 read shadow.",null,null],[17,"CR4_READ_SHADOW","","CR4 read shadow.",null,null],[17,"CR3_TARGET_VALUE0","","CR3-target value 0.",null,null],[17,"CR3_TARGET_VALUE1","","CR3-target value 1.",null,null],[17,"CR3_TARGET_VALUE2","","CR3-target value 2.",null,null],[17,"CR3_TARGET_VALUE3","","CR3-target value 3.",null,null],[3,"PinbasedControls","","Pin-based VM-execution controls.",null,null],[18,"EXTERNAL_INTERRUPT_EXITING","","External-interrupt exiting.",47,null],[18,"NMI_EXITING","","NMI exiting.",47,null],[18,"VIRTUAL_NMIS","","Virtual NMIs.",47,null],[18,"VMX_PREEMPTION_TIMER","","Activate VMX-preemption timer.",47,null],[18,"POSTED_INTERRUPTS","","Process posted interrupts.",47,null],[11,"empty","","Returns an empty set of flags",47,[[],["pinbasedcontrols",3]]],[11,"all","","Returns the set containing all flags.",47,[[],["pinbasedcontrols",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",47,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",47,[[["u32",15]],[["option",4],["pinbasedcontrols",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",47,[[["u32",15]],["pinbasedcontrols",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",47,[[["u32",15]],["pinbasedcontrols",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",47,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",47,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",47,[[["pinbasedcontrols",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",47,[[["pinbasedcontrols",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",47,[[["pinbasedcontrols",3]]]],[11,"remove","","Removes the specified flags in-place.",47,[[["pinbasedcontrols",3]]]],[11,"toggle","","Toggles the specified flags in-place.",47,[[["pinbasedcontrols",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",47,[[["bool",15],["pinbasedcontrols",3]]]],[3,"PrimaryControls","","Primary processor-based VM-execution controls.",null,null],[18,"INTERRUPT_WINDOW_EXITING","","Interrupt-window exiting.",48,null],[18,"USE_TSC_OFFSETTING","","Use TSC offsetting.",48,null],[18,"HLT_EXITING","","HLT exiting.",48,null],[18,"INVLPG_EXITING","","INVLPG exiting.",48,null],[18,"MWAIT_EXITING","","MWAIT exiting.",48,null],[18,"RDPMC_EXITING","","RDPMC exiting.",48,null],[18,"RDTSC_EXITING","","RDTSC exiting.",48,null],[18,"CR3_LOAD_EXITING","","CR3-load exiting.",48,null],[18,"CR3_STORE_EXITING","","CR3-store exiting.",48,null],[18,"CR8_LOAD_EXITING","","CR8-load exiting.",48,null],[18,"CR8_STORE_EXITING","","CR8-store exiting.",48,null],[18,"USE_TPR_SHADOW","","Use TPR shadow.",48,null],[18,"NMI_WINDOW_EXITING","","NMI-window exiting.",48,null],[18,"MOV_DR_EXITING","","MOV-DR exiting",48,null],[18,"UNCOND_IO_EXITING","","Unconditional I/O exiting.",48,null],[18,"USE_IO_BITMAPS","","Use I/O bitmaps.",48,null],[18,"MONITOR_TRAP_FLAG","","Monitor trap flag.",48,null],[18,"USE_MSR_BITMAPS","","Use MSR bitmaps.",48,null],[18,"MONITOR_EXITING","","MONITOR exiting.",48,null],[18,"PAUSE_EXITING","","PAUSE exiting.",48,null],[18,"SECONDARY_CONTROLS","","Activate secondary controls.",48,null],[11,"empty","","Returns an empty set of flags",48,[[],["primarycontrols",3]]],[11,"all","","Returns the set containing all flags.",48,[[],["primarycontrols",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",48,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",48,[[["u32",15]],[["option",4],["primarycontrols",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",48,[[["u32",15]],["primarycontrols",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",48,[[["u32",15]],["primarycontrols",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",48,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",48,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",48,[[["primarycontrols",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",48,[[["primarycontrols",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",48,[[["primarycontrols",3]]]],[11,"remove","","Removes the specified flags in-place.",48,[[["primarycontrols",3]]]],[11,"toggle","","Toggles the specified flags in-place.",48,[[["primarycontrols",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",48,[[["bool",15],["primarycontrols",3]]]],[3,"SecondaryControls","","Secondary processor-based VM-execution controls.",null,null],[18,"VIRTUALIZE_APIC","","Virtualize APIC accesses.",49,null],[18,"ENABLE_EPT","","Enable EPT.",49,null],[18,"DTABLE_EXITING","","Descriptor-table exiting.",49,null],[18,"ENABLE_RDTSCP","","Enable RDTSCP.",49,null],[18,"VIRTUALIZE_X2APIC","","Virtualize x2APIC mode.",49,null],[18,"ENABLE_VPID","","Enable VPID.",49,null],[18,"WBINVD_EXITING","","WBINVD exiting.",49,null],[18,"UNRESTRICTED_GUEST","","Unrestricted guest.",49,null],[18,"VIRTUALIZE_APIC_REGISTER","","APIC-register virtualization.",49,null],[18,"VIRTUAL_INTERRUPT_DELIVERY","","Virtual-interrupt delivery.",49,null],[18,"PAUSE_LOOP_EXITING","","PAUSE-loop exiting.",49,null],[18,"RDRAND_EXITING","","RDRAND exiting.",49,null],[18,"ENABLE_INVPCID","","Enable INVPCID.",49,null],[18,"ENABLE_VM_FUNCTIONS","","Enable VM functions.",49,null],[18,"VMCS_SHADOWING","","VMCS shadowing.",49,null],[18,"ENCLS_EXITING","","Enable ENCLS exiting.",49,null],[18,"RDSEED_EXITING","","RDSEED exiting.",49,null],[18,"ENABLE_PML","","Enable PML.",49,null],[18,"EPT_VIOLATION_VE","","EPT-violation #VE.",49,null],[18,"CONCEAL_VMX_FROM_PT","","Conceal VMX from PT.",49,null],[18,"ENABLE_XSAVES_XRSTORS","","Enable XSAVES/XRSTORS.",49,null],[18,"MODE_BASED_EPT","","Mode-based execute control for EPT.",49,null],[18,"SUB_PAGE_EPT","","Sub-page write permissions for EPT.",49,null],[18,"INTEL_PT_GUEST_PHYSICAL","","Intel PT uses guest physical addresses.",49,null],[18,"USE_TSC_SCALING","","Use TSC scaling.",49,null],[18,"ENABLE_USER_WAIT_PAUSE","","Enable user wait and pause.",49,null],[18,"ENCLV_EXITING","","Enable ENCLV exiting.",49,null],[11,"empty","","Returns an empty set of flags",49,[[],["secondarycontrols",3]]],[11,"all","","Returns the set containing all flags.",49,[[],["secondarycontrols",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",49,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",49,[[["u32",15]],[["secondarycontrols",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",49,[[["u32",15]],["secondarycontrols",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",49,[[["u32",15]],["secondarycontrols",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",49,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",49,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",49,[[["secondarycontrols",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",49,[[["secondarycontrols",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",49,[[["secondarycontrols",3]]]],[11,"remove","","Removes the specified flags in-place.",49,[[["secondarycontrols",3]]]],[11,"toggle","","Toggles the specified flags in-place.",49,[[["secondarycontrols",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",49,[[["bool",15],["secondarycontrols",3]]]],[3,"EntryControls","","VM-entry controls.",null,null],[18,"LOAD_DEBUG_CONTROLS","","Load debug controls.",50,null],[18,"IA32E_MODE_GUEST","","IA-32e mode guest.",50,null],[18,"ENTRY_TO_SMM","","Entry to SMM.",50,null],[18,"DEACTIVATE_DUAL_MONITOR","","Deactivate dual-monitor treatment.",50,null],[18,"LOAD_IA32_PERF_GLOBAL_CTRL","","Load IA32_PERF_GLOBAL_CTRL.",50,null],[18,"LOAD_IA32_PAT","","Load IA32_PAT.",50,null],[18,"LOAD_IA32_EFER","","Load IA32_EFER.",50,null],[18,"LOAD_IA32_BNDCFGS","","Load IA32_BNDCFGS.",50,null],[18,"CONCEAL_VMX_FROM_PT","","Conceal VMX from PT.",50,null],[18,"LOAD_IA32_RTIT_CTL","","Load IA32_RTIT_CTL.",50,null],[11,"empty","","Returns an empty set of flags",50,[[],["entrycontrols",3]]],[11,"all","","Returns the set containing all flags.",50,[[],["entrycontrols",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",50,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",50,[[["u32",15]],[["option",4],["entrycontrols",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",50,[[["u32",15]],["entrycontrols",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",50,[[["u32",15]],["entrycontrols",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",50,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",50,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",50,[[["entrycontrols",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",50,[[["entrycontrols",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",50,[[["entrycontrols",3]]]],[11,"remove","","Removes the specified flags in-place.",50,[[["entrycontrols",3]]]],[11,"toggle","","Toggles the specified flags in-place.",50,[[["entrycontrols",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",50,[[["bool",15],["entrycontrols",3]]]],[3,"ExitControls","","VM-exit controls.",null,null],[18,"SAVE_DEBUG_CONTROLS","","Save debug controls.",51,null],[18,"HOST_ADDRESS_SPACE_SIZE","","Host address-space size.",51,null],[18,"LOAD_IA32_PERF_GLOBAL_CTRL","","Load IA32_PERF_GLOBAL_CTRL.",51,null],[18,"ACK_INTERRUPT_ON_EXIT","","Acknowledge interrupt on exit.",51,null],[18,"SAVE_IA32_PAT","","Save IA32_PAT.",51,null],[18,"LOAD_IA32_PAT","","Load IA32_PAT.",51,null],[18,"SAVE_IA32_EFER","","Save IA32_EFER.",51,null],[18,"LOAD_IA32_EFER","","Load IA32_EFER.",51,null],[18,"SAVE_VMX_PREEMPTION_TIMER","","Save VMX-preemption timer.",51,null],[18,"CLEAR_IA32_BNDCFGS","","Clear IA32_BNDCFGS.",51,null],[18,"CONCEAL_VMX_FROM_PT","","Conceal VMX from PT.",51,null],[18,"CLEAR_IA32_RTIT_CTL","","Clear IA32_RTIT_CTL.",51,null],[11,"empty","","Returns an empty set of flags",51,[[],["exitcontrols",3]]],[11,"all","","Returns the set containing all flags.",51,[[],["exitcontrols",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",51,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",51,[[["u32",15]],[["option",4],["exitcontrols",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",51,[[["u32",15]],["exitcontrols",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",51,[[["u32",15]],["exitcontrols",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",51,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",51,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",51,[[["exitcontrols",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",51,[[["exitcontrols",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",51,[[["exitcontrols",3]]]],[11,"remove","","Removes the specified flags in-place.",51,[[["exitcontrols",3]]]],[11,"toggle","","Toggles the specified flags in-place.",51,[[["exitcontrols",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",51,[[["exitcontrols",3],["bool",15]]]],[0,"guest","x86::vmx::vmcs","Fields used to access guest-state area.",null,null],[17,"ES_SELECTOR","x86::vmx::vmcs::guest","Guest ES selector.",null,null],[17,"CS_SELECTOR","","Guest CS selector.",null,null],[17,"SS_SELECTOR","","Guest SS selector.",null,null],[17,"DS_SELECTOR","","Guest DS selector.",null,null],[17,"FS_SELECTOR","","Guest FS selector.",null,null],[17,"GS_SELECTOR","","Guest GS selector.",null,null],[17,"LDTR_SELECTOR","","Guest LDTR selector.",null,null],[17,"TR_SELECTOR","","Guest TR selector.",null,null],[17,"INTERRUPT_STATUS","","Guest interrupt status.",null,null],[17,"PML_INDEX","","PML index.",null,null],[17,"LINK_PTR_FULL","","VMCS link pointer (full).",null,null],[17,"LINK_PTR_HIGH","","VMCS link pointer (high).",null,null],[17,"IA32_DEBUGCTL_FULL","","Guest IA32_DEBUGCTL (full).",null,null],[17,"IA32_DEBUGCTL_HIGH","","Guest IA32_DEBUGCTL (high).",null,null],[17,"IA32_PAT_FULL","","Guest IA32_PAT (full).",null,null],[17,"IA32_PAT_HIGH","","Guest IA32_PAT (high).",null,null],[17,"IA32_EFER_FULL","","Guest IA32_EFER (full).",null,null],[17,"IA32_EFER_HIGH","","Guest IA32_EFER (high).",null,null],[17,"IA32_PERF_GLOBAL_CTRL_FULL","","Guest IA32_PERF_GLOBAL_CTRL (full).",null,null],[17,"IA32_PERF_GLOBAL_CTRL_HIGH","","Guest IA32_PERF_GLOBAL_CTRL (high).",null,null],[17,"PDPTE0_FULL","","Guest PDPTE0 (full).",null,null],[17,"PDPTE0_HIGH","","Guest PDPTE0 (high).",null,null],[17,"PDPTE1_FULL","","Guest PDPTE1 (full).",null,null],[17,"PDPTE1_HIGH","","Guest PDPTE1 (high).",null,null],[17,"PDPTE2_FULL","","Guest PDPTE2 (full).",null,null],[17,"PDPTE2_HIGH","","Guest PDPTE2 (high).",null,null],[17,"PDPTE3_FULL","","Guest PDPTE3 (full).",null,null],[17,"PDPTE3_HIGH","","Guest PDPTE3 (high).",null,null],[17,"IA32_BNDCFGS_FULL","","Guest IA32_BNDCFGS (full).",null,null],[17,"IA32_BNDCFGS_HIGH","","Guest IA32_BNDCFGS (high).",null,null],[17,"IA32_RTIT_CTL_FULL","","Guest IA32_RTIT_CTL (full).",null,null],[17,"IA32_RTIT_CTL_HIGH","","Guest IA32_RTIT_CTL (high).",null,null],[17,"ES_LIMIT","","Guest ES limit.",null,null],[17,"CS_LIMIT","","Guest CS limit.",null,null],[17,"SS_LIMIT","","Guest SS limit.",null,null],[17,"DS_LIMIT","","Guest DS limit.",null,null],[17,"FS_LIMIT","","Guest FS limit.",null,null],[17,"GS_LIMIT","","Guest GS limit.",null,null],[17,"LDTR_LIMIT","","Guest LDTR limit.",null,null],[17,"TR_LIMIT","","Guest TR limit.",null,null],[17,"GDTR_LIMIT","","Guest GDTR limit.",null,null],[17,"IDTR_LIMIT","","Guest IDTR limit.",null,null],[17,"ES_ACCESS_RIGHTS","","Guest ES access rights.",null,null],[17,"CS_ACCESS_RIGHTS","","Guest CS access rights.",null,null],[17,"SS_ACCESS_RIGHTS","","Guest SS access rights.",null,null],[17,"DS_ACCESS_RIGHTS","","Guest DS access rights.",null,null],[17,"FS_ACCESS_RIGHTS","","Guest FS access rights.",null,null],[17,"GS_ACCESS_RIGHTS","","Guest GS access rights.",null,null],[17,"LDTR_ACCESS_RIGHTS","","Guest LDTR access rights.",null,null],[17,"TR_ACCESS_RIGHTS","","Guest TR access rights.",null,null],[17,"INTERRUPTIBILITY_STATE","","Guest interruptibility state.",null,null],[17,"ACTIVITY_STATE","","Guest activity state.",null,null],[17,"SMBASE","","Guest SMBASE.",null,null],[17,"IA32_SYSENTER_CS","","Guest IA32_SYSENTER_CS.",null,null],[17,"VMX_PREEMPTION_TIMER_VALUE","","VMX-preemption timer value.",null,null],[17,"CR0","","Guest CR0.",null,null],[17,"CR3","","Guest CR3.",null,null],[17,"CR4","","Guest CR4.",null,null],[17,"ES_BASE","","Guest ES base.",null,null],[17,"CS_BASE","","Guest CS base.",null,null],[17,"SS_BASE","","Guest SS base.",null,null],[17,"DS_BASE","","Guest DS base.",null,null],[17,"FS_BASE","","Guest FS base.",null,null],[17,"GS_BASE","","Guest GS base.",null,null],[17,"LDTR_BASE","","Guest LDTR base.",null,null],[17,"TR_BASE","","Guest TR base.",null,null],[17,"GDTR_BASE","","Guest GDTR base.",null,null],[17,"IDTR_BASE","","Guest IDTR base.",null,null],[17,"DR7","","Guest DR7.",null,null],[17,"RSP","","Guest RSP.",null,null],[17,"RIP","","Guest RIP.",null,null],[17,"RFLAGS","","Guest RFLAGS.",null,null],[17,"PENDING_DBG_EXCEPTIONS","","Guest pending debug exceptions.",null,null],[17,"IA32_SYSENTER_ESP","","Guest IA32_SYSENTER_ESP.",null,null],[17,"IA32_SYSENTER_EIP","","Guest IA32_SYSENTER_EIP.",null,null],[0,"host","x86::vmx::vmcs","Fields used to access host-state area.",null,null],[17,"ES_SELECTOR","x86::vmx::vmcs::host","Host ES selector.",null,null],[17,"CS_SELECTOR","","Host CS selector.",null,null],[17,"SS_SELECTOR","","Host SS selector.",null,null],[17,"DS_SELECTOR","","Host DS selector.",null,null],[17,"FS_SELECTOR","","Host FS selector.",null,null],[17,"GS_SELECTOR","","Host GS selector.",null,null],[17,"TR_SELECTOR","","Host TR selector.",null,null],[17,"IA32_PAT_FULL","","Host IA32_PAT (full).",null,null],[17,"IA32_PAT_HIGH","","Host IA32_PAT (high).",null,null],[17,"IA32_EFER_FULL","","Host IA32_EFER (full).",null,null],[17,"IA32_EFER_HIGH","","Host IA32_EFER (high).",null,null],[17,"IA32_PERF_GLOBAL_CTRL_FULL","","Host IA32_PERF_GLOBAL_CTRL (full).",null,null],[17,"IA32_PERF_GLOBAL_CTRL_HIGH","","Host IA32_PERF_GLOBAL_CTRL (high).",null,null],[17,"IA32_SYSENTER_CS","","Host IA32_SYSENTER_CS.",null,null],[17,"CR0","","Host CR0.",null,null],[17,"CR3","","Host CR3.",null,null],[17,"CR4","","Host CR4.",null,null],[17,"FS_BASE","","Host FS base.",null,null],[17,"GS_BASE","","Host GS base.",null,null],[17,"TR_BASE","","Host TR base.",null,null],[17,"GDTR_BASE","","Host GDTR base.",null,null],[17,"IDTR_BASE","","Host IDTR base.",null,null],[17,"IA32_SYSENTER_ESP","","Host IA32_SYSENTER_ESP.",null,null],[17,"IA32_SYSENTER_EIP","","Host IA32_SYSENTER_EIP.",null,null],[17,"RSP","","Host RSP.",null,null],[17,"RIP","","Host RIP.",null,null],[0,"ro","x86::vmx::vmcs","VM-exit information fields.",null,null],[17,"GUEST_PHYSICAL_ADDR_FULL","x86::vmx::vmcs::ro","Guest-physical address (full).",null,null],[17,"GUEST_PHYSICAL_ADDR_HIGH","","Guest-physical address (high).",null,null],[17,"VM_INSTRUCTION_ERROR","","VM-instruction error.",null,null],[17,"EXIT_REASON","","Exit reason.",null,null],[17,"VMEXIT_INTERRUPTION_INFO","","VM-exit interruption information.",null,null],[17,"VMEXIT_INTERRUPTION_ERR_CODE","","VM-exit interruption error code.",null,null],[17,"IDT_VECTORING_INFO","","IDT-vectoring information field.",null,null],[17,"IDT_VECTORING_ERR_CODE","","IDT-vectoring error code.",null,null],[17,"VMEXIT_INSTRUCTION_LEN","","VM-exit instruction length.",null,null],[17,"VMEXIT_INSTRUCTION_INFO","","VM-exit instruction information.",null,null],[17,"EXIT_QUALIFICATION","","Exit qualification.",null,null],[17,"IO_RCX","","I/O RCX.",null,null],[17,"IO_RSI","","I/O RSI.",null,null],[17,"IO_RDI","","I/O RDI.",null,null],[17,"IO_RIP","","I/O RIP.",null,null],[17,"GUEST_LINEAR_ADDR","","Guest-linear address.",null,null],[6,"Result","x86::vmx","A specialized <code>Result</code> type for VMX operations.",null,null],[4,"VmFail","","Possible outcomes of VMfail pseudo-function used to …",null,null],[13,"VmFailValid","","VMCS pointer is valid, but some other error was …",52,null],[13,"VmFailInvalid","","VMCS pointer is not valid.",52,null],[0,"current","x86","A short-cut to the architecture (bits32 or bits64) this …",null,null],[0,"cpuid","","Support for the CPUID instructions.",null,null],[0,"native_cpuid","x86::cpuid","Uses Rust\'s <code>cpuid</code> function from the <code>arch</code> module.",null,null],[5,"cpuid_count","x86::cpuid::native_cpuid","",null,[[["u32",15]],["cpuidresult",3]]],[3,"CpuId","x86::cpuid","Main type used to query for information about the CPU …",null,null],[3,"CpuIdResult","","Low-level data-structure to store result of cpuid …",null,null],[12,"eax","","Return value EAX register",53,null],[12,"ebx","","Return value EBX register",53,null],[12,"ecx","","Return value ECX register",53,null],[12,"edx","","Return value EDX register",53,null],[3,"VendorInfo","","",null,null],[3,"CacheInfoIter","","Used to iterate over cache information contained in cpuid …",null,null],[4,"CacheInfoType","","What type of cache are we dealing with?",null,null],[13,"General","","",54,null],[13,"Cache","","",54,null],[13,"TLB","","",54,null],[13,"STLB","","",54,null],[13,"DTLB","","",54,null],[13,"Prefetch","","",54,null],[3,"CacheInfo","","Describes any kind of cache (TLB, Data and Instruction …",null,null],[12,"num","","Number as retrieved from cpuid",55,null],[12,"typ","","Cache type",55,null],[17,"CACHE_INFO_TABLE","","This table is taken from Intel manual (Section CPUID …",null,null],[3,"ProcessorSerial","","",null,null],[3,"FeatureInfo","","",null,null],[3,"CacheParametersIter","","",null,null],[3,"CacheParameter","","",null,null],[4,"CacheType","","",null,null],[13,"Null","","Null - No more caches",56,null],[13,"Data","","Data cache",56,null],[13,"Instruction","","Instruction cache",56,null],[13,"Unified","","Data and Instruction cache",56,null],[13,"Reserved","","4-31 = Reserved",56,null],[3,"MonitorMwaitInfo","","",null,null],[3,"ThermalPowerInfo","","",null,null],[3,"ExtendedFeatures","","",null,null],[3,"DirectCacheAccessInfo","","",null,null],[3,"PerformanceMonitoringInfo","","",null,null],[3,"ExtendedTopologyIter","","Iterates over the system topology in order to retrieve …",null,null],[3,"ExtendedTopologyLevel","","Gives detailed information about the current level in the …",null,null],[4,"TopologyType","","What type of core we have at this level in the topology …",null,null],[13,"Invalid","","",57,null],[13,"SMT","","Hyper-thread (Simultaneous multithreading)",57,null],[13,"Core","","",57,null],[3,"ExtendedStateInfo","","",null,null],[3,"ExtendedStateIter","","",null,null],[3,"ExtendedState","","",null,null],[12,"subleaf","","",58,null],[3,"RdtMonitoringInfo","","",null,null],[3,"L3MonitoringInfo","","",null,null],[3,"RdtAllocationInfo","","",null,null],[3,"L3CatInfo","","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX …",null,null],[3,"L2CatInfo","","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX …",null,null],[3,"MemBwAllocationInfo","","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX = …",null,null],[3,"SgxInfo","","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX = …",null,null],[3,"SgxSectionIter","","Iterator over the SGX sub-leafs (ECX >= 2).",null,null],[4,"SgxSectionInfo","","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, …",null,null],[13,"Epc","","",59,null],[3,"EpcSection","","EBX:EAX and EDX:ECX provide information on the Enclave …",null,null],[3,"ProcessorTraceInfo","","",null,null],[3,"TscInfo","","Time Stamp Counter and Nominal Core Crystal Clock …",null,null],[3,"ProcessorFrequencyInfo","","Processor Frequency Information",null,null],[3,"DatIter","","Deterministic Address Translation Structure Iterator",null,null],[3,"DatInfo","","Deterministic Address Translation Structure",null,null],[4,"DatType","","Deterministic Address Translation cache type (EDX bits 04 …",null,null],[13,"Null","","Null (indicates this sub-leaf is not valid).",60,null],[13,"DataTLB","","",60,null],[13,"InstructionTLB","","",60,null],[13,"UnifiedTLB","","Some unified TLBs will allow a single TLB entry to …",60,null],[13,"Unknown","","",60,null],[3,"SoCVendorInfo","","",null,null],[3,"SoCVendorAttributesIter","","",null,null],[3,"SoCVendorBrand","","",null,null],[3,"HypervisorInfo","","Information about Hypervisor …",null,null],[4,"Hypervisor","","Identifies the different Hypervisor products.",null,null],[13,"Xen","","",61,null],[13,"VMware","","",61,null],[13,"HyperV","","",61,null],[13,"KVM","","",61,null],[13,"Unknown","","",61,null],[3,"ExtendedFunctionInfo","","",null,null],[4,"L2Associativity","","",null,null],[13,"Disabled","","",62,null],[13,"DirectMapped","","",62,null],[13,"TwoWay","","",62,null],[13,"FourWay","","",62,null],[13,"EightWay","","",62,null],[13,"SixteenWay","","",62,null],[13,"FullyAssiciative","","",62,null],[13,"Unknown","","",62,null],[3,"MemoryEncryptionInfo","","",null,null],[14,"cpuid","","Macro which queries cpuid directly.",null,null],[4,"Ring","x86","x86 Protection levels",null,null],[13,"Ring0","","",63,null],[13,"Ring1","","",63,null],[13,"Ring2","","",63,null],[13,"Ring3","","",63,null],[5,"halt","","Stops instruction execution and places the processor in a …",null,[[]]],[5,"rdpid","","Read Processor ID",null,[[],["u64",15]]],[14,"syscall","","",null,null],[14,"int","","Generate a software interrupt. This is a macro argument …",null,null],[11,"from","x86::bits32::eflags","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","x86::bits32::task","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","x86::bits64::paging","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","x86::bits64::rflags","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","x86::bits64::segmentation","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","x86::bits64::task","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","x86::apic::ioapic","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","x86::apic::x2apic","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","x86::apic::xapic","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","x86::apic","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","x86::controlregs","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","x86::dtables","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","x86::irq","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","x86::segmentation","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","x86::vmx::vmcs::control","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","x86::vmx","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","x86::cpuid","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"into_iter","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"into_iter","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"into_iter","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"into_iter","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"into_iter","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"into_iter","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"into_iter","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","x86","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"clone","x86::cpuid","",73,[[],["cacheparameter",3]]],[11,"clone","","",53,[[],["cpuidresult",3]]],[11,"clone","","",55,[[],["cacheinfo",3]]],[11,"clone","","",54,[[],["cacheinfotype",4]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",79,[[],[["option",4],["extendedtopologylevel",3]]]],[11,"next","","",90,[[],[["sgxsectioninfo",4],["option",4]]]],[11,"next","","Iterate over all cache information.",69,[[],[["option",4],["cacheinfo",3]]]],[11,"next","","Iterate over each sub-leaf with an  address translation …",95,[[],[["datinfo",3],["option",4]]]],[11,"next","","Iterate over all SoC vendor specific attributes.",98,[[],[["cpuidresult",3],["option",4]]]],[11,"next","","Iterate over all caches for this CPU. Note: cpuid is …",72,[[],[["option",4],["cacheparameter",3]]]],[11,"next","","",82,[[],[["option",4],["extendedstate",3]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",62,[[["l2associativity",4]],["bool",15]]],[11,"eq","","",57,[[["topologytype",4]],["bool",15]]],[11,"eq","","",56,[[["cachetype",4]],["bool",15]]],[11,"eq","","",61,[[["hypervisor",4]],["bool",15]]],[11,"ne","","",61,[[["hypervisor",4]],["bool",15]]],[11,"default","","",101,[[],["extendedfunctioninfo",3]]],[11,"default","","",71,[[],["featureinfo",3]]],[11,"default","","",94,[[],["processorfrequencyinfo",3]]],[11,"default","","",56,[[],["cachetype",4]]],[11,"default","","",84,[[],["l3monitoringinfo",3]]],[11,"default","","",81,[[],["extendedstateinfo",3]]],[11,"default","","",53,[[],["cpuidresult",3]]],[11,"default","","",92,[[],["processortraceinfo",3]]],[11,"default","","",93,[[],["tscinfo",3]]],[11,"default","","",54,[[],["cacheinfotype",4]]],[11,"default","","",55,[[],["cacheinfo",3]]],[11,"default","","",73,[[],["cacheparameter",3]]],[11,"default","","",72,[[],["cacheparametersiter",3]]],[11,"default","","",95,[[],["datiter",3]]],[11,"default","","",77,[[],["directcacheaccessinfo",3]]],[11,"default","","",70,[[],["processorserial",3]]],[11,"default","","",57,[[],["topologytype",4]]],[11,"default","","",68,[[],["vendorinfo",3]]],[11,"default","","",99,[[],["socvendorbrand",3]]],[11,"default","","",102,[[],["memoryencryptioninfo",3]]],[11,"default","","",97,[[],["socvendorinfo",3]]],[11,"default","","",87,[[],["l2catinfo",3]]],[11,"default","","",59,[[],["sgxsectioninfo",4]]],[11,"default","","",60,[[],["dattype",4]]],[11,"default","","",67,[[],["cpuid",3]]],[11,"default","","",86,[[],["l3catinfo",3]]],[11,"default","","",90,[[],["sgxsectioniter",3]]],[11,"default","","",78,[[],["performancemonitoringinfo",3]]],[11,"default","","",76,[[],["extendedfeatures",3]]],[11,"default","","",62,[[],["l2associativity",4]]],[11,"default","","",83,[[],["rdtmonitoringinfo",3]]],[11,"default","","",80,[[],["extendedtopologylevel",3]]],[11,"default","","",91,[[],["epcsection",3]]],[11,"default","","",69,[[],["cacheinfoiter",3]]],[11,"default","","",79,[[],["extendedtopologyiter",3]]],[11,"default","","",75,[[],["thermalpowerinfo",3]]],[11,"default","","",85,[[],["rdtallocationinfo",3]]],[11,"default","","",82,[[],["extendedstateiter",3]]],[11,"default","","",58,[[],["extendedstate",3]]],[11,"default","","",74,[[],["monitormwaitinfo",3]]],[11,"default","","",88,[[],["membwallocationinfo",3]]],[11,"default","","",98,[[],["socvendorattributesiter",3]]],[11,"default","","",96,[[],["datinfo",3]]],[11,"default","","",89,[[],["sgxinfo",3]]],[11,"bsp","x86::apic::x2apic","Is a bootstrap processor?",16,[[],["bool",15]]],[11,"id","","Read local x2APIC ID.",16,[[],["u32",15]]],[11,"logical_id","","In x2APIC mode, the 32-bit logical x2APIC ID, can be read …",16,[[],["u32",15]]],[11,"version","","Read APIC version.",16,[[],["u32",15]]],[11,"tsc_enable","","Enable TSC timer",16,[[["u8",15]]]],[11,"tsc_set","","Set tsc deadline.",16,[[["u64",15]]]],[11,"eoi","","End Of Interrupt -- Acknowledge interrupt delivery.",16,[[]]],[11,"ipi_init","","Send a INIT IPI to a core.",16,[[["apicid",4]]]],[11,"ipi_init_deassert","","Deassert INIT IPI.",16,[[]]],[11,"ipi_startup","","Send a STARTUP IPI to a core.",16,[[["u8",15],["apicid",4]]]],[11,"send_ipi","","Send a generic IPI.",16,[[["icr",3]]]],[11,"bsp","x86::apic::xapic","Is this the bootstrap core?",17,[[],["bool",15]]],[11,"id","","Read local APIC ID.",17,[[],["u32",15]]],[11,"logical_id","","",17,[[],["u32",15]]],[11,"version","","Read APIC version",17,[[],["u32",15]]],[11,"eoi","","End Of Interrupt -- Acknowledge interrupt delivery.",17,[[]]],[11,"tsc_enable","","Enable TSC timer.",17,[[["u8",15]]]],[11,"tsc_set","","Set TSC deadline value.",17,[[["u64",15]]]],[11,"ipi_init","","Send a INIT IPI to a core.",17,[[["apicid",4]]]],[11,"ipi_init_deassert","","Deassert INIT IPI.",17,[[]]],[11,"ipi_startup","","Send a STARTUP IPI to a core.",17,[[["u8",15],["apicid",4]]]],[11,"send_ipi","","Send a generic IPI.",17,[[["icr",3]]]],[11,"tss_descriptor","x86::segmentation","",45,[[["bool",15],["u64",15]],["descriptorbuilder",3]]],[11,"call_gate_descriptor","","",45,[[["u16",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"interrupt_descriptor","","",45,[[["u16",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"trap_gate_descriptor","","",45,[[["u16",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"tss_descriptor","","",45,[[["bool",15],["u64",15]],["descriptorbuilder",3]]],[11,"call_gate_descriptor","","",45,[[["u64",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"interrupt_descriptor","","",45,[[["u64",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"trap_gate_descriptor","","",45,[[["u64",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"tss_descriptor","","",45,[[["bool",15],["u64",15]],["descriptorbuilder",3]]],[11,"call_gate_descriptor","","",45,[[["u32",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"interrupt_descriptor","","",45,[[["u32",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"trap_gate_descriptor","","",45,[[["u32",15],["segmentselector",3]],["descriptorbuilder",3]]],[11,"task_gate_descriptor","","",45,[[["segmentselector",3]],["descriptorbuilder",3]]],[11,"code_descriptor","","",45,[[["u32",15],["codesegmenttype",4]],["descriptorbuilder",3]]],[11,"data_descriptor","","",45,[[["u32",15],["datasegmenttype",4]],["descriptorbuilder",3]]],[11,"ldt_descriptor","","",45,[[["u64",15]],["descriptorbuilder",3]]],[11,"ldt_descriptor","","",45,[[["u32",15]],["descriptorbuilder",3]]],[11,"finish","","",45,[[],["descriptor64",3]]],[11,"finish","","",45,[[],["descriptor",3]]],[11,"from","x86::bits64::paging","",2,[[["u64",15]]]],[11,"from","","",2,[[["usize",15]]]],[11,"from","","",2,[[["i32",15]]]],[11,"from","","",3,[[["u64",15]]]],[11,"from","","",3,[[["i32",15]]]],[11,"from","","",3,[[["usize",15]]]],[11,"fmt","x86::bits32::eflags","",0,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits32::task","",1,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::paging","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::rflags","",12,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::segmentation","",13,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::task","",14,[[["formatter",3]],["result",6]]],[11,"fmt","x86::apic::x2apic","",16,[[["formatter",3]],["result",6]]],[11,"fmt","x86::apic::xapic","",17,[[["formatter",3]],["result",6]]],[11,"fmt","x86::apic","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","x86::controlregs","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","x86::dtables","",30,[[["formatter",3]],["result",6]]],[11,"fmt","x86::irq","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","x86::segmentation","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","x86::vmx::vmcs::control","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","x86::vmx","",52,[[["formatter",3]],["result",6]]],[11,"fmt","x86","",63,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::paging","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","x86::irq","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","x86::segmentation","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"rem","x86::bits64::paging","",2,[[["paddr",3]]]],[11,"rem","","",2,[[["u64",15]]]],[11,"rem","","",2,[[["usize",15]]]],[11,"rem","","",3,[[["vaddr",3]]]],[11,"rem","","",3,[[]]],[11,"rem","","",3,[[]]],[11,"sub","x86::bits32::eflags","Returns the set difference of the two sets of flags.",0,[[["eflags",3]],["eflags",3]]],[11,"sub","x86::bits64::paging","",2,[[["paddr",3]]]],[11,"sub","","",2,[[["u64",15]]]],[11,"sub","","",2,[[["usize",15]]]],[11,"sub","","",3,[[["vaddr",3]]]],[11,"sub","","",3,[[["u64",15]]]],[11,"sub","","",3,[[["usize",15]]]],[11,"sub","","Returns the set difference of the two sets of flags.",4,[[["pml4flags",3]],["pml4flags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",6,[[["pdptflags",3]],["pdptflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["pdflags",3]],["pdflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["ptflags",3]],["ptflags",3]]],[11,"sub","x86::bits64::rflags","Returns the set difference of the two sets of flags.",12,[[["rflags",3]],["rflags",3]]],[11,"sub","x86::controlregs","Returns the set difference of the two sets of flags.",27,[[["cr0",3]],["cr0",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",28,[[["cr4",3]],["cr4",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",29,[[["xcr0",3]],["xcr0",3]]],[11,"sub","x86::irq","Returns the set difference of the two sets of flags.",32,[[["pagefaulterror",3]],["pagefaulterror",3]]],[11,"sub","x86::segmentation","Returns the set difference of the two sets of flags.",35,[[["segmentselector",3]],["segmentselector",3]]],[11,"sub","x86::vmx::vmcs::control","Returns the set difference of the two sets of flags.",47,[[["pinbasedcontrols",3]],["pinbasedcontrols",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",48,[[["primarycontrols",3]],["primarycontrols",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",49,[[["secondarycontrols",3]],["secondarycontrols",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",50,[[["entrycontrols",3]],["entrycontrols",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",51,[[["exitcontrols",3]],["exitcontrols",3]]],[11,"eq","x86::bits32::eflags","",0,[[["eflags",3]],["bool",15]]],[11,"ne","","",0,[[["eflags",3]],["bool",15]]],[11,"eq","x86::bits64::paging","",2,[[["paddr",3]],["bool",15]]],[11,"ne","","",2,[[["paddr",3]],["bool",15]]],[11,"eq","","",3,[[["vaddr",3]],["bool",15]]],[11,"ne","","",3,[[["vaddr",3]],["bool",15]]],[11,"eq","","",4,[[["pml4flags",3]],["bool",15]]],[11,"ne","","",4,[[["pml4flags",3]],["bool",15]]],[11,"eq","","",6,[[["pdptflags",3]],["bool",15]]],[11,"ne","","",6,[[["pdptflags",3]],["bool",15]]],[11,"eq","","",8,[[["pdflags",3]],["bool",15]]],[11,"ne","","",8,[[["pdflags",3]],["bool",15]]],[11,"eq","","",10,[[["ptflags",3]],["bool",15]]],[11,"ne","","",10,[[["ptflags",3]],["bool",15]]],[11,"eq","x86::bits64::rflags","",12,[[["rflags",3]],["bool",15]]],[11,"ne","","",12,[[["rflags",3]],["bool",15]]],[11,"eq","x86::apic","",18,[[["deliverymode",4]],["bool",15]]],[11,"eq","","",19,[[["destinationmode",4]],["bool",15]]],[11,"eq","","",20,[[["deliverystatus",4]],["bool",15]]],[11,"eq","","",21,[[["level",4]],["bool",15]]],[11,"eq","","",22,[[["triggermode",4]],["bool",15]]],[11,"eq","","",23,[[["destinationshorthand",4]],["bool",15]]],[11,"eq","","",24,[[["icr",3]],["bool",15]]],[11,"ne","","",24,[[["icr",3]],["bool",15]]],[11,"eq","","",25,[[["apicid",4]],["bool",15]]],[11,"ne","","",25,[[["apicid",4]],["bool",15]]],[11,"eq","x86::controlregs","",27,[[["cr0",3]],["bool",15]]],[11,"ne","","",27,[[["cr0",3]],["bool",15]]],[11,"eq","","",28,[[["cr4",3]],["bool",15]]],[11,"ne","","",28,[[["cr4",3]],["bool",15]]],[11,"eq","","",29,[[["xcr0",3]],["bool",15]]],[11,"ne","","",29,[[["xcr0",3]],["bool",15]]],[11,"eq","x86::irq","",32,[[["pagefaulterror",3]],["bool",15]]],[11,"ne","","",32,[[["pagefaulterror",3]],["bool",15]]],[11,"eq","x86::segmentation","",35,[[["segmentselector",3]],["bool",15]]],[11,"ne","","",35,[[["segmentselector",3]],["bool",15]]],[11,"eq","","",36,[[["systemdescriptortypes64",4]],["bool",15]]],[11,"eq","","",37,[[["systemdescriptortypes32",4]],["bool",15]]],[11,"eq","","",38,[[["datasegmenttype",4]],["bool",15]]],[11,"eq","","",39,[[["codesegmenttype",4]],["bool",15]]],[11,"eq","x86::vmx::vmcs::control","",47,[[["pinbasedcontrols",3]],["bool",15]]],[11,"ne","","",47,[[["pinbasedcontrols",3]],["bool",15]]],[11,"eq","","",48,[[["primarycontrols",3]],["bool",15]]],[11,"ne","","",48,[[["primarycontrols",3]],["bool",15]]],[11,"eq","","",49,[[["secondarycontrols",3]],["bool",15]]],[11,"ne","","",49,[[["secondarycontrols",3]],["bool",15]]],[11,"eq","","",50,[[["entrycontrols",3]],["bool",15]]],[11,"ne","","",50,[[["entrycontrols",3]],["bool",15]]],[11,"eq","","",51,[[["exitcontrols",3]],["bool",15]]],[11,"ne","","",51,[[["exitcontrols",3]],["bool",15]]],[11,"eq","x86","",63,[[["ring",4]],["bool",15]]],[11,"cmp","x86::bits32::eflags","",0,[[["eflags",3]],["ordering",4]]],[11,"cmp","x86::bits64::paging","",2,[[["paddr",3]],["ordering",4]]],[11,"cmp","","",3,[[["vaddr",3]],["ordering",4]]],[11,"cmp","","",4,[[["pml4flags",3]],["ordering",4]]],[11,"cmp","","",6,[[["pdptflags",3]],["ordering",4]]],[11,"cmp","","",8,[[["pdflags",3]],["ordering",4]]],[11,"cmp","","",10,[[["ptflags",3]],["ordering",4]]],[11,"cmp","x86::bits64::rflags","",12,[[["rflags",3]],["ordering",4]]],[11,"cmp","x86::controlregs","",27,[[["cr0",3]],["ordering",4]]],[11,"cmp","","",28,[[["cr4",3]],["ordering",4]]],[11,"cmp","","",29,[[["xcr0",3]],["ordering",4]]],[11,"cmp","x86::irq","",32,[[["pagefaulterror",3]],["ordering",4]]],[11,"cmp","x86::segmentation","",35,[[["segmentselector",3]],["ordering",4]]],[11,"cmp","x86::vmx::vmcs::control","",47,[[["pinbasedcontrols",3]],["ordering",4]]],[11,"cmp","","",48,[[["primarycontrols",3]],["ordering",4]]],[11,"cmp","","",49,[[["secondarycontrols",3]],["ordering",4]]],[11,"cmp","","",50,[[["entrycontrols",3]],["ordering",4]]],[11,"cmp","","",51,[[["exitcontrols",3]],["ordering",4]]],[11,"partial_cmp","x86::bits32::eflags","",0,[[["eflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["eflags",3]],["bool",15]]],[11,"le","","",0,[[["eflags",3]],["bool",15]]],[11,"gt","","",0,[[["eflags",3]],["bool",15]]],[11,"ge","","",0,[[["eflags",3]],["bool",15]]],[11,"partial_cmp","x86::bits64::paging","",2,[[["paddr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["paddr",3]],["bool",15]]],[11,"le","","",2,[[["paddr",3]],["bool",15]]],[11,"gt","","",2,[[["paddr",3]],["bool",15]]],[11,"ge","","",2,[[["paddr",3]],["bool",15]]],[11,"partial_cmp","","",3,[[["vaddr",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["vaddr",3]],["bool",15]]],[11,"le","","",3,[[["vaddr",3]],["bool",15]]],[11,"gt","","",3,[[["vaddr",3]],["bool",15]]],[11,"ge","","",3,[[["vaddr",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["pml4flags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["pml4flags",3]],["bool",15]]],[11,"le","","",4,[[["pml4flags",3]],["bool",15]]],[11,"gt","","",4,[[["pml4flags",3]],["bool",15]]],[11,"ge","","",4,[[["pml4flags",3]],["bool",15]]],[11,"partial_cmp","","",6,[[["pdptflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["pdptflags",3]],["bool",15]]],[11,"le","","",6,[[["pdptflags",3]],["bool",15]]],[11,"gt","","",6,[[["pdptflags",3]],["bool",15]]],[11,"ge","","",6,[[["pdptflags",3]],["bool",15]]],[11,"partial_cmp","","",8,[[["pdflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["pdflags",3]],["bool",15]]],[11,"le","","",8,[[["pdflags",3]],["bool",15]]],[11,"gt","","",8,[[["pdflags",3]],["bool",15]]],[11,"ge","","",8,[[["pdflags",3]],["bool",15]]],[11,"partial_cmp","","",10,[[["ptflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["ptflags",3]],["bool",15]]],[11,"le","","",10,[[["ptflags",3]],["bool",15]]],[11,"gt","","",10,[[["ptflags",3]],["bool",15]]],[11,"ge","","",10,[[["ptflags",3]],["bool",15]]],[11,"partial_cmp","x86::bits64::rflags","",12,[[["rflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["rflags",3]],["bool",15]]],[11,"le","","",12,[[["rflags",3]],["bool",15]]],[11,"gt","","",12,[[["rflags",3]],["bool",15]]],[11,"ge","","",12,[[["rflags",3]],["bool",15]]],[11,"partial_cmp","x86::controlregs","",27,[[["cr0",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["cr0",3]],["bool",15]]],[11,"le","","",27,[[["cr0",3]],["bool",15]]],[11,"gt","","",27,[[["cr0",3]],["bool",15]]],[11,"ge","","",27,[[["cr0",3]],["bool",15]]],[11,"partial_cmp","","",28,[[["cr4",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["cr4",3]],["bool",15]]],[11,"le","","",28,[[["cr4",3]],["bool",15]]],[11,"gt","","",28,[[["cr4",3]],["bool",15]]],[11,"ge","","",28,[[["cr4",3]],["bool",15]]],[11,"partial_cmp","","",29,[[["xcr0",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["xcr0",3]],["bool",15]]],[11,"le","","",29,[[["xcr0",3]],["bool",15]]],[11,"gt","","",29,[[["xcr0",3]],["bool",15]]],[11,"ge","","",29,[[["xcr0",3]],["bool",15]]],[11,"partial_cmp","x86::irq","",32,[[["pagefaulterror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",32,[[["pagefaulterror",3]],["bool",15]]],[11,"le","","",32,[[["pagefaulterror",3]],["bool",15]]],[11,"gt","","",32,[[["pagefaulterror",3]],["bool",15]]],[11,"ge","","",32,[[["pagefaulterror",3]],["bool",15]]],[11,"partial_cmp","x86::segmentation","",35,[[["segmentselector",3]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["segmentselector",3]],["bool",15]]],[11,"le","","",35,[[["segmentselector",3]],["bool",15]]],[11,"gt","","",35,[[["segmentselector",3]],["bool",15]]],[11,"ge","","",35,[[["segmentselector",3]],["bool",15]]],[11,"partial_cmp","x86::vmx::vmcs::control","",47,[[["pinbasedcontrols",3]],[["ordering",4],["option",4]]]],[11,"lt","","",47,[[["pinbasedcontrols",3]],["bool",15]]],[11,"le","","",47,[[["pinbasedcontrols",3]],["bool",15]]],[11,"gt","","",47,[[["pinbasedcontrols",3]],["bool",15]]],[11,"ge","","",47,[[["pinbasedcontrols",3]],["bool",15]]],[11,"partial_cmp","","",48,[[["primarycontrols",3]],[["ordering",4],["option",4]]]],[11,"lt","","",48,[[["primarycontrols",3]],["bool",15]]],[11,"le","","",48,[[["primarycontrols",3]],["bool",15]]],[11,"gt","","",48,[[["primarycontrols",3]],["bool",15]]],[11,"ge","","",48,[[["primarycontrols",3]],["bool",15]]],[11,"partial_cmp","","",49,[[["secondarycontrols",3]],[["ordering",4],["option",4]]]],[11,"lt","","",49,[[["secondarycontrols",3]],["bool",15]]],[11,"le","","",49,[[["secondarycontrols",3]],["bool",15]]],[11,"gt","","",49,[[["secondarycontrols",3]],["bool",15]]],[11,"ge","","",49,[[["secondarycontrols",3]],["bool",15]]],[11,"partial_cmp","","",50,[[["entrycontrols",3]],[["ordering",4],["option",4]]]],[11,"lt","","",50,[[["entrycontrols",3]],["bool",15]]],[11,"le","","",50,[[["entrycontrols",3]],["bool",15]]],[11,"gt","","",50,[[["entrycontrols",3]],["bool",15]]],[11,"ge","","",50,[[["entrycontrols",3]],["bool",15]]],[11,"partial_cmp","","",51,[[["exitcontrols",3]],[["ordering",4],["option",4]]]],[11,"lt","","",51,[[["exitcontrols",3]],["bool",15]]],[11,"le","","",51,[[["exitcontrols",3]],["bool",15]]],[11,"gt","","",51,[[["exitcontrols",3]],["bool",15]]],[11,"ge","","",51,[[["exitcontrols",3]],["bool",15]]],[11,"add","x86::bits64::paging","",2,[[["paddr",3]]]],[11,"add","","",2,[[["u64",15]]]],[11,"add","","",2,[[["usize",15]]]],[11,"add","","",3,[[["vaddr",3]]]],[11,"add","","",3,[[["u64",15]]]],[11,"add","","",3,[[["usize",15]]]],[11,"add_assign","","",2,[[["paddr",3]]]],[11,"add_assign","","",2,[[["u64",15]]]],[11,"add_assign","","",3,[[["vaddr",3]]]],[11,"add_assign","","",3,[[["u64",15]]]],[11,"add_assign","","",3,[[["usize",15]]]],[11,"sub_assign","x86::bits32::eflags","Disables all flags enabled in the set.",0,[[["eflags",3]]]],[11,"sub_assign","x86::bits64::paging","Disables all flags enabled in the set.",4,[[["pml4flags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",6,[[["pdptflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["pdflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["ptflags",3]]]],[11,"sub_assign","x86::bits64::rflags","Disables all flags enabled in the set.",12,[[["rflags",3]]]],[11,"sub_assign","x86::controlregs","Disables all flags enabled in the set.",27,[[["cr0",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",28,[[["cr4",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",29,[[["xcr0",3]]]],[11,"sub_assign","x86::irq","Disables all flags enabled in the set.",32,[[["pagefaulterror",3]]]],[11,"sub_assign","x86::segmentation","Disables all flags enabled in the set.",35,[[["segmentselector",3]]]],[11,"sub_assign","x86::vmx::vmcs::control","Disables all flags enabled in the set.",47,[[["pinbasedcontrols",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",48,[[["primarycontrols",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",49,[[["secondarycontrols",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",50,[[["entrycontrols",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",51,[[["exitcontrols",3]]]],[11,"not","x86::bits32::eflags","Returns the complement of this set of flags.",0,[[],["eflags",3]]],[11,"not","x86::bits64::paging","Returns the complement of this set of flags.",4,[[],["pml4flags",3]]],[11,"not","","Returns the complement of this set of flags.",6,[[],["pdptflags",3]]],[11,"not","","Returns the complement of this set of flags.",8,[[],["pdflags",3]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["ptflags",3]]],[11,"not","x86::bits64::rflags","Returns the complement of this set of flags.",12,[[],["rflags",3]]],[11,"not","x86::controlregs","Returns the complement of this set of flags.",27,[[],["cr0",3]]],[11,"not","","Returns the complement of this set of flags.",28,[[],["cr4",3]]],[11,"not","","Returns the complement of this set of flags.",29,[[],["xcr0",3]]],[11,"not","x86::irq","Returns the complement of this set of flags.",32,[[],["pagefaulterror",3]]],[11,"not","x86::segmentation","Returns the complement of this set of flags.",35,[[],["segmentselector",3]]],[11,"not","x86::vmx::vmcs::control","Returns the complement of this set of flags.",47,[[],["pinbasedcontrols",3]]],[11,"not","","Returns the complement of this set of flags.",48,[[],["primarycontrols",3]]],[11,"not","","Returns the complement of this set of flags.",49,[[],["secondarycontrols",3]]],[11,"not","","Returns the complement of this set of flags.",50,[[],["entrycontrols",3]]],[11,"not","","Returns the complement of this set of flags.",51,[[],["exitcontrols",3]]],[11,"bitand","x86::bits32::eflags","Returns the intersection between the two sets of flags.",0,[[["eflags",3]],["eflags",3]]],[11,"bitand","x86::bits64::paging","",2,[[]]],[11,"bitand","","",2,[[["u64",15]]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",3,[[["u64",15]]]],[11,"bitand","","",3,[[["usize",15]]]],[11,"bitand","","",3,[[["i32",15]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",4,[[["pml4flags",3]],["pml4flags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",6,[[["pdptflags",3]],["pdptflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["pdflags",3]],["pdflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["ptflags",3]],["ptflags",3]]],[11,"bitand","x86::bits64::rflags","Returns the intersection between the two sets of flags.",12,[[["rflags",3]],["rflags",3]]],[11,"bitand","x86::controlregs","Returns the intersection between the two sets of flags.",27,[[["cr0",3]],["cr0",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",28,[[["cr4",3]],["cr4",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",29,[[["xcr0",3]],["xcr0",3]]],[11,"bitand","x86::irq","Returns the intersection between the two sets of flags.",32,[[["pagefaulterror",3]],["pagefaulterror",3]]],[11,"bitand","x86::segmentation","Returns the intersection between the two sets of flags.",35,[[["segmentselector",3]],["segmentselector",3]]],[11,"bitand","x86::vmx::vmcs::control","Returns the intersection between the two sets of flags.",47,[[["pinbasedcontrols",3]],["pinbasedcontrols",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",48,[[["primarycontrols",3]],["primarycontrols",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",49,[[["secondarycontrols",3]],["secondarycontrols",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",50,[[["entrycontrols",3]],["entrycontrols",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",51,[[["exitcontrols",3]],["exitcontrols",3]]],[11,"bitor","x86::bits32::eflags","Returns the union of the two sets of flags.",0,[[["eflags",3]],["eflags",3]]],[11,"bitor","x86::bits64::paging","",2,[[["paddr",3]]]],[11,"bitor","","",2,[[["u64",15]]]],[11,"bitor","","",3,[[["vaddr",3]],["vaddr",3]]],[11,"bitor","","",3,[[["u64",15]]]],[11,"bitor","","",3,[[["usize",15]]]],[11,"bitor","","Returns the union of the two sets of flags.",4,[[["pml4flags",3]],["pml4flags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",6,[[["pdptflags",3]],["pdptflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["pdflags",3]],["pdflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["ptflags",3]],["ptflags",3]]],[11,"bitor","x86::bits64::rflags","Returns the union of the two sets of flags.",12,[[["rflags",3]],["rflags",3]]],[11,"bitor","x86::controlregs","Returns the union of the two sets of flags.",27,[[["cr0",3]],["cr0",3]]],[11,"bitor","","Returns the union of the two sets of flags.",28,[[["cr4",3]],["cr4",3]]],[11,"bitor","","Returns the union of the two sets of flags.",29,[[["xcr0",3]],["xcr0",3]]],[11,"bitor","x86::irq","Returns the union of the two sets of flags.",32,[[["pagefaulterror",3]],["pagefaulterror",3]]],[11,"bitor","x86::segmentation","Returns the union of the two sets of flags.",35,[[["segmentselector",3]],["segmentselector",3]]],[11,"bitor","x86::vmx::vmcs::control","Returns the union of the two sets of flags.",47,[[["pinbasedcontrols",3]],["pinbasedcontrols",3]]],[11,"bitor","","Returns the union of the two sets of flags.",48,[[["primarycontrols",3]],["primarycontrols",3]]],[11,"bitor","","Returns the union of the two sets of flags.",49,[[["secondarycontrols",3]],["secondarycontrols",3]]],[11,"bitor","","Returns the union of the two sets of flags.",50,[[["entrycontrols",3]],["entrycontrols",3]]],[11,"bitor","","Returns the union of the two sets of flags.",51,[[["exitcontrols",3]],["exitcontrols",3]]],[11,"bitxor","x86::bits32::eflags","Returns the left flags, but with all the right flags …",0,[[["eflags",3]],["eflags",3]]],[11,"bitxor","x86::bits64::paging","Returns the left flags, but with all the right flags …",4,[[["pml4flags",3]],["pml4flags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",6,[[["pdptflags",3]],["pdptflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",8,[[["pdflags",3]],["pdflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",10,[[["ptflags",3]],["ptflags",3]]],[11,"bitxor","x86::bits64::rflags","Returns the left flags, but with all the right flags …",12,[[["rflags",3]],["rflags",3]]],[11,"bitxor","x86::controlregs","Returns the left flags, but with all the right flags …",27,[[["cr0",3]],["cr0",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",28,[[["cr4",3]],["cr4",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",29,[[["xcr0",3]],["xcr0",3]]],[11,"bitxor","x86::irq","Returns the left flags, but with all the right flags …",32,[[["pagefaulterror",3]],["pagefaulterror",3]]],[11,"bitxor","x86::segmentation","Returns the left flags, but with all the right flags …",35,[[["segmentselector",3]],["segmentselector",3]]],[11,"bitxor","x86::vmx::vmcs::control","Returns the left flags, but with all the right flags …",47,[[["pinbasedcontrols",3]],["pinbasedcontrols",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",48,[[["primarycontrols",3]],["primarycontrols",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",49,[[["secondarycontrols",3]],["secondarycontrols",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",50,[[["entrycontrols",3]],["entrycontrols",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",51,[[["exitcontrols",3]],["exitcontrols",3]]],[11,"shr","x86::bits64::paging","",2,[[["u64",15]]]],[11,"shr","","",3,[[["u64",15]]]],[11,"shr","","",3,[[["usize",15]]]],[11,"shr","","",3,[[["i32",15]]]],[11,"bitand_assign","x86::bits32::eflags","Disables all flags disabled in the set.",0,[[["eflags",3]]]],[11,"bitand_assign","x86::bits64::paging","Disables all flags disabled in the set.",4,[[["pml4flags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",6,[[["pdptflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["pdflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["ptflags",3]]]],[11,"bitand_assign","x86::bits64::rflags","Disables all flags disabled in the set.",12,[[["rflags",3]]]],[11,"bitand_assign","x86::controlregs","Disables all flags disabled in the set.",27,[[["cr0",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",28,[[["cr4",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",29,[[["xcr0",3]]]],[11,"bitand_assign","x86::irq","Disables all flags disabled in the set.",32,[[["pagefaulterror",3]]]],[11,"bitand_assign","x86::segmentation","Disables all flags disabled in the set.",35,[[["segmentselector",3]]]],[11,"bitand_assign","x86::vmx::vmcs::control","Disables all flags disabled in the set.",47,[[["pinbasedcontrols",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",48,[[["primarycontrols",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",49,[[["secondarycontrols",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",50,[[["entrycontrols",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",51,[[["exitcontrols",3]]]],[11,"bitor_assign","x86::bits32::eflags","Adds the set of flags.",0,[[["eflags",3]]]],[11,"bitor_assign","x86::bits64::paging","Adds the set of flags.",4,[[["pml4flags",3]]]],[11,"bitor_assign","","Adds the set of flags.",6,[[["pdptflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["pdflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["ptflags",3]]]],[11,"bitor_assign","x86::bits64::rflags","Adds the set of flags.",12,[[["rflags",3]]]],[11,"bitor_assign","x86::controlregs","Adds the set of flags.",27,[[["cr0",3]]]],[11,"bitor_assign","","Adds the set of flags.",28,[[["cr4",3]]]],[11,"bitor_assign","","Adds the set of flags.",29,[[["xcr0",3]]]],[11,"bitor_assign","x86::irq","Adds the set of flags.",32,[[["pagefaulterror",3]]]],[11,"bitor_assign","x86::segmentation","Adds the set of flags.",35,[[["segmentselector",3]]]],[11,"bitor_assign","x86::vmx::vmcs::control","Adds the set of flags.",47,[[["pinbasedcontrols",3]]]],[11,"bitor_assign","","Adds the set of flags.",48,[[["primarycontrols",3]]]],[11,"bitor_assign","","Adds the set of flags.",49,[[["secondarycontrols",3]]]],[11,"bitor_assign","","Adds the set of flags.",50,[[["entrycontrols",3]]]],[11,"bitor_assign","","Adds the set of flags.",51,[[["exitcontrols",3]]]],[11,"bitxor_assign","x86::bits32::eflags","Toggles the set of flags.",0,[[["eflags",3]]]],[11,"bitxor_assign","x86::bits64::paging","Toggles the set of flags.",4,[[["pml4flags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",6,[[["pdptflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["pdflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["ptflags",3]]]],[11,"bitxor_assign","x86::bits64::rflags","Toggles the set of flags.",12,[[["rflags",3]]]],[11,"bitxor_assign","x86::controlregs","Toggles the set of flags.",27,[[["cr0",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",28,[[["cr4",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",29,[[["xcr0",3]]]],[11,"bitxor_assign","x86::irq","Toggles the set of flags.",32,[[["pagefaulterror",3]]]],[11,"bitxor_assign","x86::segmentation","Toggles the set of flags.",35,[[["segmentselector",3]]]],[11,"bitxor_assign","x86::vmx::vmcs::control","Toggles the set of flags.",47,[[["pinbasedcontrols",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",48,[[["primarycontrols",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",49,[[["secondarycontrols",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",50,[[["entrycontrols",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",51,[[["exitcontrols",3]]]],[11,"hash","x86::bits32::eflags","",0,[[]]],[11,"hash","x86::bits64::paging","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",10,[[]]],[11,"hash","x86::bits64::rflags","",12,[[]]],[11,"hash","x86::controlregs","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","x86::irq","",32,[[]]],[11,"hash","x86::segmentation","",35,[[]]],[11,"hash","x86::vmx::vmcs::control","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"from_iter","x86::bits32::eflags","",0,[[["intoiterator",8]],["eflags",3]]],[11,"from_iter","x86::bits64::paging","",4,[[["intoiterator",8]],["pml4flags",3]]],[11,"from_iter","","",6,[[["intoiterator",8]],["pdptflags",3]]],[11,"from_iter","","",8,[[["intoiterator",8]],["pdflags",3]]],[11,"from_iter","","",10,[[["intoiterator",8]],["ptflags",3]]],[11,"from_iter","x86::bits64::rflags","",12,[[["intoiterator",8]],["rflags",3]]],[11,"from_iter","x86::controlregs","",27,[[["intoiterator",8]],["cr0",3]]],[11,"from_iter","","",28,[[["intoiterator",8]],["cr4",3]]],[11,"from_iter","","",29,[[["intoiterator",8]],["xcr0",3]]],[11,"from_iter","x86::irq","",32,[[["intoiterator",8]],["pagefaulterror",3]]],[11,"from_iter","x86::segmentation","",35,[[["intoiterator",8]],["segmentselector",3]]],[11,"from_iter","x86::vmx::vmcs::control","",47,[[["intoiterator",8]],["pinbasedcontrols",3]]],[11,"from_iter","","",48,[[["intoiterator",8]],["primarycontrols",3]]],[11,"from_iter","","",49,[[["intoiterator",8]],["secondarycontrols",3]]],[11,"from_iter","","",50,[[["intoiterator",8]],["entrycontrols",3]]],[11,"from_iter","","",51,[[["intoiterator",8]],["exitcontrols",3]]],[11,"into","x86::bits64::paging","",2,[[],["u64",15]]],[11,"into","","",2,[[],["usize",15]]],[11,"into","","",3,[[],["u64",15]]],[11,"into","","",3,[[],["usize",15]]],[11,"into","x86::apic","",25,[[],["usize",15]]],[11,"fmt","x86::bits32::eflags","",0,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::paging","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::rflags","",12,[[["formatter",3]],["result",6]]],[11,"fmt","x86::controlregs","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","x86::irq","",32,[[["formatter",3]],["result",6]]],[11,"fmt","x86::segmentation","",35,[[["formatter",3]],["result",6]]],[11,"fmt","x86::vmx::vmcs::control","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits32::eflags","",0,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::paging","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::rflags","",12,[[["formatter",3]],["result",6]]],[11,"fmt","x86::controlregs","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","x86::irq","",32,[[["formatter",3]],["result",6]]],[11,"fmt","x86::segmentation","",35,[[["formatter",3]],["result",6]]],[11,"fmt","x86::vmx::vmcs::control","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits32::eflags","",0,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::paging","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::rflags","",12,[[["formatter",3]],["result",6]]],[11,"fmt","x86::controlregs","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","x86::irq","",32,[[["formatter",3]],["result",6]]],[11,"fmt","x86::segmentation","",35,[[["formatter",3]],["result",6]]],[11,"fmt","x86::vmx::vmcs::control","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits32::eflags","",0,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::paging","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::rflags","",12,[[["formatter",3]],["result",6]]],[11,"fmt","x86::controlregs","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","x86::irq","",32,[[["formatter",3]],["result",6]]],[11,"fmt","x86::segmentation","",35,[[["formatter",3]],["result",6]]],[11,"fmt","x86::vmx::vmcs::control","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","x86::bits64::paging","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"extend","x86::bits32::eflags","",0,[[["intoiterator",8]]]],[11,"extend","x86::bits64::paging","",4,[[["intoiterator",8]]]],[11,"extend","","",6,[[["intoiterator",8]]]],[11,"extend","","",8,[[["intoiterator",8]]]],[11,"extend","","",10,[[["intoiterator",8]]]],[11,"extend","x86::bits64::rflags","",12,[[["intoiterator",8]]]],[11,"extend","x86::controlregs","",27,[[["intoiterator",8]]]],[11,"extend","","",28,[[["intoiterator",8]]]],[11,"extend","","",29,[[["intoiterator",8]]]],[11,"extend","x86::irq","",32,[[["intoiterator",8]]]],[11,"extend","x86::segmentation","",35,[[["intoiterator",8]]]],[11,"extend","x86::vmx::vmcs::control","",47,[[["intoiterator",8]]]],[11,"extend","","",48,[[["intoiterator",8]]]],[11,"extend","","",49,[[["intoiterator",8]]]],[11,"extend","","",50,[[["intoiterator",8]]]],[11,"extend","","",51,[[["intoiterator",8]]]],[11,"clone","x86::bits32::eflags","",0,[[],["eflags",3]]],[11,"clone","x86::bits32::task","",1,[[],["taskstatesegment",3]]],[11,"clone","x86::bits64::paging","",2,[[],["paddr",3]]],[11,"clone","","",3,[[],["vaddr",3]]],[11,"clone","","",4,[[],["pml4flags",3]]],[11,"clone","","",5,[[],["pml4entry",3]]],[11,"clone","","",6,[[],["pdptflags",3]]],[11,"clone","","",7,[[],["pdptentry",3]]],[11,"clone","","",8,[[],["pdflags",3]]],[11,"clone","","",9,[[],["pdentry",3]]],[11,"clone","","",10,[[],["ptflags",3]]],[11,"clone","","",11,[[],["ptentry",3]]],[11,"clone","x86::bits64::rflags","",12,[[],["rflags",3]]],[11,"clone","x86::bits64::segmentation","",13,[[],["descriptor64",3]]],[11,"clone","x86::bits64::task","",14,[[],["taskstatesegment",3]]],[11,"clone","x86::apic","",25,[[],["apicid",4]]],[11,"clone","x86::controlregs","",27,[[],["cr0",3]]],[11,"clone","","",28,[[],["cr4",3]]],[11,"clone","","",29,[[],["xcr0",3]]],[11,"clone","x86::irq","",32,[[],["pagefaulterror",3]]],[11,"clone","x86::segmentation","",35,[[],["segmentselector",3]]],[11,"clone","","",36,[[],["systemdescriptortypes64",4]]],[11,"clone","","",37,[[],["systemdescriptortypes32",4]]],[11,"clone","","",38,[[],["datasegmenttype",4]]],[11,"clone","","",39,[[],["codesegmenttype",4]]],[11,"clone","","",46,[[],["descriptor",3]]],[11,"clone","x86::vmx::vmcs::control","",47,[[],["pinbasedcontrols",3]]],[11,"clone","","",48,[[],["primarycontrols",3]]],[11,"clone","","",49,[[],["secondarycontrols",3]]],[11,"clone","","",50,[[],["entrycontrols",3]]],[11,"clone","","",51,[[],["exitcontrols",3]]],[11,"clone","x86","",63,[[],["ring",4]]],[11,"default","x86::bits64::segmentation","",13,[[],["descriptor64",3]]],[11,"default","x86::bits64::task","",14,[[],["taskstatesegment",3]]],[11,"default","x86::dtables","",30,[[],["descriptortablepointer",3]]],[11,"default","x86::segmentation","",46,[[],["descriptor",3]]],[11,"new","x86::cpuid","Return new CPUID struct.",67,[[],["cpuid",3]]],[11,"get_vendor_info","","Return information about vendor. This is typically a …",67,[[],[["option",4],["vendorinfo",3]]]],[11,"get_feature_info","","Query a set of features that are available on this CPU.",67,[[],[["option",4],["featureinfo",3]]]],[11,"get_cache_info","","Query basic information about caches. This will just …",67,[[],[["option",4],["cacheinfoiter",3]]]],[11,"get_processor_serial","","Retrieve serial number of processor.",67,[[],[["processorserial",3],["option",4]]]],[11,"get_cache_parameters","","Retrieve more elaborate information about caches (as …",67,[[],[["option",4],["cacheparametersiter",3]]]],[11,"get_monitor_mwait_info","","Information about how monitor/mwait works on this CPU.",67,[[],[["monitormwaitinfo",3],["option",4]]]],[11,"get_thermal_power_info","","Query information about thermal and power management …",67,[[],[["thermalpowerinfo",3],["option",4]]]],[11,"get_extended_feature_info","","Find out about more features supported by this CPU.",67,[[],[["extendedfeatures",3],["option",4]]]],[11,"get_direct_cache_access_info","","Direct cache access info.",67,[[],[["directcacheaccessinfo",3],["option",4]]]],[11,"get_performance_monitoring_info","","Info about performance monitoring (how many counters …",67,[[],[["option",4],["performancemonitoringinfo",3]]]],[11,"get_extended_topology_info","","Information about topology (how many cores and what kind …",67,[[],[["extendedtopologyiter",3],["option",4]]]],[11,"get_extended_state_info","","Information for saving/restoring extended register state.",67,[[],[["option",4],["extendedstateinfo",3]]]],[11,"get_rdt_monitoring_info","","Quality of service informations.",67,[[],[["option",4],["rdtmonitoringinfo",3]]]],[11,"get_rdt_allocation_info","","Quality of service enforcement information.",67,[[],[["rdtallocationinfo",3],["option",4]]]],[11,"get_sgx_info","","",67,[[],[["sgxinfo",3],["option",4]]]],[11,"get_processor_trace_info","","Intel Processor Trace Enumeration Information.",67,[[],[["processortraceinfo",3],["option",4]]]],[11,"get_tsc_info","","Time Stamp Counter/Core Crystal Clock Information.",67,[[],[["tscinfo",3],["option",4]]]],[11,"get_processor_frequency_info","","Processor Frequency Information.",67,[[],[["processorfrequencyinfo",3],["option",4]]]],[11,"deterministic_address_translation_info","","",67,[[],[["option",4],["datiter",3]]]],[11,"get_soc_vendor_info","","",67,[[],[["option",4],["socvendorinfo",3]]]],[11,"get_hypervisor_info","","",67,[[],[["hypervisorinfo",3],["option",4]]]],[11,"get_extended_function_info","","Extended functionality of CPU described here (including …",67,[[],[["option",4],["extendedfunctioninfo",3]]]],[11,"get_memory_encryption_info","","",67,[[],[["memoryencryptioninfo",3],["option",4]]]],[11,"as_string","","Return vendor identification as human readable string.",68,[[],["str",15]]],[11,"desc","","Description of the cache (from Intel Manual)",55,[[],["str",15]]],[11,"serial_lower","","Bits 00-31 of 96 bit processor serial number. (Available …",70,[[],["u32",15]]],[11,"serial_middle","","Bits 32-63 of 96 bit processor serial number. (Available …",70,[[],["u32",15]]],[11,"serial","","",70,[[],["u64",15]]],[11,"extended_family_id","","Version Information: Extended Family",71,[[],["u8",15]]],[11,"extended_model_id","","Version Information: Extended Model",71,[[],["u8",15]]],[11,"family_id","","Version Information: Family",71,[[],["u8",15]]],[11,"model_id","","Version Information: Model",71,[[],["u8",15]]],[11,"stepping_id","","Version Information: Stepping ID",71,[[],["u8",15]]],[11,"brand_index","","Brand Index",71,[[],["u8",15]]],[11,"cflush_cache_line_size","","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)",71,[[],["u8",15]]],[11,"initial_local_apic_id","","Initial APIC ID",71,[[],["u8",15]]],[11,"max_logical_processor_ids","","Maximum number of addressable IDs for logical processors …",71,[[],["u8",15]]],[11,"has_sse3","","Streaming SIMD Extensions 3 (SSE3). A value of 1 …",71,[[],["bool",15]]],[11,"has_pclmulqdq","","PCLMULQDQ. A value of 1 indicates the processor supports …",71,[[],["bool",15]]],[11,"has_ds_area","","64-bit DS Area. A value of 1 indicates the processor …",71,[[],["bool",15]]],[11,"has_monitor_mwait","","MONITOR/MWAIT. A value of 1 indicates the processor …",71,[[],["bool",15]]],[11,"has_cpl","","CPL Qualified Debug Store. A value of 1 indicates the …",71,[[],["bool",15]]],[11,"has_vmx","","Virtual Machine Extensions. A value of 1 indicates that …",71,[[],["bool",15]]],[11,"has_smx","","Safer Mode Extensions. A value of 1 indicates that the …",71,[[],["bool",15]]],[11,"has_eist","","Enhanced Intel SpeedStep® technology. A value of 1 …",71,[[],["bool",15]]],[11,"has_tm2","","Thermal Monitor 2. A value of 1 indicates whether the …",71,[[],["bool",15]]],[11,"has_ssse3","","A value of 1 indicates the presence of the Supplemental …",71,[[],["bool",15]]],[11,"has_cnxtid","","L1 Context ID. A value of 1 indicates the L1 data cache …",71,[[],["bool",15]]],[11,"has_fma","","A value of 1 indicates the processor supports FMA …",71,[[],["bool",15]]],[11,"has_cmpxchg16b","","CMPXCHG16B Available. A value of 1 indicates that the …",71,[[],["bool",15]]],[11,"has_pdcm","","Perfmon and Debug Capability: A value of 1 indicates the …",71,[[],["bool",15]]],[11,"has_pcid","","Process-context identifiers. A value of 1 indicates that …",71,[[],["bool",15]]],[11,"has_dca","","A value of 1 indicates the processor supports the ability …",71,[[],["bool",15]]],[11,"has_sse41","","A value of 1 indicates that the processor supports SSE4.1.",71,[[],["bool",15]]],[11,"has_sse42","","A value of 1 indicates that the processor supports SSE4.2.",71,[[],["bool",15]]],[11,"has_x2apic","","A value of 1 indicates that the processor supports x2APIC …",71,[[],["bool",15]]],[11,"has_movbe","","A value of 1 indicates that the processor supports MOVBE …",71,[[],["bool",15]]],[11,"has_popcnt","","A value of 1 indicates that the processor supports the …",71,[[],["bool",15]]],[11,"has_tsc_deadline","","A value of 1 indicates that the processors local APIC …",71,[[],["bool",15]]],[11,"has_aesni","","A value of 1 indicates that the processor supports the …",71,[[],["bool",15]]],[11,"has_xsave","","A value of 1 indicates that the processor supports the …",71,[[],["bool",15]]],[11,"has_oxsave","","A value of 1 indicates that the OS has enabled …",71,[[],["bool",15]]],[11,"has_avx","","A value of 1 indicates the processor supports the AVX …",71,[[],["bool",15]]],[11,"has_f16c","","A value of 1 indicates that processor supports 16-bit …",71,[[],["bool",15]]],[11,"has_rdrand","","A value of 1 indicates that processor supports RDRAND …",71,[[],["bool",15]]],[11,"has_hypervisor","","A value of 1 indicates the indicates the presence of a …",71,[[],["bool",15]]],[11,"has_fpu","","Floating Point Unit On-Chip. The processor contains an …",71,[[],["bool",15]]],[11,"has_vme","","Virtual 8086 Mode Enhancements. Virtual 8086 mode …",71,[[],["bool",15]]],[11,"has_de","","Debugging Extensions. Support for I/O breakpoints, …",71,[[],["bool",15]]],[11,"has_pse","","Page Size Extension. Large pages of size 4 MByte are …",71,[[],["bool",15]]],[11,"has_tsc","","Time Stamp Counter. The RDTSC instruction is supported, …",71,[[],["bool",15]]],[11,"has_msr","","Model Specific Registers RDMSR and WRMSR Instructions. …",71,[[],["bool",15]]],[11,"has_pae","","Physical Address Extension. Physical addresses greater …",71,[[],["bool",15]]],[11,"has_mce","","Machine Check Exception. Exception 18 is defined for …",71,[[],["bool",15]]],[11,"has_cmpxchg8b","","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …",71,[[],["bool",15]]],[11,"has_apic","","APIC On-Chip. The processor contains an Advanced …",71,[[],["bool",15]]],[11,"has_sysenter_sysexit","","SYSENTER and SYSEXIT Instructions. The SYSENTER and …",71,[[],["bool",15]]],[11,"has_mtrr","","Memory Type Range Registers. MTRRs are supported. The …",71,[[],["bool",15]]],[11,"has_pge","","Page Global Bit. The global bit is supported in …",71,[[],["bool",15]]],[11,"has_mca","","Machine Check Architecture. A value of 1 indicates the …",71,[[],["bool",15]]],[11,"has_cmov","","Conditional Move Instructions. The conditional move …",71,[[],["bool",15]]],[11,"has_pat","","Page Attribute Table. Page Attribute Table is supported. …",71,[[],["bool",15]]],[11,"has_pse36","","36-Bit Page Size Extension. 4-MByte pages addressing …",71,[[],["bool",15]]],[11,"has_psn","","Processor Serial Number. The processor supports the …",71,[[],["bool",15]]],[11,"has_clflush","","CLFLUSH Instruction. CLFLUSH Instruction is supported.",71,[[],["bool",15]]],[11,"has_ds","","Debug Store. The processor supports the ability to write …",71,[[],["bool",15]]],[11,"has_acpi","","Thermal Monitor and Software Controlled Clock Facilities. …",71,[[],["bool",15]]],[11,"has_mmx","","Intel MMX Technology. The processor supports the Intel …",71,[[],["bool",15]]],[11,"has_fxsave_fxstor","","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …",71,[[],["bool",15]]],[11,"has_sse","","SSE. The processor supports the SSE extensions.",71,[[],["bool",15]]],[11,"has_sse2","","SSE2. The processor supports the SSE2 extensions.",71,[[],["bool",15]]],[11,"has_ss","","Self Snoop. The processor supports the management of …",71,[[],["bool",15]]],[11,"has_htt","","Max APIC IDs reserved field is Valid. A value of 0 for …",71,[[],["bool",15]]],[11,"has_tm","","Thermal Monitor. The processor implements the thermal …",71,[[],["bool",15]]],[11,"has_pbe","","Pending Break Enable. The processor supports the use of …",71,[[],["bool",15]]],[11,"cache_type","","Cache Type",73,[[],["cachetype",4]]],[11,"level","","Cache Level (starts at 1)",73,[[],["u8",15]]],[11,"is_self_initializing","","Self Initializing cache level (does not need SW …",73,[[],["bool",15]]],[11,"is_fully_associative","","Fully Associative cache",73,[[],["bool",15]]],[11,"max_cores_for_cache","","Maximum number of addressable IDs for logical processors …",73,[[],["usize",15]]],[11,"max_cores_for_package","","Maximum number of addressable IDs for processor cores in …",73,[[],["usize",15]]],[11,"coherency_line_size","","System Coherency Line Size (Bits 11-00)",73,[[],["usize",15]]],[11,"physical_line_partitions","","Physical Line partitions (Bits 21-12)",73,[[],["usize",15]]],[11,"associativity","","Ways of associativity (Bits 31-22)",73,[[],["usize",15]]],[11,"sets","","Number of Sets (Bits 31-00)",73,[[],["usize",15]]],[11,"is_write_back_invalidate","","Write-Back Invalidate/Invalidate (Bit 0) False: …",73,[[],["bool",15]]],[11,"is_inclusive","","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …",73,[[],["bool",15]]],[11,"has_complex_indexing","","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…",73,[[],["bool",15]]],[11,"smallest_monitor_line","","Smallest monitor-line size in bytes (default is …",74,[[],["u16",15]]],[11,"largest_monitor_line","","Largest monitor-line size in bytes (default is …",74,[[],["u16",15]]],[11,"extensions_supported","","Enumeration of Monitor-Mwait extensions (beyond EAX and …",74,[[],["bool",15]]],[11,"interrupts_as_break_event","","Supports treating interrupts as break-event for MWAIT, …",74,[[],["bool",15]]],[11,"supported_c0_states","","Number of C0 sub C-states supported using MWAIT (Bits 03 …",74,[[],["u16",15]]],[11,"supported_c1_states","","Number of C1 sub C-states supported using MWAIT (Bits 07 …",74,[[],["u16",15]]],[11,"supported_c2_states","","Number of C2 sub C-states supported using MWAIT (Bits 11 …",74,[[],["u16",15]]],[11,"supported_c3_states","","Number of C3 sub C-states supported using MWAIT (Bits 15 …",74,[[],["u16",15]]],[11,"supported_c4_states","","Number of C4 sub C-states supported using MWAIT (Bits 19 …",74,[[],["u16",15]]],[11,"supported_c5_states","","Number of C5 sub C-states supported using MWAIT (Bits 23 …",74,[[],["u16",15]]],[11,"supported_c6_states","","Number of C6 sub C-states supported using MWAIT (Bits 27 …",74,[[],["u16",15]]],[11,"supported_c7_states","","Number of C7 sub C-states supported using MWAIT (Bits 31 …",74,[[],["u16",15]]],[11,"dts_irq_threshold","","Number of Interrupt Thresholds in Digital Thermal Sensor",75,[[],["u8",15]]],[11,"has_dts","","Digital temperature sensor is supported if set.",75,[[],["bool",15]]],[11,"has_turbo_boost","","Intel Turbo Boost Technology Available (see description …",75,[[],["bool",15]]],[11,"has_arat","","ARAT. APIC-Timer-always-running feature is supported if …",75,[[],["bool",15]]],[11,"has_pln","","PLN. Power limit notification controls are supported if …",75,[[],["bool",15]]],[11,"has_ecmd","","ECMD. Clock modulation duty cycle extension is supported …",75,[[],["bool",15]]],[11,"has_ptm","","PTM. Package thermal management is supported if set.",75,[[],["bool",15]]],[11,"has_hwp","","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …",75,[[],["bool",15]]],[11,"has_hwp_notification","","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …",75,[[],["bool",15]]],[11,"has_hwp_activity_window","","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …",75,[[],["bool",15]]],[11,"has_hwp_energy_performance_preference","","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …",75,[[],["bool",15]]],[11,"has_hwp_package_level_request","","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …",75,[[],["bool",15]]],[11,"has_hdc","","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …",75,[[],["bool",15]]],[11,"has_turbo_boost3","","Intel® Turbo Boost Max Technology 3.0 available.",75,[[],["bool",15]]],[11,"has_hwp_capabilities","","HWP Capabilities. Highest Performance change is supported …",75,[[],["bool",15]]],[11,"has_hwp_peci_override","","HWP PECI override is supported if set.",75,[[],["bool",15]]],[11,"has_flexible_hwp","","Flexible HWP is supported if set.",75,[[],["bool",15]]],[11,"has_hwp_fast_access_mode","","Fast access mode for the IA32_HWP_REQUEST MSR is …",75,[[],["bool",15]]],[11,"has_ignore_idle_processor_hwp_request","","Ignoring Idle Logical Processor HWP request is supported …",75,[[],["bool",15]]],[11,"has_hw_coord_feedback","","Hardware Coordination Feedback Capability (Presence of …",75,[[],["bool",15]]],[11,"has_energy_bias_pref","","The processor supports performance-energy bias preference …",75,[[],["bool",15]]],[11,"has_fsgsbase","","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …",76,[[],["bool",15]]],[11,"has_tsc_adjust_msr","","IA32_TSC_ADJUST MSR is supported if 1.",76,[[],["bool",15]]],[11,"has_bmi1","","BMI1",76,[[],["bool",15]]],[11,"has_hle","","HLE",76,[[],["bool",15]]],[11,"has_avx2","","AVX2",76,[[],["bool",15]]],[11,"has_fdp","","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …",76,[[],["bool",15]]],[11,"has_smep","","SMEP. Supports Supervisor-Mode Execution Prevention if 1.",76,[[],["bool",15]]],[11,"has_bmi2","","BMI2",76,[[],["bool",15]]],[11,"has_rep_movsb_stosb","","Supports Enhanced REP MOVSB/STOSB if 1.",76,[[],["bool",15]]],[11,"has_invpcid","","INVPCID. If 1, supports INVPCID instruction for system …",76,[[],["bool",15]]],[11,"has_rtm","","RTM",76,[[],["bool",15]]],[11,"has_rdtm","","Supports Intel Resource Director Technology (RDT) …",76,[[],["bool",15]]],[11,"has_fpu_cs_ds_deprecated","","Deprecates FPU CS and FPU DS values if 1.",76,[[],["bool",15]]],[11,"has_mpx","","MPX. Supports Intel Memory Protection Extensions if 1.",76,[[],["bool",15]]],[11,"has_rdta","","Supports Intel Resource Director Technology (RDT) …",76,[[],["bool",15]]],[11,"has_rdseed","","Supports RDSEED.",76,[[],["bool",15]]],[11,"has_rdseet","","Supports RDSEED (deprecated alias).",76,[[],["bool",15]]],[11,"has_adx","","Supports ADX.",76,[[],["bool",15]]],[11,"has_smap","","SMAP. Supports Supervisor-Mode Access Prevention (and the …",76,[[],["bool",15]]],[11,"has_clflushopt","","Supports CLFLUSHOPT.",76,[[],["bool",15]]],[11,"has_processor_trace","","Supports Intel Processor Trace.",76,[[],["bool",15]]],[11,"has_sha","","Supports SHA Instructions.",76,[[],["bool",15]]],[11,"has_sgx","","Supports Intel® Software Guard Extensions (Intel® SGX …",76,[[],["bool",15]]],[11,"has_avx512f","","Supports AVX512F.",76,[[],["bool",15]]],[11,"has_avx512dq","","Supports AVX512DQ.",76,[[],["bool",15]]],[11,"has_avx512_ifma","","AVX512_IFMA",76,[[],["bool",15]]],[11,"has_avx512pf","","AVX512PF",76,[[],["bool",15]]],[11,"has_avx512er","","AVX512ER",76,[[],["bool",15]]],[11,"has_avx512cd","","AVX512CD",76,[[],["bool",15]]],[11,"has_avx512bw","","AVX512BW",76,[[],["bool",15]]],[11,"has_avx512vl","","AVX512VL",76,[[],["bool",15]]],[11,"has_clwb","","CLWB",76,[[],["bool",15]]],[11,"has_prefetchwt1","","Has PREFETCHWT1 (Intel® Xeon Phi™ only).",76,[[],["bool",15]]],[11,"has_umip","","Supports user-mode instruction prevention if 1.",76,[[],["bool",15]]],[11,"has_pku","","Supports protection keys for user-mode pages.",76,[[],["bool",15]]],[11,"has_ospke","","OS has set CR4.PKE to enable protection keys (and the …",76,[[],["bool",15]]],[11,"has_rdpid","","RDPID and IA32_TSC_AUX are available.",76,[[],["bool",15]]],[11,"has_sgx_lc","","Supports SGX Launch Configuration.",76,[[],["bool",15]]],[11,"mawau_value","","The value of MAWAU used by the BNDLDX and BNDSTX …",76,[[],["u8",15]]],[11,"get_dca_cap_value","","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR …",77,[[],["u32",15]]],[11,"version_id","","Version ID of architectural performance monitoring. (Bits …",78,[[],["u8",15]]],[11,"number_of_counters","","Number of general-purpose performance monitoring counter …",78,[[],["u8",15]]],[11,"counter_bit_width","","Bit width of general-purpose, performance monitoring …",78,[[],["u8",15]]],[11,"ebx_length","","Length of EBX bit vector to enumerate architectural …",78,[[],["u8",15]]],[11,"fixed_function_counters","","Number of fixed-function performance counters (if Version …",78,[[],["u8",15]]],[11,"fixed_function_counters_bit_width","","Bit width of fixed-function performance counters (if …",78,[[],["u8",15]]],[11,"has_any_thread_deprecation","","AnyThread deprecation",78,[[],["bool",15]]],[11,"is_core_cyc_ev_unavailable","","Core cycle event not available if 1.",78,[[],["bool",15]]],[11,"is_inst_ret_ev_unavailable","","Instruction retired event not available if 1.",78,[[],["bool",15]]],[11,"is_ref_cycle_ev_unavailable","","Reference cycles event not available if 1.",78,[[],["bool",15]]],[11,"is_cache_ref_ev_unavailable","","Last-level cache reference event not available if 1.",78,[[],["bool",15]]],[11,"is_ll_cache_miss_ev_unavailable","","Last-level cache misses event not available if 1.",78,[[],["bool",15]]],[11,"is_branch_inst_ret_ev_unavailable","","Branch instruction retired event not available if 1.",78,[[],["bool",15]]],[11,"is_branch_midpred_ev_unavailable","","Branch mispredict retired event not available if 1.",78,[[],["bool",15]]],[11,"processors","","Number of logical processors at this level type. The …",80,[[],["u16",15]]],[11,"level_number","","Level number.",80,[[],["u8",15]]],[11,"level_type","","",80,[[],["topologytype",4]]],[11,"x2apic_id","","x2APIC ID the current logical processor. (Bits 31-00)",80,[[],["u32",15]]],[11,"shift_right_for_next_apic_id","","Number of bits to shift right on x2APIC ID to get a …",80,[[],["u32",15]]],[11,"xcr0_supports_legacy_x87","","Support for legacy x87 in XCR0.",81,[[],["bool",15]]],[11,"xcr0_supports_sse_128","","Support for SSE 128-bit in XCR0.",81,[[],["bool",15]]],[11,"xcr0_supports_avx_256","","Support for AVX 256-bit in XCR0.",81,[[],["bool",15]]],[11,"xcr0_supports_mpx_bndregs","","Support for MPX BNDREGS in XCR0.",81,[[],["bool",15]]],[11,"xcr0_supports_mpx_bndcsr","","Support for MPX BNDCSR in XCR0.",81,[[],["bool",15]]],[11,"xcr0_supports_avx512_opmask","","Support for AVX512 OPMASK in XCR0.",81,[[],["bool",15]]],[11,"xcr0_supports_avx512_zmm_hi256","","Support for AVX512 ZMM Hi256 XCR0.",81,[[],["bool",15]]],[11,"xcr0_supports_avx512_zmm_hi16","","Support for AVX512 ZMM Hi16 in XCR0.",81,[[],["bool",15]]],[11,"xcr0_supports_pkru","","Support for PKRU in XCR0.",81,[[],["bool",15]]],[11,"ia32_xss_supports_pt","","Support for PT in IA32_XSS.",81,[[],["bool",15]]],[11,"ia32_xss_supports_hdc","","Support for HDC in IA32_XSS.",81,[[],["bool",15]]],[11,"xsave_area_size_enabled_features","","Maximum size (bytes, from the beginning of the …",81,[[],["u32",15]]],[11,"xsave_area_size_supported_features","","Maximum size (bytes, from the beginning of the …",81,[[],["u32",15]]],[11,"has_xsaveopt","","CPU has xsaveopt feature.",81,[[],["bool",15]]],[11,"has_xsavec","","Supports XSAVEC and the compacted form of XRSTOR if set.",81,[[],["bool",15]]],[11,"has_xgetbv","","Supports XGETBV with ECX = 1 if set.",81,[[],["bool",15]]],[11,"has_xsaves_xrstors","","Supports XSAVES/XRSTORS and IA32_XSS if set.",81,[[],["bool",15]]],[11,"xsave_size","","The size in bytes of the XSAVE area containing all states …",81,[[],["u32",15]]],[11,"iter","","Iterator over extended state enumeration levels >= 2.",81,[[],["extendedstateiter",3]]],[11,"size","","The size in bytes (from the offset specified in EBX) of …",58,[[],["u32",15]]],[11,"offset","","The offset in bytes of this extended state components …",58,[[],["u32",15]]],[11,"is_in_ia32_xss","","True if the bit n (corresponding to the sub-leaf index) …",58,[[],["bool",15]]],[11,"is_in_xcr0","","True if bit n is supported in XCR0.",58,[[],["bool",15]]],[11,"is_compacted_format","","Returns true when the compacted format of an XSAVE area …",58,[[],["bool",15]]],[11,"rmid_range","","Maximum range (zero-based) of RMID within this physical …",83,[[],["u32",15]]],[11,"has_l3_monitoring","","Supports L3 Cache Intel RDT Monitoring.",83,[[],["bool",15]]],[11,"l3_monitoring","","L3 Cache Monitoring.",83,[[],[["l3monitoringinfo",3],["option",4]]]],[11,"conversion_factor","","Conversion factor from reported IA32_QM_CTR value to …",84,[[],["u32",15]]],[11,"maximum_rmid_range","","Maximum range (zero-based) of RMID of L3.",84,[[],["u32",15]]],[11,"has_occupancy_monitoring","","Supports occupancy monitoring.",84,[[],["bool",15]]],[11,"has_total_bandwidth_monitoring","","Supports total bandwidth monitoring.",84,[[],["bool",15]]],[11,"has_local_bandwidth_monitoring","","Supports local bandwidth monitoring.",84,[[],["bool",15]]],[11,"has_l3_cat","","Supports L3 Cache Allocation.",85,[[],["bool",15]]],[11,"has_l2_cat","","Supports L2 Cache Allocation.",85,[[],["bool",15]]],[11,"has_memory_bandwidth_allocation","","Supports Memory Bandwidth Allocation.",85,[[],["bool",15]]],[11,"l3_cat","","L3 Cache Allocation Information.",85,[[],[["option",4],["l3catinfo",3]]]],[11,"l2_cat","","L2 Cache Allocation Information.",85,[[],[["l2catinfo",3],["option",4]]]],[11,"memory_bandwidth_allocation","","Memory Bandwidth Allocation Information.",85,[[],[["membwallocationinfo",3],["option",4]]]],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",86,[[],["u8",15]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation …",86,[[],["u32",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",86,[[],["u16",15]]],[11,"has_code_data_prioritization","","Is Code and Data Prioritization Technology supported?",86,[[],["bool",15]]],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",87,[[],["u8",15]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation …",87,[[],["u32",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",87,[[],["u16",15]]],[11,"max_hba_throttling","","Reports the maximum MBA throttling value supported for …",88,[[],["u16",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",88,[[],["u16",15]]],[11,"has_linear_response_delay","","Reports whether the response of the delay values is …",88,[[],["bool",15]]],[11,"has_sgx1","","Has SGX1 support.",89,[[],["bool",15]]],[11,"has_sgx2","","Has SGX2 support.",89,[[],["bool",15]]],[11,"has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","","Supports ENCLV instruction leaves EINCVIRTCHILD, …",89,[[],["bool",15]]],[11,"has_encls_leaves_etrackc_erdinfo_eldbc_elduc","","Supports ENCLS instruction leaves ETRACKC, ERDINFO, …",89,[[],["bool",15]]],[11,"miscselect","","Bit vector of supported extended SGX features.",89,[[],["u32",15]]],[11,"max_enclave_size_non_64bit","","The maximum supported enclave size in non-64-bit mode is …",89,[[],["u8",15]]],[11,"max_enclave_size_64bit","","The maximum supported enclave size in 64-bit mode is …",89,[[],["u8",15]]],[11,"secs_attributes","","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …",89,[[]]],[11,"iter","","Iterator over SGX sub-leafs.",89,[[],["sgxsectioniter",3]]],[11,"physical_base","","The physical address of the base of the EPC section",91,[[],["u64",15]]],[11,"size","","Size of the corresponding EPC section within the …",91,[[],["u64",15]]],[11,"has_rtit_cr3_match","","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be …",92,[[],["bool",15]]],[11,"has_configurable_psb_and_cycle_accurate_mode","","If true, Indicates support of Configurable PSB and …",92,[[],["bool",15]]],[11,"has_ip_tracestop_filtering","","If true, Indicates support of IP Filtering, TraceStop …",92,[[],["bool",15]]],[11,"has_mtc_timing_packet_coefi_suppression","","If true, Indicates support of MTC timing packet and …",92,[[],["bool",15]]],[11,"has_ptwrite","","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…",92,[[],["bool",15]]],[11,"has_power_event_trace","","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…",92,[[],["bool",15]]],[11,"has_topa","","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …",92,[[],["bool",15]]],[11,"has_topa_maximum_entries","","If true, ToPA tables can hold any number of output …",92,[[],["bool",15]]],[11,"has_single_range_output_scheme","","If true, Indicates support of Single-Range Output scheme.",92,[[],["bool",15]]],[11,"has_trace_transport_subsystem","","If true, Indicates support of output to Trace Transport …",92,[[],["bool",15]]],[11,"has_lip_with_cs_base","","If true, Generated packets which contain IP payloads have …",92,[[],["bool",15]]],[11,"configurable_address_ranges","","Number of configurable Address Ranges for filtering (Bits …",92,[[],["u8",15]]],[11,"supported_mtc_period_encodings","","Bitmap of supported MTC period encodings (Bit 31:16).",92,[[],["u16",15]]],[11,"supported_cycle_threshold_value_encodings","","Bitmap of supported Cycle Threshold value encodings (Bits …",92,[[],["u16",15]]],[11,"supported_psb_frequency_encodings","","Bitmap of supported Configurable PSB frequency encodings …",92,[[],["u16",15]]],[11,"denominator","","An unsigned integer which is the denominator of the …",93,[[],["u32",15]]],[11,"numerator","","An unsigned integer which is the numerator of the …",93,[[],["u32",15]]],[11,"nominal_frequency","","An unsigned integer which is the nominal frequency of the …",93,[[],["u32",15]]],[11,"tsc_frequency","","“TSC frequency” = “core crystal clock frequency” …",93,[[],[["option",4],["u64",15]]]],[11,"processor_base_frequency","","Processor Base Frequency (in MHz).",94,[[],["u16",15]]],[11,"processor_max_frequency","","Maximum Frequency (in MHz).",94,[[],["u16",15]]],[11,"bus_frequency","","Bus (Reference) Frequency (in MHz).",94,[[],["u16",15]]],[11,"has_4k_entries","","4K page size entries supported by this structure",96,[[],["bool",15]]],[11,"has_2mb_entries","","2MB page size entries supported by this structure",96,[[],["bool",15]]],[11,"has_4mb_entries","","4MB page size entries supported by this structure",96,[[],["bool",15]]],[11,"has_1gb_entries","","1GB page size entries supported by this structure",96,[[],["bool",15]]],[11,"is_fully_associative","","Fully associative structure",96,[[],["bool",15]]],[11,"partitioning","","Partitioning (0: Soft partitioning between the logical …",96,[[],["u8",15]]],[11,"ways","","Ways of associativity.",96,[[],["u16",15]]],[11,"sets","","Number of Sets.",96,[[],["u32",15]]],[11,"cache_type","","Translation cache type field.",96,[[],["dattype",4]]],[11,"cache_level","","Translation cache level (starts at 1)",96,[[],["u8",15]]],[11,"max_addressable_ids","","Maximum number of addressable IDs for logical processors …",96,[[],["u16",15]]],[11,"get_soc_vendor_id","","",97,[[],["u16",15]]],[11,"get_project_id","","",97,[[],["u32",15]]],[11,"get_stepping_id","","",97,[[],["u32",15]]],[11,"get_vendor_brand","","",97,[[],["socvendorbrand",3]]],[11,"get_vendor_attributes","","",97,[[],[["socvendorattributesiter",3],["option",4]]]],[11,"as_string","","",99,[[],["str",15]]],[11,"identify","","",100,[[],["hypervisor",4]]],[11,"tsc_frequency","","TSC frequency in kHz.",100,[[],[["u32",15],["option",4]]]],[11,"apic_frequency","","(Virtual) Bus (local apic timer) frequency in kHz.",100,[[],[["u32",15],["option",4]]]],[11,"processor_brand_string","","Retrieve processor brand string.",101,[[],[["str",15],["option",4]]]],[11,"extended_signature","","Extended Processor Signature and Feature Bits.",101,[[],[["u32",15],["option",4]]]],[11,"cache_line_size","","Cache Line size in bytes",101,[[],[["option",4],["u8",15]]]],[11,"l2_associativity","","L2 Associativity field",101,[[],[["option",4],["l2associativity",4]]]],[11,"cache_size","","Cache size in 1K units",101,[[],[["option",4],["u16",15]]]],[11,"physical_address_bits","","#Physical Address Bits",101,[[],[["option",4],["u8",15]]]],[11,"linear_address_bits","","#Linear Address Bits",101,[[],[["option",4],["u8",15]]]],[11,"has_invariant_tsc","","Is Invariant TSC available?",101,[[],["bool",15]]],[11,"has_lahf_sahf","","Is LAHF/SAHF available in 64-bit mode?",101,[[],["bool",15]]],[11,"has_lzcnt","","Is LZCNT available?",101,[[],["bool",15]]],[11,"has_prefetchw","","Is PREFETCHW available?",101,[[],["bool",15]]],[11,"has_syscall_sysret","","Are fast system calls available.",101,[[],["bool",15]]],[11,"has_execute_disable","","Is there support for execute disable bit.",101,[[],["bool",15]]],[11,"has_1gib_pages","","Is there support for 1GiB pages.",101,[[],["bool",15]]],[11,"has_rdtscp","","Check support for rdtscp instruction.",101,[[],["bool",15]]],[11,"has_64bit_mode","","Check support for 64-bit mode.",101,[[],["bool",15]]],[11,"has_sme","","Secure Memory Encryption is supported if set.",102,[[],["bool",15]]],[11,"has_sev","","Secure Encrypted Virtualization is supported if set.",102,[[],["bool",15]]],[11,"has_page_flush_msr","","The Page Flush MSR is available if set.",102,[[],["bool",15]]],[11,"has_sev_es","","SEV Encrypted State is supported if set.",102,[[],["bool",15]]],[11,"physical_address_reduction","","",102,[[],["u8",15]]],[11,"c_bit_position","","",102,[[],["u8",15]]],[11,"max_encrypted_guests","","",102,[[],["u32",15]]],[11,"min_sev_no_es_asid","","",102,[[],["u32",15]]]],"p":[[3,"EFlags"],[3,"TaskStateSegment"],[3,"PAddr"],[3,"VAddr"],[3,"PML4Flags"],[3,"PML4Entry"],[3,"PDPTFlags"],[3,"PDPTEntry"],[3,"PDFlags"],[3,"PDEntry"],[3,"PTFlags"],[3,"PTEntry"],[3,"RFlags"],[3,"Descriptor64"],[3,"TaskStateSegment"],[3,"IoApic"],[3,"X2APIC"],[3,"XAPIC"],[4,"DeliveryMode"],[4,"DestinationMode"],[4,"DeliveryStatus"],[4,"Level"],[4,"TriggerMode"],[4,"DestinationShorthand"],[3,"Icr"],[4,"ApicId"],[8,"ApicControl"],[3,"Cr0"],[3,"Cr4"],[3,"Xcr0"],[3,"DescriptorTablePointer"],[3,"InterruptDescription"],[3,"PageFaultError"],[8,"RdRand"],[8,"RdSeed"],[3,"SegmentSelector"],[4,"SystemDescriptorTypes64"],[4,"SystemDescriptorTypes32"],[4,"DataSegmentType"],[4,"CodeSegmentType"],[8,"GateDescriptorBuilder"],[8,"TaskGateDescriptorBuilder"],[8,"SegmentDescriptorBuilder"],[8,"LdtDescriptorBuilder"],[8,"BuildDescriptor"],[3,"DescriptorBuilder"],[3,"Descriptor"],[3,"PinbasedControls"],[3,"PrimaryControls"],[3,"SecondaryControls"],[3,"EntryControls"],[3,"ExitControls"],[4,"VmFail"],[3,"CpuIdResult"],[4,"CacheInfoType"],[3,"CacheInfo"],[4,"CacheType"],[4,"TopologyType"],[3,"ExtendedState"],[4,"SgxSectionInfo"],[4,"DatType"],[4,"Hypervisor"],[4,"L2Associativity"],[4,"Ring"],[3,"Page"],[3,"LargePage"],[3,"HugePage"],[3,"CpuId"],[3,"VendorInfo"],[3,"CacheInfoIter"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[3,"CacheParametersIter"],[3,"CacheParameter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyIter"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateInfo"],[3,"ExtendedStateIter"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[3,"SgxSectionIter"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatIter"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"SoCVendorAttributesIter"],[3,"SoCVendorBrand"],[3,"HypervisorInfo"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);